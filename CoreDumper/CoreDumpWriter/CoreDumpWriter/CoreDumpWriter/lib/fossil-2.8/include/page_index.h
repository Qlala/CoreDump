/* Automatically generated code
** DO NOT EDIT!
**
** This file was generated by the mkindex.exe program based on
** comments in other Fossil source files.
*/
extern void access_log_page(void);
extern void page_admin_log(void);
extern void sql_page(void);
extern void th1_page(void);
extern void ainfo_page(void);
extern void alert_page(void);
extern void ambiguous_page(void);
extern void annotation_page(void);
extern void announce_page(void);
extern void artifact_page(void);
extern void artifact_stats_page(void);
extern void attachadd_page(void);
extern void attachview_page(void);
extern void attachview_page(void);
extern void attachlist_page(void);
extern void attachview_page(void);
extern void background_page(void);
extern void bigbloblist_page(void);
extern void annotation_page(void);
extern void bloblist_page(void);
extern void brlist_page(void);
extern void brtimeline_page(void);
extern void page_builtin_text(void);
extern void cache_getpage(void);
extern void cache_page(void);
extern void ci_page(void);
extern void ci_edit_page(void);
extern void ci_tags_page(void);
extern void contact_admin_page(void);
extern void cookie_page(void);
extern void tktedit_page(void);
extern void tktnew_page(void);
extern void page_dir(void);
extern void doc_page(void);
extern void doc_search_page(void);
extern void download_page(void);
extern void webmail_emailblob_page(void);
extern void webmail_emailoutq_page(void);
extern void errorlog_page(void);
extern void event_page(void);
extern void eventedit_page(void);
extern void diff_page(void);
extern void artifact_page(void);
extern void fileage_page(void);
extern void finfo_page(void);
extern void forum_main_page(void);
extern void forumnew_page(void);
extern void forumedit_page(void);
extern void forum_page_init(void);
extern void forum_page_init(void);
extern void forumpost_page(void);
extern void forumthread_page(void);
extern void hash_collisions_webpage(void);
extern void test_hash_color_page(void);
extern void help_page(void);
extern void hexdump_page(void);
extern void home_page(void);
extern void honeypot_page(void);
extern void home_page(void);
extern void info_page(void);
#ifdef FOSSIL_ENABLE_JSON
extern void json_page_top(void);
#endif
extern void uvlist_json_page(void);
extern void leaves_page(void);
extern void login_page(void);
extern void logo_page(void);
extern void login_page(void);
extern void markdown_rules_page(void);
extern void mimetype_list_page(void);
extern void mlink_page(void);
extern void modreq_page(void);
extern void login_page(void);
extern void home_page(void);
extern void annotation_page(void);
extern void rawartifact_page(void);
extern void rcvfrom_page(void);
extern void rcvfromlist_page(void);
extern void register_page(void);
extern void repo_tabsize_page(void);
extern void repo_schema_page(void);
extern void repo_stat1_page(void);
extern void view_list(void);
extern void stats_report_page(void);
extern void view_edit(void);
extern void view_edit(void);
extern void view_see_sql(void);
extern void rptview_page(void);
extern void page_script_js(void);
extern void search_page(void);
extern void secaudit0_page(void);
extern void setup_page(void);
extern void setup_access(void);
extern void setup_adunit(void);
extern void setup_config(void);
extern void setup_login_group(void);
extern void setup_logo(void);
extern void setup_modreq(void);
extern void setup_notification(void);
extern void setup_settings(void);
extern void setup_skin(void);
extern void setup_skin_admin(void);
extern void setup_skinedit(void);
extern void setup_smtp(void);
extern void setup_smtp_route(void);
extern void setup_timeline(void);
extern void setup_ucap_list(void);
extern void user_edit(void);
extern void setup_ulist(void);
extern void setup_ulist_notes(void);
extern void setup_wiki(void);
extern void shun_page(void);
extern void sitemap_page(void);
extern void baseline_zip_page(void);
extern void page_srchsetup(void);
extern void stat_page(void);
extern void page_style_css(void);
extern void subscribe_page(void);
extern void subscriber_list_page(void);
extern void taglist_page(void);
extern void tagtimeline_page(void);
extern void takeitprivate_page(void);
extern void tarball_page(void);
extern void event_page(void);
extern void eventedit_page(void);
extern void test_all_help_page(void);
extern void backlink_timeline_page(void);
extern void test_builtin_list_page(void);
extern void captcha_test(void);
extern void search_data_page(void);
extern void piechart_test_page(void);
extern void test_rename_list_page(void);
extern void test_warning_page(void);
extern void page_test_env(void);
extern void tkt_home_page(void);
extern void page_timeline(void);
extern void page_timeline_rss(void);
extern void test_timewarp_page(void);
extern void tinfo_page(void);
extern void tktedit_page(void);
extern void tkthistory_page(void);
extern void tktnew_page(void);
extern void tktsetup_page(void);
extern void tktsetup_change_page(void);
extern void tktsetup_com_page(void);
extern void tktsetup_editpage_page(void);
extern void tktsetup_keytplt_page(void);
extern void tktsetup_newpage_page(void);
extern void tktsetup_reportlist(void);
extern void tktsetup_rpttplt_page(void);
extern void tktsetup_tab_page(void);
extern void tktsetup_timeline_page(void);
extern void tktsetup_viewpage_page(void);
extern void tkt_srchpage(void);
extern void tkttimeline_page(void);
extern void tktview_page(void);
extern void page_tree(void);
extern void unsubscribe_page(void);
extern void urllist_page(void);
extern void doc_page(void);
extern void uvlist_page(void);
extern void vdiff_page(void);
extern void test_version_page(void);
extern void ci_page(void);
extern void vpatch_page(void);
extern void page_waliassetup(void);
extern void wcontent_page(void);
extern void wdiff_page(void);
extern void webmail_page(void);
extern void wfind_page(void);
extern void artifact_page(void);
extern void whistory_page(void);
extern void wiki_page(void);
extern void wiki_rules_page(void);
extern void wikiappend_page(void);
extern void wikiedit_page(void);
extern void wiki_helppage(void);
extern void wikinew_page(void);
extern void wiki_srchpage(void);
extern void winfo_page(void);
extern void page_xfer(void);
extern void xfersetup_page(void);
extern void xfersetup_com_page(void);
extern void xfersetup_commit_page(void);
extern void xfersetup_push_page(void);
extern void xfersetup_ticket_page(void);
extern void baseline_zip_page(void);
extern void delta_3waymerge_cmd(void);
extern void add_cmd(void);
extern void addremove_cmd(void);
extern void alert_cmd(void);
extern void all_cmd(void);
extern void ci_amend_cmd(void);
extern void annotate_cmd(void);
extern void artifact_cmd(void);
extern void attachment_cmd(void);
extern void backoffice_command(void);
extern void bisect_cmd(void);
extern void annotate_cmd(void);
extern void branch_cmd(void);
extern void bundle_cmd(void);
extern void cache_cmd(void);
extern void cat_cmd(void);
extern void cmd_cgi(void);
extern void status_cmd(void);
extern void checkout_cmd(void);
extern void commit_cmd(void);
extern void clean_cmd(void);
extern void clone_cmd(void);
extern void close_cmd(void);
extern void checkout_cmd(void);
extern void commit_cmd(void);
extern void configuration_cmd(void);
extern void dbstat_cmd(void);
extern void deconstruct_cmd(void);
extern void delete_cmd(void);
extern void descendants_cmd(void);
extern void diff_cmd(void);
extern void export_cmd(void);
extern void extras_cmd(void);
extern void finfo_cmd(void);
extern void delete_cmd(void);
extern void fts_config_cmd(void);
#ifdef FOSSIL_HAVE_FUSEFS
extern void fusefs_cmd(void);
#endif
extern void diff_cmd(void);
extern void re_grep_cmd(void);
extern void hash_policy_command(void);
extern void help_cmd(void);
extern void cmd_http(void);
extern void import_cmd(void);
extern void info_cmd(void);
extern void create_repository_cmd(void);
#ifdef FOSSIL_ENABLE_JSON
extern void json_cmd_top(void);
#endif
extern void leaves_cmd(void);
extern void ls_cmd(void);
extern void md5sum_test(void);
extern void merge_cmd(void);
extern void mv_cmd(void);
extern void create_repository_cmd(void);
extern void cmd_open(void);
extern void pop3d_command(void);
extern void annotate_cmd(void);
extern void publish_cmd(void);
extern void pull_cmd(void);
extern void purge_cmd(void);
extern void push_cmd(void);
extern void rebuild_database(void);
extern void reconstruct_cmd(void);
extern void undo_cmd(void);
extern void remote_url_cmd(void);
extern void mv_cmd(void);
extern void reparent_cmd(void);
extern void revert_cmd(void);
extern void delete_cmd(void);
extern void cmd_timeline_rss(void);
extern void scrub_cmd(void);
extern void search_cmd(void);
extern void cmd_webserver(void);
extern void setting_cmd(void);
extern void sha1sum_test(void);
extern void sha3sum_test(void);
extern void shell_cmd(void);
extern void smtp_server(void);
extern void cmd_sqlite3(void);
extern void sqlar_cmd(void);
extern void cmd_sqlite3(void);
extern void stash_cmd(void);
extern void status_cmd(void);
extern void sync_cmd(void);
extern void tag_cmd(void);
extern void tarball_cmd(void);
extern void test_add_alert_cmd(void);
extern void test_agg_cksum_cmd(void);
extern void test_alert_cmd(void);
extern void test_all_help_cmd(void);
extern void test_ambiguous_cmd(void);
extern void ancestor_path_test_cmd(void);
extern void test_backoffice_lease(void);
extern void test_builtin_get(void);
extern void test_builtin_list(void);
extern void cmd_test_canonical_name(void);
extern void test_captcha(void);
extern void test_clusters_cmd(void);
extern void test_comment_format(void);
extern void test_commit_warning(void);
extern void compress_cmd(void);
extern void compress2_cmd(void);
extern void contains_selector_cmd(void);
extern void test_content_deltify_cmd(void);
extern void test_content_erase(void);
extern void test_content_put_cmd(void);
extern void test_content_rawget_cmd(void);
extern void test_content_undelta_cmd(void);
extern void test_convert_stext(void);
extern void test_createcluster_cmd(void);
extern void test_crosslink_cmd(void);
extern void test_cycle_compress(void);
extern void test_database_name_cmd(void);
extern void test_date_format(void);
extern void test_email_decode_cmd(void);
extern void test_decode64_cmd(void);
extern void cmd_test_delta(void);
extern void delta_analyze_cmd(void);
extern void delta_apply_cmd(void);
extern void delta_create_cmd(void);
extern void test_describe_artifacts_cmd(void);
extern void test_detach_cmd(void);
extern void test_diff_cmd(void);
extern void test_dir_size_cmd(void);
extern void test_echo_cmd(void);
extern void test_refcheck_emailblob(void);
extern void test_encode64_cmd(void);
extern void test_etag_cmd(void);
extern void test_file_copy(void);
extern void cmd_test_file_environment(void);
extern void test_fileage_cmd(void);
extern void filezip_cmd(void);
extern void test_find_mx(void);
extern void test_find_pivot(void);
extern void test_fingerprint(void);
extern void forumthread_cmd(void);
extern void glob_test_cmd(void);
extern void re_test_grep(void);
extern void test_gzip_cmd(void);
extern void test_hash_color(void);
#if 0
extern void test_hash_from_path_cmd(void);
#endif
extern void user_hash_passwords_cmd(void);
extern void test_html_tidy(void);
extern void test_html_to_text(void);
extern void cmd_test_http(void);
extern void test_integrity(void);
extern void test_ishuman(void);
extern void isspace_cmd(void);
extern void leaf_ambiguity_warning_test(void);
extern void test_list_page(void);
extern void cmd_test_webpage_list(void);
extern void loadavg_test_cmd(void);
extern void looks_like_utf_test_cmd(void);
extern void alert_test_mailbox_hashname(void);
extern void test_markdown_render(void);
extern void test_match_cmd(void);
extern void mimetype_test_cmd(void);
extern void test_missing(void);
extern void move_repo_cmd(void);
extern void test_name_change(void);
extern void test_name_to_id(void);
extern void test_obscure_cmd(void);
extern void test_orphans(void);
extern void manifest_test_parse_all_blobs_cmd(void);
extern void manifest_test_parse_cmd(void);
extern void test_phatoms_cmd(void);
extern void test_process_id_command(void);
extern void test_prompt_password_cmd(void);
extern void test_prompt_user_cmd(void);
extern void test_rawdiff_cmd(void);
extern void cmd_test_relative_name(void);
extern void test_reserved_names(void);
extern void test_search_stext(void);
extern void test_set_mtime(void);
extern void shortest_path_test_cmd(void);
extern void cmd_test_simplify_name(void);
extern void test_smtp_probe(void);
extern void test_smtp_send(void);
extern void test_smtp_senddata(void);
extern void test_subtree_cmd(void);
extern void testtag_cmd(void);
extern void test_tarball_cmd(void);
extern void file_test_tempname(void);
extern void test_th_eval(void);
#ifdef FOSSIL_ENABLE_TH1_HOOKS
extern void test_th_hook(void);
#endif
extern void test_th_render(void);
extern void test_th_source(void);
extern void test_ticket_rebuild(void);
extern void test_timespan_cmd(void);
extern void test_timewarp_cmd(void);
extern void test_topological_sort(void);
extern void cmd_test_tree_name(void);
extern void test_unclusterd_cmd(void);
extern void uncompress_cmd(void);
extern void test_unsent_cmd(void);
extern void cmd_test_urlparser(void);
extern void test_usernames_cmd(void);
extern void file_test_valid_for_windows(void);
extern void test_var_get_cmd(void);
extern void test_var_list_cmd(void);
extern void test_var_set_cmd(void);
extern void verify_all_cmd(void);
extern void test_whatis_all_cmd(void);
extern void test_wiki_render(void);
extern void test_without_rowid(void);
extern void cmd_test_xfer(void);
extern void ticket_cmd(void);
extern void timeline_cmd(void);
extern void cmd_webserver(void);
extern void undo_cmd(void);
extern void unpublished_cmd(void);
extern void setting_cmd(void);
extern void unversioned_cmd(void);
extern void update_cmd(void);
extern void user_cmd(void);
extern void unversioned_cmd(void);
extern void version_cmd(void);
extern void whatis_cmd(void);
extern void wiki_cmd(void);
#ifdef _WIN32
extern void cmd_win32_service(void);
#endif
extern void zip_cmd(void);
static const char zHelp430[] =
  "Show login attempts, including timestamp and IP address.\n"
  "Requires Admin privileges.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   y=N      1: success only.  2: failure only.  3: both (default: 3)\n"
  "   n=N      Number of entries to show (default: 200)\n"
  "   o=N      Skip this many entries (default: 0)";
static const char zHelp330[] =
  "Shows the contents of the admin_log table, which is only created if\n"
  "the admin-log setting is enabled. Requires Admin or Setup ('a' or\n"
  "'s') permissions.";
static const char zHelp328[] =
  "Run raw SQL commands against the database file using the web interface.\n"
  "Requires Setup privileges.";
static const char zHelp329[] =
  "Run raw TH1 commands using the web interface.  If Tcl integration was\n"
  "enabled at compile-time and the \"tcl\" setting is enabled, Tcl commands\n"
  "may be run as well.  Requires Admin privilege.";
static const char zHelp031[] =
  "URL: /ainfo?name=ARTIFACTID\n"
  "\n"
  "Show the details of an attachment artifact.";
static const char zHelp018[] =
  "Edit email alert and notification settings.\n"
  "\n"
  "The subscriber is identified in either of two ways:\n"
  "\n"
  "   (1)  The name= query parameter contains the subscriberCode.\n"
  "        \n"
  "   (2)  The user is logged into an account other than \"nobody\" or\n"
  "        \"anonymous\".  In that case the notification settings\n"
  "        associated with that account can be edited without needing\n"
  "        to know the subscriber code.";
static const char zHelp270[] =
  "URL: /ambiguous?name=NAME&src=WEBPAGE\n"
  "\n"
  "The NAME given by the name parameter is ambiguous.  Display a page\n"
  "that shows all possible choices and let the user select between them.";
static const char zHelp167[] =
  "URL: /annotate?checkin=ID&filename=FILENAME\n"
  "URL: /blame?checkin=ID&filename=FILENAME\n"
  "URL: /praise?checkin=ID&filename=FILENAME\n"
  "\n"
  "Show the most recent change to each line of a text file.  /annotate shows\n"
  "the date of the changes and the check-in hash (with a link to the\n"
  "check-in).  /blame and /praise also show the user who made the check-in.\n"
  "\n"
  "Reverse Annotations:  Normally, these web pages look at versions of\n"
  "FILENAME moving backwards in time back toward the root check-in.  However,\n"
  "if the origin= query parameter is used to specify some future check-in\n"
  "(example: \"origin=trunk\") then these pages show changes moving towards\n"
  "that alternative origin.  Thus using \"origin=trunk\" on an historical\n"
  "version of the file shows the first time each line in the file was changed\n"
  "or removed by any subsequent check-in.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   checkin=ID          The check-in at which to start the annotation\n"
  "   filename=FILENAME   The filename.\n"
  "   filevers=BOOLEAN    Show file versions rather than check-in versions\n"
  "   limit=LIMIT         Limit the amount of analysis:\n"
  "                          \"none\"  No limit\n"
  "                          \"Xs\"    As much as can be computed in X seconds\n"
  "                          \"N\"     N versions\n"
  "   log=BOOLEAN         Show a log of versions analyzed\n"
  "   origin=ID           The origin checkin.  If unspecified, the root\n"
  "                          check-in over the entire repository is used.\n"
  "                          Specify \"origin=trunk\" or similar for a reverse\n"
  "                          annotation\n"
  "   w=BOOLEAN           Ignore whitespace";
static const char zHelp024[] =
  "A web-form, available to users with the \"Send-Announcement\" or \"A\"\n"
  "capability, that allows one to send announcements to whomever\n"
  "has subscribed to receive announcements.  The administrator can\n"
  "also send a message to an arbitrary email address and/or to all\n"
  "subscribers regardless of whether or not they have elected to\n"
  "receive announcements.";
static const char zHelp236[] =
  "Typical usage:\n"
  "\n"
  "   /artifact/HASH\n"
  "   /whatis/HASH\n"
  "   /file/NAME\n"
  "\n"
  "Additional query parameters:\n"
  "\n"
  "  ln              - show line numbers\n"
  "  ln=N            - highlight line number N\n"
  "  ln=M-N          - highlight lines M through N inclusive\n"
  "  ln=M-N+Y-Z      - highlight lines M through N and Y through Z (inclusive)\n"
  "  verbose         - show more detail in the description\n"
  "  download        - redirect to the download (artifact page only)\n"
  "  name=SHA1HASH   - Provide the SHA1HASH as a query parameter\n"
  "  filename=NAME   - Show information for content file NAME\n"
  "  fn=NAME         - \"fn\" is shorthand for \"filename\"\n"
  "  ci=VERSION      - The specific check-in to use for \"filename=\".\n"
  "\n"
  "The /artifact page show the complete content of a file\n"
  "identified by HASH as preformatted text.  The\n"
  "/whatis page shows only a description of the file.  The /file\n"
  "page shows the most recent version of the file or directory\n"
  "called NAME, or a list of the top-level directory if NAME is\n"
  "omitted.";
static const char zHelp364[] =
  "Show information about the sizes of artifacts in this repository";
static const char zHelp030[] =
  "Add a new attachment.\n"
  "\n"
  "   tkt=TICKETUUID\n"
  "   page=WIKIPAGE\n"
  "   technote=TECHNOTEUUID\n"
  "   from=URL";
static const char zHelp027[] =
  "Download or display an attachment.\n"
  "Query parameters:\n"
  "\n"
  "   tkt=TICKETUUID\n"
  "   page=WIKIPAGE\n"
  "   technote=TECHNOTEUUID\n"
  "   file=FILENAME\n"
  "   attachid=ID";
static const char zHelp026[] =
  "List attachments.\n"
  "\n"
  "   tkt=TICKETUUID\n"
  "   page=WIKIPAGE\n"
  "\n"
  "At most one of technote=, tkt= or page= are supplied.\n"
  "If none is given, all attachments are listed.  If one is given,\n"
  "only attachments for the designated technote, ticket or wiki page\n"
  "are shown. TECHNOTEUUID and TICKETUUID may be just a prefix of the\n"
  "relevant technical note or ticket, in which case all attachments\n"
  "of all technical notes or tickets with the prefix will be listed.";
static const char zHelp186[] =
  "Return the background image.  If no background image is defined, a\n"
  "built-in 16x16 pixel white GIF is returned.";
static const char zHelp276[] =
  "Return a page showing the largest artifacts in the repository in order\n"
  "of decreasing size.\n"
  "\n"
  "  n=N         Show the top N artifacts";
static const char zHelp275[] =
  "Return a page showing all artifacts in the repository.  Query parameters:\n"
  "\n"
  "  n=N         Show N artifacts\n"
  "  s=S         Start with artifact number S\n"
  "  unpub       Show only unpublished artifacts\n"
  "  hclr        Color code hash types (SHA1 vs SHA3)";
static const char zHelp043[] =
  "Show a list of branches.  With no query parameters, a sortable table\n"
  "is used to show all branches.  If query parameters are present a\n"
  "fixed bullet list is shown.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    all         Show all branches\n"
  "    closed      Show only closed branches\n"
  "    open        Show only open branches (default behavior)\n"
  "    colortest   Show all branches with automatic color";
static const char zHelp044[] =
  "Show a timeline of all branches\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    ng            No graph\n"
  "    nohidden      Hide check-ins with \"hidden\" tag\n"
  "    onlyhidden    Show only check-ins with \"hidden\" tag\n"
  "    brbg          Background color by branch name\n"
  "    ubg           Background color by user name";
static const char zHelp369[] =
  "URL:  builtin/FILENAME\n"
  "\n"
  "Return the built-in text given by FILENAME.  This is used internally \n"
  "by many Fossil web pages to load built-in javascript files.\n"
  "\n"
  "If the id= query parameter is present, then Fossil assumes that the\n"
  "result is immutable and sets a very large cache retention time (1 year).";
static const char zHelp056[] =
  "Usage:  /cacheget?key=KEY\n"
  "\n"
  "Download a single entry for the cache, identified by KEY.\n"
  "This page is normally a hyperlink from the /cachestat page.\n"
  "Requires Admin privilege.";
static const char zHelp055[] =
  "Show information about the webpage cache.  Requires Setup privilege.";
static const char zHelp241[] =
  "Edit a check-in.  (Check-ins are immutable and do not really change.\n"
  "This page really creates supplemental tags that affect the display\n"
  "of the check-in.)\n"
  "\n"
  "Query parmeters:\n"
  "\n"
  "    rid=INTEGER        Record ID of the check-in to edit (REQUIRED)\n"
  "\n"
  "POST parameters after pressing \"Perview\", \"Cancel\", or \"Apply\":\n"
  "\n"
  "    c=TEXT             New check-in comment\n"
  "    u=TEXT             New user name\n"
  "    newclr             Apply a background color\n"
  "    clr=TEXT           New background color (only if newclr)\n"
  "    pclr               Propagate new background color (only if newclr)\n"
  "    dt=TEXT            New check-in date/time (ISO8610 format)\n"
  "    newtag             Add a new tag to the check-in\n"
  "    tagname=TEXT       Name of the new tag to be added (only if newtag)\n"
  "    newbr              Put the check-in on a new branch\n"
  "    brname=TEXT        Name of the new branch (only if newbr)\n"
  "    close              Close this check-in\n"
  "    hide               Hide this check-in\n"
  "    cNNN               Cancel tag with tagid=NNN\n"
  "\n"
  "    cancel             Cancel the edit.  Return to the check-in view\n"
  "    preview            Show a preview of the edited check-in comment\n"
  "    apply              Apply changes";
static const char zHelp228[] =
  "URL:    /ci_tags?name=ARTIFACTID\n"
  "\n"
  "Show all tags and properties for a given check-in.\n"
  "\n"
  "This information used to be part of the main /ci page, but it is of\n"
  "marginal usefulness.  Better to factor it out into a sub-screen.";
static const char zHelp023[] =
  "A web-form to send an email message to the repository administrator,\n"
  "or (with appropriate permissions) to anybody.";
static const char zHelp087[] =
  "Show the current display settings contained in the\n"
  "\"fossil_display_settings\" cookie.";
static const char zHelp045[] =
  "Show the files and subdirectories within a single directory of the\n"
  "source tree.  Only files for a single check-in are shown if the ci=\n"
  "query parameter is present.  If ci= is missing, the union of files\n"
  "across all check-ins is shown.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   name=PATH        Directory to display.  Optional.  Top-level if missing\n"
  "   ci=LABEL         Show only files in this check-in.  Optional.\n"
  "   type=TYPE        TYPE=flat: use this display\n"
  "                    TYPE=tree: use the /tree display instead";
static const char zHelp187[] =
  "Search for documents that match a user-supplied full-text search pattern.\n"
  "If no pattern is specified (by the s= query parameter) then the user\n"
  "is prompted to enter a search string.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    s=PATTERN             Search for PATTERN";
static const char zHelp072[] =
  "Provide a simple page that enables newbies to download the latest tarball or\n"
  "ZIP archive, and provides instructions on how to clone.";
static const char zHelp435[] =
  "This page, accessible only to administrators, allows easy viewing of\n"
  "the emailblob table - the table that contains the text of email messages\n"
  "both inbound and outbound, and transcripts of SMTP sessions.\n"
  "\n"
  "   id=N          Show the text of emailblob with emailid==N";
static const char zHelp436[] =
  "This page, accessible only to administrators, allows easy viewing of\n"
  "the emailoutq table - the table that contains the email messages\n"
  "that are queued for transmission via SMTP.";
static const char zHelp317[] =
  "Show the content of the error log.  Only the administrator can view\n"
  "this page.";
static const char zHelp233[] =
  "URL: fdiff?v1=UUID&v2=UUID\n"
  "\n"
  "Two arguments, v1 and v2, identify the artifacts to be diffed.\n"
  "Show diff side by side unless sbs is 0.  Generate plain text if\n"
  "\"patch\" is present, otherwise generate \"pretty\" HTML.\n"
  "\n"
  "Alternative URL:  fdiff?from=filename1&to=filename2&ci=checkin\n"
  "\n"
  "If the \"from\" and \"to\" query parameters are both present, then they are\n"
  "the names of two files within the check-in \"ci\" that are diffed.  If the\n"
  "\"ci\" parameter is omitted, then the most recent check-in (\"tip\") is\n"
  "used.\n"
  "\n"
  "Additional parameters:\n"
  "\n"
  "     dc=N             Show N lines of context around each diff\n"
  "     patch            Use the patch diff format\n"
  "     regex=REGEX      Only show differences that match REGEX\n"
  "     sbs=BOOLEAN      Turn side-by-side diffs on and off (default: on)\n"
  "     verbose=BOOLEAN  Show more detail when describing artifacts\n"
  "     w=BOOLEAN        Ignore whitespace";
static const char zHelp048[] =
  "Show all files in a single check-in (identified by the name= query\n"
  "parameter) in order of increasing age.\n"
  "\n"
  "Parameters:\n"
  "  name=VERSION   Selects the check-in version (default=tip).\n"
  "  glob=STRING    Only shows files matching this glob pattern\n"
  "                 (e.g. *.c or *.txt).\n"
  "  showid         Show RID values for debugging";
static const char zHelp210[] =
  "URL: /finfo?name=FILENAME\n"
  "\n"
  "Show the change history for a single file.\n"
  "\n"
  "Additional query parameters:\n"
  "\n"
  "   a=DATETIME Only show changes after DATETIME\n"
  "   b=DATETIME Only show changes before DATETIME\n"
  "   m=HASH     Mark this particular file version\n"
  "   n=NUM      Show the first NUM changes only\n"
  "   brbg       Background color by branch name\n"
  "   ubg        Background color by user name\n"
  "   ci=UUID    Ancestors of a particular check-in\n"
  "   orig=UUID  If both ci and orig are supplied, only show those\n"
  "                changes on a direct path from orig to ci.\n"
  "   showid     Show RID values for debugging\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, and it may also name a\n"
  "timezone offset from UTC as \"-HH:MM\" (westward) or \"+HH:MM\"\n"
  "(eastward). Either no timezone suffix or \"Z\" means UTC.";
static const char zHelp219[] =
  "The main page for the forum feature.  Show a list of recent forum\n"
  "threads.  Also show a search box at the top if search is enabled,\n"
  "and a button for creating a new thread, if enabled.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   n=N             The number of threads to show on each page\n"
  "   x=X             Skip the first X threads";
static const char zHelp217[] =
  "Start a new forum thread.";
static const char zHelp218[] =
  "Edit an existing forum message.\n"
  "Query parameters:\n"
  "\n"
  "  fpid=X        Hash of the post to be editted.  REQUIRED";
static const char zHelp215[] =
  "Start a new thread on the forum or reply to an existing thread.\n"
  "But first prompt to see if the user would like to log in.";
static const char zHelp213[] =
  "Show a single forum posting. The posting is shown in context with\n"
  "it's entire thread.  The selected posting is enclosed within\n"
  "<div class='forumSel'>...</div>.  Javascript is used to move the\n"
  "selected posting into view after the page loads.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  name=X        REQUIRED.  The hash of the post to display\n"
  "  t=MODE        Display mode. MODE is 'c' for chronological or\n"
  "                  'h' for hierarchical, or 'a' for automatic.";
static const char zHelp214[] =
  "Show all forum messages associated with a particular message thread.\n"
  "The result is basically the same as /forumpost except that none of\n"
  "the postings in the thread are selected.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  name=X        REQUIRED.  The hash of any post of the thread.\n"
  "  t=MODE        Display mode. MODE is 'c' for chronological or\n"
  "                  'h' for hierarchical, or 'a' for automatic.";
static const char zHelp280[] =
  "Show the number of hash collisions for hash prefixes of various lengths.";
static const char zHelp389[] =
  "Print out the color names associated with each tag.  Used for\n"
  "testing the hash_color() function.";
static const char zHelp177[] =
  "URL: /help?name=CMD\n"
  "\n"
  "Show the built-in help text for CMD.  CMD can be a command-line interface\n"
  "command or a page name from the web interface or a setting.";
static const char zHelp235[] =
  "URL: /hexdump?name=ARTIFACTID\n"
  "\n"
  "Show the complete content of a file identified by ARTIFACTID\n"
  "as preformatted text.\n"
  "\n"
  "Other parameters:\n"
  "\n"
  "    verbose              Show more detail when describing the object";
static const char zHelp437[] =
  "The /home, /index, and /not_found pages all redirect to the homepage\n"
  "configured by the administrator.";
static const char zHelp371[] =
  "This page is a honeypot for spiders and bots.";
static const char zHelp240[] =
  "URL: info/ARTIFACTID\n"
  "\n"
  "The argument is a artifact ID which might be a check-in or a file or\n"
  "a ticket changes or a wiki edit or something else.\n"
  "\n"
  "Figure out what the artifact ID is and display it appropriately.";
#ifdef FOSSIL_ENABLE_JSON
static const char zHelp243[] =
  "Pages under /json/... must be entered into JsonPageDefs.\n"
  "This function dispatches them, and is the HTTP equivalent of\n"
  "json_cmd_top().";
#endif
static const char zHelp421[] =
  "Return a complete list of unversioned files as JSON.  The JSON\n"
  "looks like this:\n"
  "\n"
  "[{\"name\":NAME,\n"
  "  \"mtime\":MTIME,\n"
  "  \"hash\":HASH,\n"
  "  \"size\":SIZE,\n"
  "  \"user\":USER}]";
static const char zHelp164[] =
  "Show leaf check-ins in a timeline.  By default only open leaves\n"
  "are listed.\n"
  "\n"
  "A \"leaf\" is a check-in with no children in the same branch.  A\n"
  "\"closed leaf\" is a leaf that has a \"closed\" tag.  An \"open leaf\"\n"
  "is a leaf without a \"closed\" tag.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    all           Show all leaves\n"
  "    closed        Show only closed leaves\n"
  "    ng            No graph\n"
  "    nohidden      Hide check-ins with \"hidden\" tag\n"
  "    onlyhidden    Show only check-ins with \"hidden\" tag\n"
  "    brbg          Background color by branch name\n"
  "    ubg           Background color by user name";
static const char zHelp248[] =
  "The login/logout page.  Parameters:\n"
  "\n"
  "   g=URL             Jump back to this URL after login completes\n"
  "   anon              The g=URL is not accessible by \"nobody\" but is\n"
  "                     accessible by \"anonymous\"";
static const char zHelp185[] =
  "Return the logo image.  This image is available to anybody who can see\n"
  "the login page.  It is designed for use in the upper left-hand corner\n"
  "of the header.";
static const char zHelp440[] =
  "Show a summary of the Markdown wiki formatting rules.";
static const char zHelp182[] =
  "Show the built-in table used to guess embedded document mimetypes\n"
  "from file suffixes.";
static const char zHelp211[] =
  "URL: /mlink?name=FILENAME\n"
  "URL: /mlink?ci=NAME\n"
  "\n"
  "Show all MLINK table entries for a particular file, or for\n"
  "a particular check-in.\n"
  "\n"
  "This screen is intended for use by Fossil developers to help\n"
  "in debugging Fossil itself.  Ordinary Fossil users are not\n"
  "expected to know what the MLINK table is or why it is important.\n"
  "\n"
  "To avoid confusing ordinary users, this page is only available\n"
  "to administrators.";
static const char zHelp268[] =
  "Show all pending moderation request";
static const char zHelp234[] =
  "URL: /raw?name=ARTIFACTID&m=TYPE\n"
  "URL: /raw?ci=BRANCH&filename=NAME\n"
  "\n"
  "Return the uninterpreted content of an artifact.  Used primarily\n"
  "to view artifacts that are images.";
static const char zHelp341[] =
  "Show a single RCVFROM table entry identified by the rcvid= query\n"
  "parameters.  Requires Admin privilege.";
static const char zHelp340[] =
  "Show a listing of RCVFROM table entries.\n"
  "\n"
  "The RCVFROM table records where this repository received each\n"
  "artifact, including the time of receipt, user, and IP address.\n"
  "\n"
  "Access requires Admin privilege.";
static const char zHelp251[] =
  "Page to allow users to self-register.  The \"self-register\" setting\n"
  "must be enabled for this page to operate.";
static const char zHelp363[] =
  "Show relative sizes of tables in the repository database.";
static const char zHelp361[] =
  "Show the repository schema";
static const char zHelp362[] =
  "Show the sqlite_stat1 table for the repository schema";
static const char zHelp301[] =
  "Main menu for Tickets.";
static const char zHelp365[] =
  "Shows activity reports for the repository.\n"
  "\n"
  "Query Parameters:\n"
  "\n"
  "  view=REPORT_NAME  Valid values: bymonth, byyear, byuser\n"
  "  user=NAME         Restricts statistics to the given user\n"
  "  type=TYPE         Restricts the report to a specific event type:\n"
  "                    ci (check-in), w (wiki), t (ticket), g (tag)\n"
  "                    Defaulting to all event types.\n"
  "\n"
  "The view-specific query parameters include:\n"
  "\n"
  "view=byweek:\n"
  "\n"
  "  y=YYYY            The year to report (default is the server's\n"
  "                    current year).";
static const char zHelp303[] =
  "Create (/rptnew) or edit (/rptedit) a ticket report format.\n"
  "Query parameters:\n"
  "\n"
  "    rn=N           Ticket report number. (required)\n"
  "    t=TITLE        Title of the report format\n"
  "    w=USER         Owner of the report format\n"
  "    s=SQL          SQL text used to implement the report\n"
  "    k=KEY          Color key";
static const char zHelp302[] =
  "URL: /rptsql?rn=N\n"
  "\n"
  "Display the SQL query used to generate a ticket report.  The rn=N\n"
  "query parameter identifies the specific report number to be displayed.";
static const char zHelp305[] =
  "Generate a report.  The rn query parameter is the report number\n"
  "corresponding to REPORTFMT.RN.  If the tablist query parameter exists,\n"
  "then the output consists of lines of tab-separated fields instead of\n"
  "an HTML table.";
static const char zHelp367[] =
  "Return the \"Javascript\" content for the current skin (if there is any)";
static const char zHelp310[] =
  "Search for check-in comments, documents, tickets, or wiki that\n"
  "match a user-supplied pattern.\n"
  "\n"
  "   s=PATTERN       Specify the full-text pattern to search for\n"
  "   y=TYPE          What to search.\n"
  "                     c -> check-ins\n"
  "                     d -> documentation\n"
  "                     t -> tickets\n"
  "                     w -> wiki\n"
  "                     e -> tech notes\n"
  "                     f -> forum\n"
  "                   all -> everything";
static const char zHelp315[] =
  "Run a security audit of the current Fossil setup.\n"
  "This page requires administrator access";
static const char zHelp318[] =
  "Main menu for the administrative pages.  Requires Admin or Setup\n"
  "privileges.  Links to sub-pages only usable by Setup users are\n"
  "shown only to Setup users.";
static const char zHelp319[] =
  "The access-control settings page.  Requires Setup privileges.";
static const char zHelp326[] =
  "Administrative page for configuring and controlling ad units\n"
  "and how they are displayed.";
static const char zHelp323[] =
  "The \"Admin/Configuration\" page.  Requires Setup privilege.";
static const char zHelp320[] =
  "Change how the current repository participates in a login\n"
  "group.";
static const char zHelp327[] =
  "Administrative page for changing the logo image.";
static const char zHelp325[] =
  "Admin page for setting up moderation of tickets and wiki.";
static const char zHelp008[] =
  "Administrative page for configuring and controlling email notification.\n"
  "Normally accessible via the /Admin/Notification menu.";
static const char zHelp322[] =
  "Change or view miscellaneous settings.  Part of the\n"
  "/setup pages requiring Setup privileges.";
static const char zHelp345[] =
  "Generate a page showing the steps needed to customize a skin.";
static const char zHelp343[] =
  "Administrative actions on skins.  For administrators only.";
static const char zHelp344[] =
  "Edit aspects of a skin determined by the w= query parameter.\n"
  "Requires Admin or Setup privileges.\n"
  "\n"
  "   w=NUM     -- 0=CSS, 1=footer, 2=header, 3=details, 4=js\n"
  "   sk=NUM    -- the draft skin number";
static const char zHelp350[] =
  "Administrative page for configuring and controlling inbound email and\n"
  "output email queuing.  This page is available to administrators\n"
  "only via the /Admin/EmailServer menu.";
static const char zHelp351[] =
  "Edit a single entry in the emailroute table.\n"
  "Query parameters:\n"
  "\n"
  "   eaddr=ADDR          ADDR is the email address as edited.\n"
  "\n"
  "   oaddr=ADDR          The original email address prior to editing.\n"
  "                       Omit to add a new address.\n"
  "\n"
  "   epolicy=TXT         The routing policy.";
static const char zHelp321[] =
  "Edit administrative settings controlling the display of\n"
  "timelines.";
static const char zHelp335[] =
  "A documentation page showing the meaning of the various user capabilities\n"
  "code letters.";
static const char zHelp336[] =
  "Edit information about a user or create a new user.\n"
  "Requires Admin privileges.";
static const char zHelp333[] =
  "Show a list of users.  Clicking on any user jumps to the edit\n"
  "screen for that user.  Requires Admin privileges.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  with=CAP         Only show users that have one or more capabilities in CAP.";
static const char zHelp334[] =
  "A documentation page showing notes about user configuration.  This\n"
  "information used to be a side-bar on the user list page, but has been\n"
  "factored out for improved presentation.";
static const char zHelp324[] =
  "The \"Admin/Wiki\" page.  Requires Setup privilege.";
static const char zHelp339[] =
  "View the hashes of all shunned artifacts.  Add new hashes\n"
  "to the shun set.  Requires Admin privilege.";
static const char zHelp342[] =
  "List some of the web pages offered by the Fossil web engine.  This\n"
  "page is intended as a supplement to the menu bar on the main screen.\n"
  "That is, this page is designed to hold links that are omitted from\n"
  "the main menu due to lack of space.";
static const char zHelp468[] =
  "Generate a ZIP or SQL archive for the check-in specified by the \"r\"\n"
  "query parameter.  Return the archive as the HTTP reply content.\n"
  "\n"
  "If the NAME contains one \"/\" then the part before the \"/\" is taken\n"
  "as the TAG and the part after the \"/\" becomes the true name.  Hence,\n"
  "the following URLs are all equivalent:\n"
  "\n"
  "    /sqlar/508c42a6398f8/download.sqlar\n"
  "    /sqlar?r=508c42a6398f8&name=download.sqlar\n"
  "    /sqlar/download.sqlar?r=508c42a6398f8\n"
  "    /sqlar?name=508c42a6398f8/download.sqlar\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  name=NAME           The base name of the output file.  The default\n"
  "                      value is a configuration parameter in the project\n"
  "                      settings.  A prefix of the name, omitting the\n"
  "                      extension, is used as the top-most directory name.\n"
  "\n"
  "  r=TAG               The check-in that is turned into a ZIP archive.\n"
  "                      Defaults to \"trunk\".  This query parameter used to\n"
  "                      be called \"uuid\" and the older \"uuid\" name is still\n"
  "                      accepted for backwards compatibility.  If this\n"
  "                      query parameter is omitted, the latest \"trunk\"\n"
  "                      check-in is used.\n"
  "\n"
  "  in=PATTERN          Only include files that match the comma-separate\n"
  "                      list of GLOB patterns in PATTERN, as with ex=\n"
  "\n"
  "  ex=PATTERN          Omit any file that match PATTERN.  PATTERN is a\n"
  "                      comma-separated list of GLOB patterns, where each\n"
  "                      pattern can optionally be quoted using \"..\" or '..'.\n"
  "                      Any file matching both ex= and in= is excluded.";
static const char zHelp331[] =
  "Configure the search engine.  Requires Admin privilege.";
static const char zHelp358[] =
  "Show statistics and global information about the repository.";
static const char zHelp368[] =
  "Return the style sheet.";
static const char zHelp017[] =
  "Allow users to subscribe to email notifications.\n"
  "\n"
  "This page is usually run by users who are not logged in.\n"
  "A logged-in user can add email notifications on the /alerts page.\n"
  "Access to this page by a logged in user (other than an\n"
  "administrator) results in a redirect to the /alerts page.\n"
  "\n"
  "Administrators can visit this page in order to sign up other\n"
  "users.\n"
  "\n"
  "The Alerts permission (\"7\") is required to access this\n"
  "page.  To allow anonymous passers-by to sign up for email\n"
  "notification, set Email-Alerts on user \"nobody\" or \"anonymous\".";
static const char zHelp020[] =
  "This page, accessible to administrators only,\n"
  "shows a list of email notification email addresses.\n"
  "Clicking on an email takes one to the /alerts page\n"
  "for that email where the delivery settings can be\n"
  "modified.";
static const char zHelp379[] =
  "List all non-propagating symbolic tags.";
static const char zHelp380[] =
  "Render a timeline with all check-ins that contain non-propagating\n"
  "symbolic tags.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    ng            No graph\n"
  "    nohidden      Hide check-ins with \"hidden\" tag\n"
  "    onlyhidden    Show only check-ins with \"hidden\" tag\n"
  "    brbg          Background color by branch name\n"
  "    ubg           Background color by user name";
static const char zHelp316[] =
  "Disable anonymous access to this website";
static const char zHelp383[] =
  "URL: /tarball\n"
  "\n"
  "Generate a compressed tarball for the check-in specified by the \"r\"\n"
  "query parameter.  Return that compressed tarball as the HTTP reply\n"
  "content.\n"
  "\n"
  "The r= and name= query parameters can be specified as extensions to the\n"
  "URI.  Example, the following URIs are all equivalent:\n"
  "\n"
  "     /tarball/release/xyz.tar.gz\n"
  "     /tarball?r=release&name=xyz.tar.gz\n"
  "     /tarball/xyz.tar.gz?r=release\n"
  "     /tarball?name=release/xyz.tar.gz\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  name=NAME[.tar.gz]  The base name of the output file.  The default\n"
  "                      value is a configuration parameter in the project\n"
  "                      settings.  A prefix of the name, omitting the\n"
  "                      extension, is used as the top-most directory name.\n"
  "\n"
  "  r=TAG               The check-in that is turned into a compressed tarball.\n"
  "                      Defaults to \"trunk\".  This query parameter used to\n"
  "                      be called \"uuid\" and \"uuid\" is still accepted for\n"
  "                      backwards compatibility.  If the name= query parameter\n"
  "                      contains one \"/\" character then the part before the /\n"
  "                      is the TAG and the part after the / is the true name.\n"
  "                      If no TAG is specified by any of the above means, then\n"
  "                      \"trunk\" is used as the default.\n"
  "\n"
  "  in=PATTERN          Only include files that match the comma-separate\n"
  "                      list of GLOB patterns in PATTERN, as with ex=\n"
  "\n"
  "  ex=PATTERN          Omit any file that match PATTERN.  PATTERN is a\n"
  "                      comma-separated list of GLOB patterns, where each\n"
  "                      pattern can optionally be quoted using \"..\" or '..'.\n"
  "                      Any file matching both ex= and in= is excluded.";
static const char zHelp192[] =
  "Display a technical note (formerly called an \"event\").\n"
  "\n"
  "PARAMETERS:\n"
  "\n"
  " name=ID           Identify the technical note to display. ID must be\n"
  "                   complete.\n"
  " aid=ARTIFACTID    Which specific version of the tech-note.  Optional.\n"
  " v=BOOLEAN         Show details if TRUE.  Default is FALSE.  Optional.\n"
  "\n"
  "Display an existing tech-note identified by its ID, optionally at a\n"
  "specific version, and optionally with additional details.";
static const char zHelp194[] =
  "Revise or create a technical note (formerly called an \"event\").\n"
  "\n"
  "Required query parameter:\n"
  "\n"
  "   name=ID           Hex hash ID of the technote. If omitted, a new\n"
  "                     tech-note is created.\n"
  "\n"
  "POST parameters from the \"Cancel\", \"Preview\", or \"Submit\" buttons:\n"
  "\n"
  "   w=TEXT            Complete text of the technote.\n"
  "   t=TEXT            Time of the technote on the timeline (ISO 8601)\n"
  "   c=TEXT            Timeline comment\n"
  "   g=TEXT            Tags associated with this technote\n"
  "   mimetype=TEXT     Mimetype for w= text\n"
  "   newclr            Use a background color\n"
  "   clr=TEXT          Background color to use if newclr";
static const char zHelp178[] =
  "Show all help text on a single page.  Useful for proof-reading.";
static const char zHelp227[] =
  "Show a timeline of all check-ins and other events that have entries\n"
  "in the backlink table.  This is used for testing the rendering\n"
  "of the \"References\" section of the /info page.";
static const char zHelp050[] =
  "Show all built-in text files.";
static const char zHelp058[] =
  "Test the captcha-generator by rendering the value of the name= query\n"
  "parameter using ascii-art.  If name= is omitted, show a random 16-digit\n"
  "hexadecimal number.";
static const char zHelp314[] =
  "Show a table of all documents currently in the search index.";
static const char zHelp285[] =
  "Generate a pie-chart based on data input from a form.";
static const char zHelp284[] =
  "Print a list of all file rename operations throughout history.\n"
  "This page is intended for for testing purposes only and may change\n"
  "or be discontinued without notice.";
static const char zHelp261[] =
  "Test error and warning log operation.  This webpage is accessible to\n"
  "the administrator only.\n"
  "\n"
  "    case=1           Issue a fossil_warning() while generating the page.\n"
  "    case=2           Extra db_begin_transaction()\n"
  "    case=3           Extra db_end_transaction()\n"
  "    case=4           Error during SQL processing\n"
  "    case=5           Call the segfault handler\n"
  "    case=6           Call webpage_assert()\n"
  "    case=7           Call webpage_error()";
static const char zHelp370[] =
  "Display CGI-variables and other aspects of the run-time\n"
  "environment, for debugging and trouble-shooting purposes.";
static const char zHelp403[] =
  "This is intended to be the primary \"Ticket\" page.  Render as\n"
  "either ticket-search (if search is enabled) or as the\n"
  "/reportlist page (if ticket search is disabled).";
static const char zHelp390[] =
  "Query parameters:\n"
  "\n"
  "   a=TIMEORTAG     After this event\n"
  "   b=TIMEORTAG     Before this event\n"
  "   c=TIMEORTAG     \"Circa\" this event\n"
  "   m=TIMEORTAG     Mark this event\n"
  "   n=COUNT         Maximum number of events.  \"all\" for no limit\n"
  "   p=CHECKIN       Parents and ancestors of CHECKIN\n"
  "   d=CHECKIN       Children and descendants of CHECKIN\n"
  "   dp=CHECKIN      The same as d=CHECKIN&p=CHECKIN\n"
  "   t=TAG           Show only check-ins with the given TAG\n"
  "   r=TAG           Show check-ins related to TAG, equivalent to t=TAG&rel\n"
  "   rel             Show related check-ins as well as those matching t=TAG\n"
  "   mionly          Limit rel to show ancestors but not descendants\n"
  "   nowiki          Do not show wiki associated with branch or tag\n"
  "   ms=MATCHSTYLE   Set tag match style to EXACT, GLOB, LIKE, REGEXP\n"
  "   u=USER          Only show items associated with USER\n"
  "   y=TYPE          'ci', 'w', 't', 'e', 'f', or 'all'.\n"
  "   ss=VIEWSTYLE    c: \"Compact\"  v: \"Verbose\"   m: \"Modern\"  j: \"Columnar\"\n"
  "   advm            Use the \"Advanced\" or \"Busy\" menu design.\n"
  "   ng              No Graph.\n"
  "   ncp             Omit cherrypick merges\n"
  "   nd              Do not highlight the focus check-in\n"
  "   v               Show details of files changed\n"
  "   f=CHECKIN       Show family (immediate parents and children) of CHECKIN\n"
  "   from=CHECKIN    Path from...\n"
  "     to=CHECKIN      ... to this\n"
  "     shorest         ... show only the shortest path\n"
  "     rel             ... also show related checkins\n"
  "   uf=FILE_HASH    Show only check-ins that contain the given file version\n"
  "   chng=GLOBLIST   Show only check-ins that involve changes to a file whose\n"
  "                     name matches one of the comma-separate GLOBLIST\n"
  "   brbg            Background color from branch name\n"
  "   ubg             Background color from user\n"
  "   namechng        Show only check-ins that have filename changes\n"
  "   forks           Show only forks and their children\n"
  "   cherrypicks     Show all cherrypicks\n"
  "   ym=YYYY-MM      Show only events for the given year/month\n"
  "   yw=YYYY-WW      Show only events for the given week of the given year\n"
  "   yw=YYYY-MM-DD   Show events for the week that includes the given day\n"
  "   ymd=YYYY-MM-DD  Show only events on the given day\n"
  "   days=N          Show events over the previous N days\n"
  "   datefmt=N       Override the date format\n"
  "   bisect          Show the check-ins that are in the current bisect\n"
  "   showid          Show RIDs\n"
  "   showsql         Show the SQL text\n"
  "\n"
  "p= and d= can appear individually or together.  If either p= or d=\n"
  "appear, then u=, y=, a=, and b= are ignored.\n"
  "\n"
  "If both a= and b= appear then both upper and lower bounds are honored.\n"
  "\n"
  "CHECKIN or TIMEORTAG can be a check-in hash prefix, or a tag, or the\n"
  "name of a branch.";
static const char zHelp306[] =
  "URL:  /timeline.rss?y=TYPE&n=LIMIT&tkt=UUID&tag=TAG&wiki=NAME&name=FILENAME\n"
  "\n"
  "Produce an RSS feed of the timeline.\n"
  "\n"
  "TYPE may be: all, ci (show check-ins only), t (show tickets only),\n"
  "w (show wiki only).\n"
  "\n"
  "LIMIT is the number of items to show.\n"
  "\n"
  "tkt=UUID filters for only those events for the specified ticket. tag=TAG\n"
  "filters for a tag, and wiki=NAME for a wiki page. Only one may be used.\n"
  "\n"
  "In addition, name=FILENAME filters for a specific file. This may be\n"
  "combined with one of the other filters (useful for looking at a specific\n"
  "branch).";
static const char zHelp393[] =
  "Show all check-ins that are \"timewarps\".  A timewarp is a\n"
  "check-in that occurs before its parent, according to the\n"
  "timestamp information on the check-in.  This can only actually\n"
  "happen, of course, if a users system clock is set incorrectly.";
static const char zHelp239[] =
  "URL: /tinfo?name=ARTIFACTID\n"
  "\n"
  "Show the details of a ticket change control artifact.";
static const char zHelp398[] =
  "Edit a ticket.  The ticket is identified by the name CGI parameter.\n"
  "/tktedit is the official page.  The /debug_tktedit page does the same\n"
  "thing except that it does not save the ticket change record when you\n"
  "press submit - it instead prints the ticket change record at the top\n"
  "of the page.  The /debug_tktedit page is intended to be used when\n"
  "debugging ticket configurations.";
static const char zHelp401[] =
  "URL: /tkthistory?name=TICKETUUID\n"
  "\n"
  "Show the complete change history for a single ticket";
static const char zHelp396[] =
  "Enter a new ticket.  The tktnew_template script in the ticket\n"
  "configuration is used.  The /tktnew page is the official ticket\n"
  "entry page.  The /debug_tktnew page is used for debugging the\n"
  "tktnew_template in the ticket configuration.  /debug_tktnew works\n"
  "just like /tktnew except that it does not really save the new ticket\n"
  "when you press submit - it just prints the ticket artifact at the\n"
  "top of the screen.";
static const char zHelp405[] =
  "Main sub-menu for configuring the ticketing system.";
static const char zHelp408[] =
  "Administrative screen used to view or edit the TH1 script\n"
  "that shows ticket changes.";
static const char zHelp407[] =
  "Administrative page used to define TH1 script that is\n"
  "common to all ticket screens.";
static const char zHelp411[] =
  "Administrative page for viewing or editing the TH1 script that\n"
  "drives the ticket editing page.";
static const char zHelp414[] =
  "Administrative page used to view or edit the Key template\n"
  "for tickets.";
static const char zHelp409[] =
  "Administrative page used to view or edit the TH1 script used\n"
  "to enter new tickets.";
static const char zHelp412[] =
  "Administrative page used to view or edit the TH1 script that\n"
  "defines the \"report list\" page.";
static const char zHelp413[] =
  "Administrative page used to view or edit the ticket report\n"
  "template.";
static const char zHelp406[] =
  "Administrative page for defining the \"ticket\" table used\n"
  "to hold ticket information.";
static const char zHelp415[] =
  "Administrative page used ot configure how tickets are\n"
  "rendered on timeline views.";
static const char zHelp410[] =
  "Administrative page used to view or edit the TH1 script that\n"
  "displays individual tickets.";
static const char zHelp404[] =
  "Usage:  /tktsrch?s=PATTERN\n"
  "\n"
  "Full-text search of all current tickets";
static const char zHelp400[] =
  "URL: /tkttimeline?name=TICKETUUID&y=TYPE\n"
  "\n"
  "Show the change history for a single ticket in timeline format.";
static const char zHelp395[] =
  "URL:  tktview?name=UUID\n"
  "\n"
  "View a ticket identified by the name= query parameter.";
static const char zHelp046[] =
  "Show the files using a tree-view.  If the ci= query parameter is present\n"
  "then show only the files for the check-in identified.  If ci= is omitted,\n"
  "then show the union of files over all check-ins.\n"
  "\n"
  "The type=tree query parameter is required or else the /dir format is\n"
  "used.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   type=tree        Required to prevent use of /dir format\n"
  "   name=PATH        Directory to display.  Optional\n"
  "   ci=LABEL         Show only files in this check-in.  Optional.\n"
  "   re=REGEXP        Show only files matching REGEXP.  Optional.\n"
  "   expand           Begin with the tree fully expanded.\n"
  "   nofiles          Show directories (folders) only.  Omit files.\n"
  "   mtime            Order directory elements by decreasing mtime";
static const char zHelp019[] =
  "Users visit this page to be delisted from email alerts.\n"
  "\n"
  "If a valid subscriber code is supplied in the name= query parameter,\n"
  "then that subscriber is delisted.\n"
  "\n"
  "Otherwise, If the users is logged in, then they are redirected\n"
  "to the /alerts page where they have an unsubscribe button.\n"
  "\n"
  "Non-logged-in users with no name= query parameter are invited to enter\n"
  "an email address to which will be sent the unsubscribe link that\n"
  "contains the correct subscriber code.";
static const char zHelp360[] =
  "Show ways in which this repository has been accessed";
static const char zHelp183[] =
  "URL: /uv/FILE\n"
  "URL: /doc/CHECKIN/FILE\n"
  "\n"
  "CHECKIN can be either tag or hash prefix or timestamp identifying a\n"
  "particular check, or the name of a branch (meaning the most recent\n"
  "check-in on that branch) or one of various magic words:\n"
  "\n"
  "    \"tip\"      means the most recent check-in\n"
  "\n"
  "    \"ckout\"    means the current check-out, if the server is run from\n"
  "               within a check-out, otherwise it is the same as \"tip\"\n"
  "\n"
  "FILE is the name of a file to delivered up as a webpage.  FILE is relative\n"
  "to the root of the source tree of the repository. The FILE must\n"
  "be a part of CHECKIN, except when CHECKIN==\"ckout\" when FILE is read\n"
  "directly from disk and need not be a managed file.\n"
  "\n"
  "The \"ckout\" CHECKIN is intended for development - to provide a mechanism\n"
  "for looking at what a file will look like using the /doc webpage after\n"
  "it gets checked in.\n"
  "\n"
  "The file extension is used to decide how to render the file.\n"
  "\n"
  "If FILE ends in \"/\" then the names \"FILE/index.html\", \"FILE/index.wiki\",\n"
  "and \"FILE/index.md\" are tried in that order.  If the binary was compiled\n"
  "with TH1 embedded documentation support and the \"th1-docs\" setting is\n"
  "enabled, the name \"FILE/index.th1\" is also tried.  If none of those are\n"
  "found, then FILE is completely replaced by \"404.md\" and tried.  If that\n"
  "is not found, then a default 404 screen is generated.\n"
  "\n"
  "If the file's mimetype is \"text/x-fossil-wiki\" or \"text/x-markdown\"\n"
  "then headers and footers are added. If the document has mimetype\n"
  "text/html then headers and footers are usually not added.  However,\n"
  "if a \"text/html\" document begins with the following div:\n"
  "\n"
  "      <div class='fossil-doc' data-title='TEXT'>\n"
  "\n"
  "then headers and footers are supplied.  The optional data-title field\n"
  "specifies the title of the document in that case.\n"
  "\n"
  "For fossil-doc documents and for markdown documents, text of the\n"
  "form:  \"href='$ROOT/\" or \"action='$ROOT\" has the $ROOT name expanded\n"
  "to the top-level of the repository.";
static const char zHelp420[] =
  "Display a list of all unversioned files in the repository.\n"
  "Query parameters:\n"
  "\n"
  "   byage=1          Order the initial display be decreasing age\n"
  "   showdel=0        Show deleted files";
static const char zHelp232[] =
  "URL: /vdiff?from=TAG&to=TAG\n"
  "\n"
  "Show the difference between two check-ins identified by the from= and\n"
  "to= query parameters.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "  from=TAG        Left side of the comparison\n"
  "  to=TAG          Right side of the comparison\n"
  "  branch=TAG      Show all changes on a particular branch\n"
  "  diff=INTEGER    0: none, 1: unified, 2: side-by-side\n"
  "  glob=STRING     only diff files matching this glob\n"
  "  dc=N            show N lines of context around each diff\n"
  "  w=BOOLEAN       ignore whitespace when computing diffs\n"
  "  nohdr           omit the description at the top of the page\n"
  "\n"
  "\n"
  "Show all differences between two check-ins.";
static const char zHelp254[] =
  "Show the version information for Fossil.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "   verbose       Show details";
static const char zHelp229[] =
  "URL:  /ci/ARTIFACTID\n"
  " OR:  /ci?name=ARTIFACTID\n"
  "\n"
  "Display information about a particular check-in.  The exact\n"
  "same information is shown on the /info page if the name query\n"
  "parameter to /info describes a check-in.\n"
  "\n"
  "The ARTIFACTID can be a unique prefix for the HASH of the check-in,\n"
  "or a tag or branch name that identifies the check-in.";
static const char zHelp175[] =
  "URL: /vpatch?from=FROM&to=TO\n"
  "\n"
  "Show a patch that goes from check-in FROM to check-in TO.";
static const char zHelp332[] =
  "Configure the URL aliases";
static const char zHelp450[] =
  "all=1         Show deleted pages\n"
  "    showid        Show rid values for each page.\n"
  "\n"
  "List all available wiki pages with date created and last modified.";
static const char zHelp449[] =
  "Show the changes to a wiki page.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "     id=HASH           Hash prefix for the child version to be diffed.\n"
  "     rid=INTEGER       RecordID for the child version\n"
  "     pid=HASH          Hash prefix for the parent.\n"
  "\n"
  "The \"id\" query parameter is required.  \"pid\" is optional.  If \"pid\"\n"
  "is omitted, then the diff is against the first parent of the child.";
static const char zHelp434[] =
  "This page can be used to read content from the EMAILBOX table\n"
  "that contains email received by the \"fossil smtpd\" command.\n"
  "\n"
  "Query parameters:\n"
  "\n"
  "    id=N                 Show a single email entry emailbox.ebid==N\n"
  "    f=N                  Display format.  0: decoded 1: raw\n"
  "    user=USER            Show mailbox for USER (admin only).\n"
  "    user=*               Show mailbox for all users (admin only).\n"
  "    d=N                  0: inbox+unread 1: unread-only 2: trash 3: all\n"
  "    eN                   Select email entry emailbox.ebid==N\n"
  "    trash                Move selected entries to trash (estate=2)\n"
  "    read                 Mark selected entries as read (estate=1)\n"
  "    unread               Mark selected entries as unread (estate=0)";
static const char zHelp451[] =
  "URL: /wfind?title=TITLE\n"
  "List all wiki pages whose titles contain the search text";
static const char zHelp448[] =
  "URL: /whistory?name=PAGENAME\n"
  "\n"
  "Additional parameters:\n"
  "\n"
  "    showid          Show RID values\n"
  "\n"
  "Show the complete change history for a single wiki page.";
static const char zHelp444[] =
  "URL: /wiki?name=PAGENAME";
static const char zHelp441[] =
  "Show a summary of the wiki formatting rules.";
static const char zHelp447[] =
  "URL: /wikiappend?name=PAGENAME&mimetype=MIMETYPE\n"
  "\n"
  "Append text to the end of a wiki page.";
static const char zHelp445[] =
  "URL: /wikiedit?name=PAGENAME\n"
  "\n"
  "Edit a wiki page.";
static const char zHelp442[] =
  "A generic landing page for wiki.";
static const char zHelp446[] =
  "URL /wikinew\n"
  "\n"
  "Prompt the user to enter the name of a new wiki page.  Then redirect\n"
  "to the wikiedit screen for that new page.";
static const char zHelp443[] =
  "Usage:  /wikisrch?s=PATTERN\n"
  "\n"
  "Full-text search of all current wiki text";
static const char zHelp231[] =
  "URL:  /winfo?name=UUID\n"
  "\n"
  "Display information about a wiki page.";
static const char zHelp458[] =
  "This is the transfer handler on the server side.  The transfer\n"
  "message has been uncompressed and placed in the g.cgiIn blob.\n"
  "Process this message and form an appropriate reply.";
static const char zHelp460[] =
  "Main sub-menu for configuring the transfer system.";
static const char zHelp461[] =
  "View or edit the TH1 script that runs prior to receiving a\n"
  "transfer.";
static const char zHelp463[] =
  "View or edit the TH1 script that runs when a transfer commit\n"
  "is processed.";
static const char zHelp462[] =
  "View or edit the TH1 script that runs after receiving a \"push\".";
static const char zHelp464[] =
  "View or edit the TH1 script that runs when a ticket change artifact\n"
  "is processed during a transfer.";
static const char zHelp267[] =
  "Usage: %fossil 3-way-merge BASELINE V1 V2 MERGED\n"
  "\n"
  "Inputs are files BASELINE, V1, and V2.  The file MERGED is generated\n"
  "as output.\n"
  "\n"
  "BASELINE is a common ancestor of two files V1 and V2 that have diverging\n"
  "edits.  The generated output file MERGED is the combination of all\n"
  "changes in both V1 and V2.\n"
  "\n"
  "This command has no effect on the Fossil repository.  It is a utility\n"
  "command made available for the convenience of users.  This command can\n"
  "be used, for example, to help import changes from an upstream project.\n"
  "\n"
  "Suppose an upstream project has a file named \"Xup.c\" which is imported\n"
  "with modifications to the local project as \"Xlocal.c\".  Suppose further\n"
  "that the \"Xbase.c\" is an exact copy of the last imported \"Xup.c\".\n"
  "Then to import the latest \"Xup.c\" while preserving all the local changes:\n"
  "\n"
  "     fossil 3-way-merge Xbase.c Xlocal.c Xup.c Xlocal.c\n"
  "     cp Xup.c Xbase.c\n"
  "     # Verify that everything still works\n"
  "     fossil commit";
static const char zHelp092[] =
  "When the access-log setting is enabled, all login attempts (successful\n"
  "and unsuccessful) on the web interface are recorded in the \"access\" table\n"
  "of the repository.";
static const char zHelp001[] =
  "Usage: %fossil add ?OPTIONS? FILE1 ?FILE2 ...?\n"
  "\n"
  "Make arrangements to add one or more files or directories to the\n"
  "current checkout at the next commit.\n"
  "\n"
  "When adding files or directories recursively, filenames that begin\n"
  "with \".\" are excluded by default.  To include such files, add\n"
  "the \"--dotfiles\" option to the command-line.\n"
  "\n"
  "The --ignore and --clean options are comma-separated lists of glob patterns\n"
  "for files to be excluded.  Example:  '*.o,*.obj,*.exe'  If the --ignore\n"
  "option does not appear on the command line then the \"ignore-glob\" setting\n"
  "is used.  If the --clean option does not appear on the command line then\n"
  "the \"clean-glob\" setting is used.\n"
  "\n"
  "If files are attempted to be added explicitly on the command line which\n"
  "match \"ignore-glob\", a confirmation is asked first. This can be prevented\n"
  "using the -f|--force option.\n"
  "\n"
  "The --case-sensitive option determines whether or not filenames should\n"
  "be treated case sensitive or not. If the option is not given, the default\n"
  "depends on the global setting, or the operating system default, if not set.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --case-sensitive <BOOL> Override the case-sensitive setting.\n"
  "   --dotfiles              include files beginning with a dot (\".\")\n"
  "   -f|--force              Add files without prompting\n"
  "   --ignore <CSG>          Ignore unmanaged files matching patterns from\n"
  "                           the comma separated list of glob patterns.\n"
  "   --clean <CSG>           Also ignore files matching patterns from\n"
  "                           the comma separated list of glob patterns.\n"
  "\n"
  "See also: addremove, rm";
static const char zHelp005[] =
  "Usage: %fossil addremove ?OPTIONS?\n"
  "\n"
  "Do all necessary \"add\" and \"rm\" commands to synchronize the repository\n"
  "with the content of the working checkout:\n"
  "\n"
  " *  All files in the checkout but not in the repository (that is,\n"
  "    all files displayed using the \"extras\" command) are added as\n"
  "    if by the \"add\" command.\n"
  "\n"
  " *  All files in the repository but missing from the checkout (that is,\n"
  "    all files that show as MISSING with the \"status\" command) are\n"
  "    removed as if by the \"rm\" command.\n"
  "\n"
  "The command does not \"commit\".  You must run the \"commit\" separately\n"
  "as a separate step.\n"
  "\n"
  "Files and directories whose names begin with \".\" are ignored unless\n"
  "the --dotfiles option is used.\n"
  "\n"
  "The --ignore option overrides the \"ignore-glob\" setting, as do the\n"
  "--case-sensitive option with the \"case-sensitive\" setting and the\n"
  "--clean option with the \"clean-glob\" setting. See the documentation\n"
  "on the \"settings\" command for further information.\n"
  "\n"
  "The -n|--dry-run option shows what would happen without actually doing\n"
  "anything.\n"
  "\n"
  "This command can be used to track third party software.\n"
  "\n"
  "Options:\n"
  "  --case-sensitive <BOOL> Override the case-sensitive setting.\n"
  "  --dotfiles              Include files beginning with a dot (\".\")\n"
  "  --ignore <CSG>          Ignore unmanaged files matching patterns from\n"
  "                          the comma separated list of glob patterns.\n"
  "  --clean <CSG>           Also ignore files matching patterns from\n"
  "                          the comma separated list of glob patterns.\n"
  "  -n|--dry-run            If given, display instead of run actions.\n"
  "\n"
  "See also: add, rm";
static const char zHelp093[] =
  "When the admin-log setting is enabled, configuration changes are recorded\n"
  "in the \"admin_log\" table of the repository.";
static const char zHelp016[] =
  "Usage: %fossil alerts SUBCOMMAND ARGS...\n"
  "\n"
  "Subcommands:\n"
  "\n"
  "   pending                 Show all pending alerts.  Useful for debugging.\n"
  "\n"
  "   reset                   Hard reset of all email notification tables\n"
  "                           in the repository.  This erases all subscription\n"
  "                           information.  ** Use with extreme care **\n"
  "\n"
  "   send                    Compose and send pending email alerts.\n"
  "                           Some installations may want to do this via\n"
  "                           a cron-job to make sure alerts are sent\n"
  "                           in a timely manner.\n"
  "                           Options:\n"
  "\n"
  "                              --digest     Send digests\n"
  "                              --test       Write to standard output\n"
  "\n"
  "   settings [NAME VALUE]   With no arguments, list all email settings.\n"
  "                           Or change the value of a single email setting.\n"
  "\n"
  "   status                  Report on the status of the email alert\n"
  "                           subsystem\n"
  "\n"
  "   subscribers [PATTERN]   List all subscribers matching PATTERN.\n"
  "\n"
  "   test-message TO [OPTS]  Send a single email message using whatever\n"
  "                           email sending mechanism is currently configured.\n"
  "                           Use this for testing the email notification\n"
  "                           configuration.  Options:\n"
  "\n"
  "                             --body FILENAME\n"
  "                             --smtp-trace\n"
  "                             --stdout\n"
  "                             --subject|-S SUBJECT\n"
  "\n"
  "   unsubscribe EMAIL       Remove a single subscriber with the given EMAIL.";
static const char zHelp025[] =
  "Usage: %fossil all SUBCOMMAND ...\n"
  "\n"
  "The ~/.fossil file records the location of all repositories for a\n"
  "user.  This command performs certain operations on all repositories\n"
  "that can be useful before or after a period of disconnected operation.\n"
  "\n"
  "On Win32 systems, the file is named \"_fossil\" and is located in\n"
  "%LOCALAPPDATA%, %APPDATA% or %HOMEPATH%.\n"
  "\n"
  "Available operations are:\n"
  "\n"
  "   cache       Manages the cache used for potentially expensive web\n"
  "               pages.  Any additional arguments are passed on verbatim\n"
  "               to the cache command.\n"
  "\n"
  "   changes     Shows all local checkouts that have uncommitted changes.\n"
  "               This operation has no additional options.\n"
  "\n"
  "   clean       Delete all \"extra\" files in all local checkouts.  Extreme\n"
  "               caution should be exercised with this command because its\n"
  "               effects cannot be undone.  Use of the --dry-run option to\n"
  "               carefully review the local checkouts to be operated upon\n"
  "               and the --whatif option to carefully review the files to\n"
  "               be deleted beforehand is highly recommended.  The command\n"
  "               line options supported by the clean command itself, if any\n"
  "               are present, are passed along verbatim.\n"
  "\n"
  "   config      Only the \"config pull AREA\" command works.\n"
  "\n"
  "   dbstat      Run the \"dbstat\" command on all repositories.\n"
  "\n"
  "   extras      Shows \"extra\" files from all local checkouts.  The command\n"
  "               line options supported by the extra command itself, if any\n"
  "               are present, are passed along verbatim.\n"
  "\n"
  "   fts-config  Run the \"fts-config\" command on all repositories.\n"
  "\n"
  "   info        Run the \"info\" command on all repositories.\n"
  "\n"
  "   pull        Run a \"pull\" operation on all repositories.  Only the\n"
  "               --verbose option is supported.\n"
  "\n"
  "   push        Run a \"push\" on all repositories.  Only the --verbose\n"
  "               option is supported.\n"
  "\n"
  "   rebuild     Rebuild on all repositories.  The command line options\n"
  "               supported by the rebuild command itself, if any are\n"
  "               present, are passed along verbatim.  The --force and\n"
  "               --randomize options are not supported.\n"
  "\n"
  "   sync        Run a \"sync\" on all repositories.  Only the --verbose\n"
  "               option is supported.\n"
  "\n"
  "   setting     Run the \"setting\", \"set\", or \"unset\" commands on all\n"
  "   set         repositories.  These command are particularly useful in\n"
  "   unset       conjunction with the \"max-loadavg\" setting which cannot\n"
  "               otherwise be set globally.\n"
  "\n"
  "   server      Run the \"ui\" or \"server\" commands on all repositories.\n"
  "   ui          The root URI gives a listing of all repos.\n"
  "\n"
  "\n"
  "In addition, the following maintenance operations are supported:\n"
  "\n"
  "   add         Add all the repositories named to the set of repositories\n"
  "               tracked by Fossil.  Normally Fossil is able to keep up with\n"
  "               this list by itself, but sometimes it can benefit from this\n"
  "               hint if you rename repositories.\n"
  "\n"
  "   ignore      Arguments are repositories that should be ignored by\n"
  "               subsequent clean, extras, list, pull, push, rebuild, and\n"
  "               sync operations.  The -c|--ckout option causes the listed\n"
  "               local checkouts to be ignored instead.\n"
  "\n"
  "   list | ls   Display the location of all repositories.  The -c|--ckout\n"
  "               option causes all local checkouts to be listed instead.\n"
  "\n"
  "Repositories are automatically added to the set of known repositories\n"
  "when one of the following commands are run against the repository:\n"
  "clone, info, pull, push, or sync.  Even previously ignored repositories\n"
  "are added back to the list of repositories by these commands.\n"
  "\n"
  "Options:\n"
  "  --showfile     Show the repository or checkout being operated upon.\n"
  "  --dontstop     Continue with other repositories even after an error.\n"
  "  --dry-run      If given, display instead of run actions.";
#if defined(_WIN32)
static const char zHelp094[] =
  "When allow-symlinks is OFF, symbolic links in the repository are followed\n"
  "and treated no differently from real files.  When allow-symlinks is ON,\n"
  "the object to which the symbolic link points is ignored, and the content\n"
  "of the symbolic link that is stored in the repository is the name of the\n"
  "object to which the symbolic link points.";
#endif
#if !defined(_WIN32)
static const char zHelp095[] =
  "When allow-symlinks is OFF, symbolic links in the repository are followed\n"
  "and treated no differently from real files.  When allow-symlinks is ON,\n"
  "the object to which the symbolic link points is ignored, and the content\n"
  "of the symbolic link that is stored in the repository is the name of the\n"
  "object to which the symbolic link points.";
#endif
static const char zHelp242[] =
  "Usage: %fossil amend UUID OPTION ?OPTION ...?\n"
  "\n"
  "Amend the tags on check-in UUID to change how it displays in the timeline.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --author USER           Make USER the author for check-in\n"
  "   -m|--comment COMMENT    Make COMMENT the check-in comment\n"
  "   -M|--message-file FILE  Read the amended comment from FILE\n"
  "   -e|--edit-comment       Launch editor to revise comment\n"
  "   --date DATETIME         Make DATETIME the check-in time\n"
  "   --bgcolor COLOR         Apply COLOR to this check-in\n"
  "   --branchcolor COLOR     Apply and propagate COLOR to the branch\n"
  "   --tag TAG               Add new TAG to this check-in\n"
  "   --cancel TAG            Cancel TAG from this check-in\n"
  "   --branch NAME           Make this check-in the start of branch NAME\n"
  "   --hide                  Hide branch starting from this check-in\n"
  "   --close                 Mark this \"leaf\" as closed\n"
  "   -n|--dry-run            Print control artifact, but make no changes\n"
  "   --date-override DATETIME  Set the change time on the control artifact\n"
  "   --user-override USER      Set the user name on the control artifact\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.";
static const char zHelp170[] =
  "Usage: %fossil annotate|blame|praise ?OPTIONS? FILENAME\n"
  "\n"
  "Output the text of a file with markings to show when each line of the file\n"
  "was last modified.  The version currently checked out is shown by default.\n"
  "Other versions may be specified using the -r option.  The \"annotate\" command\n"
  "shows line numbers and omits the username.  The \"blame\" and \"praise\" commands\n"
  "show the user who made each check-in.\n"
  "\n"
  "Reverse Annotations:  Normally, these commands look at versions of\n"
  "FILENAME moving backwards in time back toward the root check-in, and\n"
  "thus the output shows the most recent change to each line.  However,\n"
  "if the -o|--origin option is used to specify some future check-in\n"
  "(example: \"-o trunk\") then these commands show changes moving towards\n"
  "that alternative origin.  Thus using \"-o trunk\" on an historical version\n"
  "of the file shows the first time each line in the file was changed or\n"
  "removed by any subsequent check-in.\n"
  "\n"
  "Options:\n"
  "  --filevers                  Show file version numbers rather than\n"
  "                              check-in versions\n"
  "  -r|--revision VERSION       The specific check-in containing the file\n"
  "  -l|--log                    List all versions analyzed\n"
  "  -n|--limit LIMIT            Limit the amount of analysis:\n"
  "                                N      Up to N versions\n"
  "                                Xs     As much as possible in X seconds\n"
  "                                none   No limit\n"
  "  -o|--origin VERSION         The origin check-in. By default this is the\n"
  "                                root of the repository. Set to \"trunk\" or\n"
  "                                similar for a reverse annotation.\n"
  "  -w|--ignore-all-space       Ignore white space when comparing lines\n"
  "  -Z|--ignore-trailing-space  Ignore whitespace at line end\n"
  "\n"
  "See also: info, finfo, timeline";
static const char zHelp078[] =
  "Usage: %fossil artifact ARTIFACT-ID ?OUTPUT-FILENAME? ?OPTIONS?\n"
  "\n"
  "Extract an artifact by its artifact hash and write the results on\n"
  "standard output, or if the optional 4th argument is given, in\n"
  "the named output file.\n"
  "\n"
  "Options:\n"
  "   -R|--repository FILE       Extract artifacts from repository FILE\n"
  "\n"
  "See also: finfo";
static const char zHelp032[] =
  "Usage: %fossil attachment add ?PAGENAME? FILENAME ?OPTIONS?\n"
  "\n"
  "      Add an attachment to an existing wiki page or tech note.\n"
  "\n"
  "      Options:\n"
  "        -t|--technote DATETIME      Specifies the timestamp of\n"
  "                                    the technote to which the attachment\n"
  "                                    is to be made. The attachment will be\n"
  "                                    to the most recently modified tech note\n"
  "                                    with the specified timestamp.\n"
  "        -t|--technote TECHNOTE-ID   Specifies the technote to be\n"
  "                                    updated by its technote id.\n"
  "\n"
  "      One of PAGENAME, DATETIME or TECHNOTE-ID must be specified.\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.";
static const char zHelp096[] =
  "If enabled, the /login page provides a button that will automatically\n"
  "fill in the captcha password.  This makes things easier for human users,\n"
  "at the expense of also making logins easier for malicious robots.";
static const char zHelp097[] =
  "Use javascript to enable hyperlinks on web pages\n"
  "for all users (regardless of the \"h\" privilege) if the\n"
  "User-Agent string in the HTTP header look like it came\n"
  "from real person, not a spider or bot.";
static const char zHelp098[] =
  "If enabled, automatically pull the shunning list\n"
  "from a server to which the client autosyncs.";
static const char zHelp099[] =
  "This setting can take either a boolean value or \"pullonly\"\n"
  "If enabled, automatically pull prior to commit\n"
  "or update and automatically push after commit or\n"
  "tag or branch creation.  If the value is \"pullonly\"\n"
  "then only pull operations occur automatically.";
static const char zHelp100[] =
  "If autosync is enabled setting this to a value greater\n"
  "than zero will cause autosync to try no more than this\n"
  "number of attempts if there is a sync failure.";
static const char zHelp035[] =
  "Usage: backoffice [-R repository]\n"
  "\n"
  "Run backoffice processing.  This might be done by a cron job or\n"
  "similar to make sure backoffice processing happens periodically.";
static const char zHelp102[] =
  "If backoffice-disable is true, then the automatic backoffice\n"
  "processing is disabled.  Automatic backoffice processing is the\n"
  "backoffice work that normally runs after each web page is\n"
  "rendered.  Backoffice processing that is triggered by the\n"
  "\"fossil backoffice\" command is unaffected by this setting.\n"
  "\n"
  "Backoffice processing does things such as delivering\n"
  "email notifications.  So if this setting is true, and if\n"
  "there is no cron job periodically running \"fossil backoffice\",\n"
  "email notifications and other work normally done by the\n"
  "backoffice will not occur.";
static const char zHelp103[] =
  "If backoffice-logfile is not an empty string and is a valid\n"
  "filename, then a one-line message is appended to that file\n"
  "every time the backoffice runs.  This can be used for debugging,\n"
  "to ensure that backoffice is running appropriately.";
static const char zHelp101[] =
  "If backoffice-nodelay is true, then the backoffice processing\n"
  "will never invoke sleep().  If it has nothing useful to do,\n"
  "it simply exits.";
static const char zHelp104[] =
  "The VALUE of this setting is a comma or newline-separated list of\n"
  "GLOB patterns that should be treated as binary files\n"
  "for committing and merging purposes.  Example: *.jpg";
static const char zHelp036[] =
  "Usage: %fossil bisect SUBCOMMAND ...\n"
  "\n"
  "Run various subcommands useful for searching for bugs.\n"
  "\n"
  "  fossil bisect bad ?VERSION?\n"
  "\n"
  "    Identify version VERSION as non-working.  If VERSION is omitted,\n"
  "    the current checkout is marked as non-working.\n"
  "\n"
  "  fossil bisect good ?VERSION?\n"
  "\n"
  "    Identify version VERSION as working.  If VERSION is omitted,\n"
  "    the current checkout is marked as working.\n"
  "\n"
  "  fossil bisect log\n"
  "  fossil bisect chart\n"
  "\n"
  "    Show a log of \"good\" and \"bad\" versions.  \"bisect log\" shows the\n"
  "    events in the order that they were tested.  \"bisect chart\" shows\n"
  "    them in order of check-in.\n"
  "\n"
  "  fossil bisect next\n"
  "\n"
  "    Update to the next version that is halfway between the working and\n"
  "    non-working versions.\n"
  "\n"
  "  fossil bisect options ?NAME? ?VALUE?\n"
  "\n"
  "    List all bisect options, or the value of a single option, or set the\n"
  "    value of a bisect option.\n"
  "\n"
  "  fossil bisect reset\n"
  "\n"
  "    Reinitialize a bisect session.  This cancels prior bisect history\n"
  "    and allows a bisect session to start over from the beginning.\n"
  "\n"
  "  fossil bisect vlist|ls|status ?-a|--all?\n"
  "\n"
  "    List the versions in between \"bad\" and \"good\".\n"
  "\n"
  "  fossil bisect ui\n"
  "\n"
  "    Like \"fossil ui\" except start on a timeline that shows only the\n"
  "    check-ins that are part of the current bisect.\n"
  "\n"
  "  fossil bisect undo\n"
  "\n"
  "    Undo the most recent \"good\" or \"bad\" command.\n"
  "\n"
  "Summary:\n"
  "\n"
  "  fossil bisect bad ?VERSION?\n"
  "  fossil bisect good ?VERSION?\n"
  "  fossil bisect log\n"
  "  fossil bisect chart\n"
  "  fossil bisect next\n"
  "  fossil bisect options\n"
  "  fossil bisect reset\n"
  "  fossil bisect status\n"
  "  fossil bisect ui\n"
  "  fossil bisect undo";
static const char zHelp042[] =
  "Usage: %fossil branch SUBCOMMAND ... ?OPTIONS?\n"
  "\n"
  "Run various subcommands to manage branches of the open repository or\n"
  "of the repository identified by the -R or --repository option.\n"
  "\n"
  "   fossil branch current\n"
  "\n"
  "       Print the name of the branch for the current check-out\n"
  "\n"
  "   fossil branch info BRANCH-NAME\n"
  "\n"
  "       Print information about a branch\n"
  "\n"
  "   fossil branch list|ls ?OPTIONS?\n"
  "\n"
  "       List all branches. Options:\n"
  "         -a|--all      List all branches.  Default show only open branches\n"
  "         -c|--closed   List closed branches.\n"
  "         -r            Reverse the sort order\n"
  "         -t            Show recently changed branches first\n"
  "\n"
  "   fossil branch new BRANCH-NAME BASIS ?OPTIONS?\n"
  "\n"
  "       Create a new branch BRANCH-NAME off of check-in BASIS.\n"
  "       Supported options for this subcommand include:\n"
  "       --private             branch is private (i.e., remains local)\n"
  "       --bgcolor COLOR       use COLOR instead of automatic background\n"
  "       --nosign              do not sign contents on this branch\n"
  "       --date-override DATE  DATE to use instead of 'now'\n"
  "       --user-override USER  USER to use instead of the current default\n"
  "\n"
  "       DATE may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "       year-month-day form, it may be truncated, the \"T\" may be\n"
  "       replaced by a space, and it may also name a timezone offset\n"
  "       from UTC as \"-HH:MM\" (westward) or \"+HH:MM\" (eastward).\n"
  "       Either no timezone suffix or \"Z\" means UTC.\n"
  "\n"
  "Options:\n"
  "   -R|--repository FILE       Run commands on repository FILE\n"
  "\n"
  "Summary:\n"
  "   fossil branch current\n"
  "   fossil branch info BRANCHNAME\n"
  "   fossil branch [list|ls]\n"
  "   fossil branch new";
static const char zHelp053[] =
  "Usage: %fossil bundle SUBCOMMAND ARGS...\n"
  "\n"
  "  fossil bundle append BUNDLE FILE...\n"
  "\n"
  "     Add files named on the command line to BUNDLE.  This subcommand has\n"
  "     little practical use and is mostly intended for testing.\n"
  "\n"
  "  fossil bundle cat BUNDLE UUID...\n"
  "\n"
  "     Extract one or more artifacts from the bundle and write them\n"
  "     consecutively on standard output.  This subcommand was designed\n"
  "     for testing and introspection of bundles and is not something\n"
  "     commonly used.\n"
  "\n"
  "  fossil bundle export BUNDLE ?OPTIONS?\n"
  "\n"
  "     Generate a new bundle, in the file named BUNDLE, that contains a\n"
  "     subset of the check-ins in the repository (usually a single branch)\n"
  "     described by the --branch, --from, --to, and/or --checkin options,\n"
  "     at least one of which is required.  If BUNDLE already exists, the\n"
  "     specified content is added to the bundle.\n"
  "\n"
  "        --branch BRANCH            Package all check-ins on BRANCH.\n"
  "        --from TAG1 --to TAG2      Package check-ins between TAG1 and TAG2.\n"
  "        --checkin TAG              Package the single check-in TAG\n"
  "        --standalone               Do no use delta-encoding against\n"
  "                                     artifacts not in the bundle\n"
  "\n"
  "  fossil bundle extend BUNDLE\n"
  "\n"
  "     The BUNDLE must already exist.  This subcommand adds to the bundle\n"
  "     any check-ins that are descendants of check-ins already in the bundle,\n"
  "     and any tags that apply to artifacts in the bundle.\n"
  "\n"
  "  fossil bundle import BUNDLE ?--publish?\n"
  "\n"
  "     Import all content from BUNDLE into the repository.  By default, the\n"
  "     imported files are private and will not sync.  Use the --publish\n"
  "     option to make the import public.\n"
  "\n"
  "  fossil bundle ls BUNDLE\n"
  "\n"
  "     List the contents of BUNDLE on standard output\n"
  "\n"
  "  fossil bundle purge BUNDLE\n"
  "\n"
  "     Remove from the repository all files that are used exclusively\n"
  "     by check-ins in BUNDLE.  This has the effect of undoing a\n"
  "     \"fossil bundle import\".\n"
  "\n"
  "SUMMARY:\n"
  "  fossil bundle append BUNDLE FILE...              Add files to BUNDLE\n"
  "  fossil bundle cat BUNDLE UUID...                 Extract file from BUNDLE\n"
  "  fossil bundle export BUNDLE ?OPTIONS?            Create a new BUNDLE\n"
  "         --branch BRANCH --from TAG1 --to TAG2       Check-ins to include\n"
  "         --checkin TAG                               Use only check-in TAG\n"
  "         --standalone                                Omit dependencies\n"
  "  fossil bundle extend BUNDLE                      Update with newer content\n"
  "  fossil bundle import BUNDLE ?OPTIONS?            Import a bundle\n"
  "         --publish                                   Publish the import\n"
  "         --force                                     Cross-repo import\n"
  "  fossil bundle ls BUNDLE                          List content of a bundle\n"
  "  fossil bundle purge BUNDLE                       Undo an import\n"
  "\n"
  "See also: publish";
static const char zHelp054[] =
  "Usage: %fossil cache SUBCOMMAND\n"
  "\n"
  "Manage the cache used for potentially expensive web pages such as\n"
  "/zip and /tarball.   SUBCOMMAND can be:\n"
  "\n"
  "   clear        Remove all entries from the cache.\n"
  "\n"
  "   init         Create the cache file if it does not already exist.\n"
  "\n"
  "   list|ls      List the keys and content sizes and other stats for\n"
  "                all entries currently in the cache.\n"
  "\n"
  "   status       Show a summary of the cache status.\n"
  "\n"
  "The cache is stored in a file that is distinct from the repository\n"
  "but that is held in the same directory as the repository.  The cache\n"
  "file can be deleted in order to completely disable the cache.";
#if !(defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__))
static const char zHelp106[] =
  "If TRUE, the files whose names differ only in case\n"
  "are considered distinct.  If FALSE files whose names\n"
  "differ only in case are the same file.  Defaults to\n"
  "TRUE for unix and FALSE for Cygwin, Mac and Windows.";
#endif
#if defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__)
static const char zHelp105[] =
  "If TRUE, the files whose names differ only in case\n"
  "are considered distinct.  If FALSE files whose names\n"
  "differ only in case are the same file.  Defaults to\n"
  "TRUE for unix and FALSE for Cygwin, Mac and Windows.";
#endif
static const char zHelp209[] =
  "Usage: %fossil cat FILENAME ... ?OPTIONS?\n"
  "\n"
  "Print on standard output the content of one or more files as they exist\n"
  "in the repository.  The version currently checked out is shown by default.\n"
  "Other versions may be specified using the -r option.\n"
  "\n"
  "Options:\n"
  "   -R|--repository FILE       Extract artifacts from repository FILE\n"
  "   -r VERSION                 The specific check-in containing the file\n"
  "\n"
  "See also: finfo";
static const char zHelp255[] =
  "Usage: %fossil ?cgi? FILE\n"
  "\n"
  "This command causes Fossil to generate reply to a CGI request.\n"
  "\n"
  "The FILE argument is the name of a control file that provides Fossil\n"
  "with important information such as where to find its repository.  In\n"
  "a typical CGI deployment, FILE is the name of the CGI script and will\n"
  "typically look something like this:\n"
  "\n"
  "     #!/usr/bin/fossil\n"
  "     repository: /home/somebody/project.db\n"
  "\n"
  "The command name, \"cgi\", may be omitted if the GATEWAY_INTERFACE\n"
  "environment variable is set to \"CGI\", which should always be the\n"
  "case for CGI scripts run by a webserver.  Fossil ignores any lines\n"
  "that begin with \"#\".\n"
  "\n"
  "The following control lines are recognized:\n"
  "\n"
  "   repository: PATH         Name of the Fossil repository\n"
  "\n"
  "   directory:  PATH         Name of a directory containing many Fossil\n"
  "                            repositories whose names all end with \".fossil\".\n"
  "                            There should only be one of \"repository:\"\n"
  "                            or \"directory:\"\n"
  "\n"
  "   notfound: URL            When in \"directory:\" mode, redirect to\n"
  "                            URL if no suitable repository is found.\n"
  "\n"
  "   repolist                 When in \"directory:\" mode, display a page\n"
  "                            showing a list of available repositories if\n"
  "                            the URL is \"/\".\n"
  "\n"
  "   localauth                Grant administrator privileges to connections\n"
  "                            from 127.0.0.1 or ::1.\n"
  "\n"
  "   skin: LABEL              Use the built-in skin called LABEL rather than\n"
  "                            the default.  If there are no skins called LABEL\n"
  "                            then this line is a no-op.\n"
  "\n"
  "   files: GLOBLIST          GLOBLIST is a comma-separated list of GLOB\n"
  "                            patterns that specify files that can be\n"
  "                            returned verbatim.  This feature allows Fossil\n"
  "                            to act as a web server returning static\n"
  "                            content.\n"
  "\n"
  "   setenv: NAME VALUE       Set environment variable NAME to VALUE.  Or\n"
  "                            if VALUE is omitted, unset NAME.\n"
  "\n"
  "   HOME: PATH               Shorthand for \"setenv: HOME PATH\"\n"
  "\n"
  "   debug: FILE              Causing debugging information to be written\n"
  "                            into FILE.\n"
  "\n"
  "   errorlog: FILE           Warnings, errors, and panics written to FILE.\n"
  "\n"
  "   redirect: REPO URL       Extract the \"name\" query parameter and search\n"
  "                            REPO for a check-in or ticket that matches the\n"
  "                            value of \"name\", then redirect to URL.  There\n"
  "                            can be multiple \"redirect:\" lines that are\n"
  "                            processed in order.  If the REPO is \"*\", then\n"
  "                            an unconditional redirect to URL is taken.\n"
  "\n"
  "Most CGI files contain only a \"repository:\" line.  It is uncommon to\n"
  "use any other option.\n"
  "\n"
  "See also: http, server, winsrv";
static const char zHelp059[] =
  "Usage: %fossil changes|status ?OPTIONS? ?PATHS ...?\n"
  "\n"
  "Report the change status of files in the current checkout.  If one or\n"
  "more PATHS are specified, only changes among the named files and\n"
  "directories are reported.  Directories are searched recursively.\n"
  "\n"
  "The status command is similar to the changes command, except it lacks\n"
  "several of the options supported by changes and it has its own header\n"
  "and footer information.  The header information is a subset of that\n"
  "shown by the info command, and the footer shows if there are any forks.\n"
  "Change type classification is always enabled for the status command.\n"
  "\n"
  "Each line of output is the name of a changed file, with paths shown\n"
  "according to the \"relative-paths\" setting, unless overridden by the\n"
  "--abs-paths or --rel-paths options.\n"
  "\n"
  "By default, all changed files are selected for display.  This behavior\n"
  "can be overridden by using one or more filter options (listed below),\n"
  "in which case only files with the specified change type(s) are shown.\n"
  "As a special case, the --no-merge option does not inhibit this default.\n"
  "This default shows exactly the set of changes that would be checked\n"
  "in by the commit command.\n"
  "\n"
  "If no filter options are used, or if the --merge option is used, the\n"
  "artifact hash of each merge contributor check-in version is displayed at\n"
  "the end of the report.  The --no-merge option is useful to display the\n"
  "default set of changed files without the merge contributors.\n"
  "\n"
  "If change type classification is enabled, each output line starts with\n"
  "a code describing the file's change type, e.g. EDITED or RENAMED.  It\n"
  "is enabled by default unless exactly one change type is selected.  For\n"
  "the purposes of determining the default, --changed counts as selecting\n"
  "one change type.  The default can be overridden by the --classify or\n"
  "--no-classify options.\n"
  "\n"
  "--edited and --updated produce disjoint sets.  --updated shows a file\n"
  "only when it is identical to that of its merge contributor, and the\n"
  "change type classification is UPDATED_BY_MERGE or UPDATED_BY_INTEGRATE.\n"
  "If the file had to be merged with any other changes, it is considered\n"
  "to be merged or conflicted and therefore will be shown by --edited, not\n"
  "--updated, with types EDITED or CONFLICT.  The --changed option can be\n"
  "used to display the union of --edited and --updated.\n"
  "\n"
  "--differ is so named because it lists all the differences between the\n"
  "checked-out version and the checkout directory.  In addition to the\n"
  "default changes (excluding --merge), it lists extra files which (if\n"
  "ignore-glob is set correctly) may be worth adding.  Prior to doing a\n"
  "commit, it is good practice to check --differ to see not only which\n"
  "changes would be committed but also if any files should be added.\n"
  "\n"
  "If both --merge and --no-merge are used, --no-merge has priority.  The\n"
  "same is true of --classify and --no-classify.\n"
  "\n"
  "The \"fossil changes --extra\" command is equivalent to \"fossil extras\".\n"
  "\n"
  "General options:\n"
  "   --abs-paths       Display absolute pathnames.\n"
  "   --rel-paths       Display pathnames relative to the current working\n"
  "                     directory.\n"
  "   --hash            Verify file status using hashing rather than\n"
  "                     relying on file mtimes.\n"
  "   --case-sensitive <BOOL>  Override case-sensitive setting.\n"
  "   --dotfiles        Include unmanaged files beginning with a dot.\n"
  "   --ignore <CSG>    Ignore unmanaged files matching CSG glob patterns.\n"
  "\n"
  "Options specific to the changes command:\n"
  "   --header          Identify the repository if report is non-empty.\n"
  "   -v|--verbose      Say \"(none)\" if the change report is empty.\n"
  "   --classify        Start each line with the file's change type.\n"
  "   --no-classify     Do not print file change types.\n"
  "\n"
  "Filter options:\n"
  "   --edited          Display edited, merged, and conflicted files.\n"
  "   --updated         Display files updated by merge/integrate.\n"
  "   --changed         Combination of the above two options.\n"
  "   --missing         Display missing files.\n"
  "   --added           Display added files.\n"
  "   --deleted         Display deleted files.\n"
  "   --renamed         Display renamed files.\n"
  "   --conflict        Display files having merge conflicts.\n"
  "   --meta            Display files with metadata changes.\n"
  "   --unchanged       Display unchanged files.\n"
  "   --all             Display all managed files, i.e. all of the above.\n"
  "   --extra           Display unmanaged files.\n"
  "   --differ          Display modified and extra files.\n"
  "   --merge           Display merge contributors.\n"
  "   --no-merge        Do not display merge contributors.\n"
  "\n"
  "See also: extras, ls";
static const char zHelp068[] =
  "Usage: %fossil checkout ?VERSION | --latest? ?OPTIONS?\n"
  "   or: %fossil co ?VERSION | --latest? ?OPTIONS?\n"
  "\n"
  "Check out a version specified on the command-line.  This command\n"
  "will abort if there are edited files in the current checkout unless\n"
  "the --force option appears on the command-line.  The --keep option\n"
  "leaves files on disk unchanged, except the manifest and manifest.uuid\n"
  "files.\n"
  "\n"
  "The --latest flag can be used in place of VERSION to checkout the\n"
  "latest version in the repository.\n"
  "\n"
  "Options:\n"
  "   --force           Ignore edited files in the current checkout\n"
  "   --keep            Only update the manifest and manifest.uuid files\n"
  "   --force-missing   Force checkout even if content is missing\n"
  "\n"
  "See also: update";
static const char zHelp066[] =
  "Usage: %fossil commit ?OPTIONS? ?FILE...?\n"
  "\n"
  "Create a new version containing all of the changes in the current\n"
  "checkout.  You will be prompted to enter a check-in comment unless\n"
  "the comment has been specified on the command-line using \"-m\" or a\n"
  "file containing the comment using -M.  The editor defined in the\n"
  "\"editor\" fossil option (see %fossil help set) will be used, or from\n"
  "the \"VISUAL\" or \"EDITOR\" environment variables (in that order) if\n"
  "no editor is set.\n"
  "\n"
  "All files that have changed will be committed unless some subset of\n"
  "files is specified on the command line.\n"
  "\n"
  "The --branch option followed by a branch name causes the new\n"
  "check-in to be placed in a newly-created branch with the name\n"
  "passed to the --branch option.\n"
  "\n"
  "Use the --branchcolor option followed by a color name (ex:\n"
  "'#ffc0c0') to specify the background color of entries in the new\n"
  "branch when shown in the web timeline interface.  The use of\n"
  "the --branchcolor option is not recommended.  Instead, let Fossil\n"
  "choose the branch color automatically.\n"
  "\n"
  "The --bgcolor option works like --branchcolor but only sets the\n"
  "background color for a single check-in.  Subsequent check-ins revert\n"
  "to the default color.\n"
  "\n"
  "A check-in is not permitted to fork unless the --allow-fork option\n"
  "appears.  An empty check-in (i.e. with nothing changed) is not\n"
  "allowed unless the --allow-empty option appears.  A check-in may not\n"
  "be older than its ancestor unless the --allow-older option appears.\n"
  "If any of files in the check-in appear to contain unresolved merge\n"
  "conflicts, the check-in will not be allowed unless the\n"
  "--allow-conflict option is present.  In addition, the entire\n"
  "check-in process may be aborted if a file contains content that\n"
  "appears to be binary, Unicode text, or text with CR/LF line endings\n"
  "unless the interactive user chooses to proceed.  If there is no\n"
  "interactive user or these warnings should be skipped for some other\n"
  "reason, the --no-warnings option may be used.  A check-in is not\n"
  "allowed against a closed leaf.\n"
  "\n"
  "If a commit message is blank, you will be prompted:\n"
  "(\"continue (y/N)?\") to confirm you really want to commit with a\n"
  "blank commit message.  The default value is \"N\", do not commit.\n"
  "\n"
  "The --private option creates a private check-in that is never synced.\n"
  "Children of private check-ins are automatically private.\n"
  "\n"
  "The --tag option applies the symbolic tag name to the check-in.\n"
  "\n"
  "The --hash option detects edited files by computing each file's\n"
  "artifact hash rather than just checking for changes to its size or mtime.\n"
  "\n"
  "Options:\n"
  "   --allow-conflict           allow unresolved merge conflicts\n"
  "   --allow-empty              allow a commit with no changes\n"
  "   --allow-fork               allow the commit to fork\n"
  "   --allow-older              allow a commit older than its ancestor\n"
  "   --baseline                 use a baseline manifest in the commit process\n"
  "   --bgcolor COLOR            apply COLOR to this one check-in only\n"
  "   --branch NEW-BRANCH-NAME   check in to this new branch\n"
  "   --branchcolor COLOR        apply given COLOR to the branch\n"
  "   --close                    close the branch being committed\n"
  "   --delta                    use a delta manifest in the commit process\n"
  "   --integrate                close all merged-in branches\n"
  "   -m|--comment COMMENT-TEXT  use COMMENT-TEXT as commit comment\n"
  "   -M|--message-file FILE     read the commit comment from given file\n"
  "   --mimetype MIMETYPE        mimetype of check-in comment\n"
  "   -n|--dry-run               If given, display instead of run actions\n"
  "   --no-prompt                This option disables prompting the user for\n"
  "                              input and assumes an answer of 'No' for every\n"
  "                              question.\n"
  "   --no-warnings              omit all warnings about file contents\n"
  "   --nosign                   do not attempt to sign this commit with gpg\n"
  "   --private                  do not sync changes and their descendants\n"
  "   --hash                     verify file status using hashing rather\n"
  "                              than relying on file mtimes\n"
  "   --tag TAG-NAME             assign given tag TAG-NAME to the check-in\n"
  "   --date-override DATETIME   DATE to use instead of 'now'\n"
  "   --user-override USER       USER to use instead of the current default\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.\n"
  "\n"
  "See also: branch, changes, checkout, extras, sync";
static const char zHelp063[] =
  "Usage: %fossil clean ?OPTIONS? ?PATH ...?\n"
  "\n"
  "Delete all \"extra\" files in the source tree.  \"Extra\" files are files\n"
  "that are not officially part of the checkout.  If one or more PATH\n"
  "arguments appear, then only the files named, or files contained with\n"
  "directories named, will be removed.\n"
  "\n"
  "If the --prompt option is used, prompts are issued to confirm the\n"
  "permanent removal of each file.  Otherwise, files are backed up to the\n"
  "undo buffer prior to removal, and prompts are issued only for files\n"
  "whose removal cannot be undone due to their large size or due to\n"
  "--disable-undo being used.\n"
  "\n"
  "The --force option treats all prompts as having been answered yes,\n"
  "whereas --no-prompt treats them as having been answered no.\n"
  "\n"
  "Files matching any glob pattern specified by the --clean option are\n"
  "deleted without prompting, and the removal cannot be undone.\n"
  "\n"
  "No file that matches glob patterns specified by --ignore or --keep will\n"
  "ever be deleted.  Files and subdirectories whose names begin with \".\"\n"
  "are automatically ignored unless the --dotfiles option is used.\n"
  "\n"
  "The default values for --clean, --ignore, and --keep are determined by\n"
  "the (versionable) clean-glob, ignore-glob, and keep-glob settings.\n"
  "\n"
  "The --verily option ignores the keep-glob and ignore-glob settings and\n"
  "turns on --force, --emptydirs, --dotfiles, and --disable-undo.  Use the\n"
  "--verily option when you really want to clean up everything.  Extreme\n"
  "care should be exercised when using the --verily option.\n"
  "\n"
  "Options:\n"
  "   --allckouts      Check for empty directories within any checkouts\n"
  "                    that may be nested within the current one.  This\n"
  "                    option should be used with great care because the\n"
  "                    empty-dirs setting (and other applicable settings)\n"
  "                    belonging to the other repositories, if any, will\n"
  "                    not be checked.\n"
  "   --case-sensitive <BOOL> override case-sensitive setting\n"
  "   --dirsonly       Only remove empty directories.  No files will\n"
  "                    be removed.  Using this option will automatically\n"
  "                    enable the --emptydirs option as well.\n"
  "   --disable-undo   WARNING: This option disables use of the undo\n"
  "                    mechanism for this clean operation and should be\n"
  "                    used with extreme caution.\n"
  "   --dotfiles       Include files beginning with a dot (\".\").\n"
  "   --emptydirs      Remove any empty directories that are not\n"
  "                    explicitly exempted via the empty-dirs setting\n"
  "                    or another applicable setting or command line\n"
  "                    argument.  Matching files, if any, are removed\n"
  "                    prior to checking for any empty directories;\n"
  "                    therefore, directories that contain only files\n"
  "                    that were removed will be removed as well.\n"
  "   -f|--force       Remove files without prompting.\n"
  "   -i|--prompt      Prompt before removing each file.  This option\n"
  "                    implies the --disable-undo option.\n"
  "   -x|--verily      WARNING: Removes everything that is not a managed\n"
  "                    file or the repository itself.  This option\n"
  "                    implies the --force, --emptydirs, --dotfiles, and\n"
  "                    --disable-undo options.\n"
  "                    Furthermore, it completely disregards the keep-glob\n"
  "                    and ignore-glob settings.  However, it does honor\n"
  "                    the --ignore and --keep options.\n"
  "   --clean <CSG>    WARNING: Never prompt to delete any files matching\n"
  "                    this comma separated list of glob patterns.  Also,\n"
  "                    deletions of any files matching this pattern list\n"
  "                    cannot be undone.\n"
  "   --ignore <CSG>   Ignore files matching patterns from the\n"
  "                    comma separated list of glob patterns.\n"
  "   --keep <CSG>     Keep files matching this comma separated\n"
  "                    list of glob patterns.\n"
  "   -n|--dry-run     Delete nothing, but display what would have been\n"
  "                    deleted.\n"
  "   --no-prompt      This option disables prompting the user for input\n"
  "                    and assumes an answer of 'No' for every question.\n"
  "   --temp           Remove only Fossil-generated temporary files.\n"
  "   -v|--verbose     Show all files as they are removed.\n"
  "\n"
  "See also: addremove, extras, status";
static const char zHelp107[] =
  "The VALUE of this setting is a comma or newline-separated list of GLOB\n"
  "patterns specifying files that the \"clean\" command will\n"
  "delete without prompting or allowing undo.\n"
  "Example: *.a,*.lib,*.o";
static const char zHelp108[] =
  "When enabled, fossil will attempt to sign all commits\n"
  "with gpg.  When disabled, commits will be unsigned.";
static const char zHelp071[] =
  "Usage: %fossil clone ?OPTIONS? URI FILENAME\n"
  "\n"
  "Make a clone of a repository specified by URI in the local\n"
  "file named FILENAME.\n"
  "\n"
  "URI may be one of the following form: ([...] mean optional)\n"
  "  HTTP/HTTPS protocol:\n"
  "    http[s]://[userid[:password]@]host[:port][/path]\n"
  "\n"
  "  SSH protocol:\n"
  "    ssh://[userid@]host[:port]/path/to/repo.fossil\\\n"
  "    [?fossil=path/to/fossil.exe]\n"
  "\n"
  "  Filesystem:\n"
  "    [file://]path/to/repo.fossil\n"
  "\n"
  "Note 1: For ssh and filesystem, path must have an extra leading\n"
  "        '/' to use an absolute path.\n"
  "\n"
  "Note 2: Use %HH escapes for special characters in the userid and\n"
  "        password.  For example \"%40\" in place of \"@\", \"%2f\" in place\n"
  "        of \"/\", and \"%3a\" in place of \":\".\n"
  "\n"
  "By default, your current login name is used to create the default\n"
  "admin user. This can be overridden using the -A|--admin-user\n"
  "parameter.\n"
  "\n"
  "Options:\n"
  "   --admin-user|-A USERNAME   Make USERNAME the administrator\n"
  "   --nocompress               Omit extra delta compression\n"
  "   --once                     Don't remember the URI.\n"
  "   --private                  Also clone private branches\n"
  "   --ssl-identity FILENAME    Use the SSL identity if requested by the server\n"
  "   --ssh-command|-c SSH       Use SSH as the \"ssh\" command\n"
  "   --httpauth|-B USER:PASS    Add HTTP Basic Authorization to requests\n"
  "   -u|--unversioned           Also sync unversioned content\n"
  "   -v|--verbose               Show more statistics in output\n"
  "\n"
  "See also: init";
static const char zHelp070[] =
  "Usage: %fossil close ?OPTIONS?\n"
  "\n"
  "The opposite of \"open\".  Close the current database connection.\n"
  "Require a -f or --force flag if there are unsaved changes in the\n"
  "current check-out or if there is non-empty stash.\n"
  "\n"
  "Options:\n"
  "  --force|-f  necessary to close a check out with uncommitted changes\n"
  "\n"
  "See also: open";
static const char zHelp109[] =
  "Set the default options for printing timeline comments to the console.\n"
  "\n"
  "The global --comfmtflags command-line option (or alias --comment-format)\n"
  "overrides this setting.\n"
  "\n"
  "Possible values are:\n"
  "   1     Activate the legacy comment printing format (default).\n"
  "\n"
  "Or a bitwise combination of the following flags:\n"
  "   0     Activate the newer (non-legacy) comment printing format.\n"
  "   2     Trim leading and trailing CR and LF characters.\n"
  "   4     Trim leading and trailing white space characters.\n"
  "   8     Attempt to break lines on word boundaries.\n"
  "  16     Break lines before the original comment embedded in other text.\n"
  "\n"
  "Note: To preserve line breaks, activate the newer (non-legacy) comment\n"
  "printing format (i.e. set to \"0\", or a combination not including \"1\").\n"
  "\n"
  "Note: The options for timeline comments displayed on the web UI can be\n"
  "configured through the /setup_timeline web page.";
static const char zHelp074[] =
  "Usage: %fossil configuration METHOD ... ?OPTIONS?\n"
  "\n"
  "Where METHOD is one of: export import merge pull push reset.  All methods\n"
  "accept the -R or --repository option to specify a repository.\n"
  "\n"
  "   %fossil configuration export AREA FILENAME\n"
  "\n"
  "        Write to FILENAME exported configuration information for AREA.\n"
  "        AREA can be one of:\n"
  "\n"
  "            all email project shun skin ticket user alias subscriber\n"
  "\n"
  "   %fossil configuration import FILENAME\n"
  "\n"
  "        Read a configuration from FILENAME, overwriting the current\n"
  "        configuration.\n"
  "\n"
  "   %fossil configuration merge FILENAME\n"
  "\n"
  "        Read a configuration from FILENAME and merge its values into\n"
  "        the current configuration.  Existing values take priority over\n"
  "        values read from FILENAME.\n"
  "\n"
  "   %fossil configuration pull AREA ?URL?\n"
  "\n"
  "        Pull and install the configuration from a different server\n"
  "        identified by URL.  If no URL is specified, then the default\n"
  "        server is used.  Use the --overwrite flag to completely\n"
  "        replace local settings with content received from URL.\n"
  "\n"
  "   %fossil configuration push AREA ?URL?\n"
  "\n"
  "        Push the local configuration into the remote server identified\n"
  "        by URL.  Admin privilege is required on the remote server for\n"
  "        this to work.  When the same record exists both locally and on\n"
  "        the remote end, the one that was most recently changed wins.\n"
  "\n"
  "   %fossil configuration reset AREA\n"
  "\n"
  "        Restore the configuration to the default.  AREA as above.\n"
  "\n"
  "   %fossil configuration sync AREA ?URL?\n"
  "\n"
  "        Synchronize configuration changes in the local repository with\n"
  "        the remote repository at URL.\n"
  "\n"
  "Options:\n"
  "   -R|--repository FILE       Extract info from repository FILE\n"
  "\n"
  "See also: settings, unset";
static const char zHelp110[] =
  "The value is a comma or newline-separated list of GLOB patterns for\n"
  "text files in which it is ok to have CR, CR+LF or mixed\n"
  "line endings. Set to \"*\" to disable CR+LF checking.\n"
  "The crnl-glob setting is a compatibility alias.";
static const char zHelp111[] =
  "This is an alias for the crlf-glob setting.";
static const char zHelp359[] =
  "Usage: %fossil dbstat OPTIONS\n"
  "\n"
  "Shows statistics and global information about the repository.\n"
  "\n"
  "Options:\n"
  "\n"
  "  --brief|-b           Only show essential elements\n"
  "  --db-check           Run a PRAGMA quick_check on the repository database\n"
  "  --omit-version-info  Omit the SQLite and Fossil version information";
static const char zHelp297[] =
  "Usage %fossil deconstruct ?OPTIONS? DESTINATION\n"
  "\n"
  "\n"
  "This command exports all artifacts of a given repository and\n"
  "writes all artifacts to the file system. The DESTINATION directory\n"
  "will be populated with subdirectories AA and files AA/BBBBBBBBB.., where\n"
  "AABBBBBBBBB.. is the 40+ character artifact ID, AA the first 2 characters.\n"
  "If -L|--prefixlength is given, the length (default 2) of the directory\n"
  "prefix can be set to 0,1,..,9 characters.\n"
  "\n"
  "Options:\n"
  "  -R|--repository REPOSITORY  Deconstruct given REPOSITORY.\n"
  "  -K|--keep-rid1              Save the filename of the artifact with RID=1 to\n"
  "                              the file .rid1 in the DESTINATION directory.\n"
  "  -L|--prefixlength N         Set the length of the names of the DESTINATION\n"
  "                              subdirectories to N.\n"
  "  --private                   Include private artifacts.\n"
  "\n"
  "See also: rebuild, reconstruct";
static const char zHelp112[] =
  "Permissions given automatically to new users.  For more\n"
  "information on permissions see the Users page in Server\n"
  "Administration of the HTTP UI.";
static const char zHelp162[] =
  "Usage: %fossil descendants ?CHECKIN? ?OPTIONS?\n"
  "\n"
  "Find all leaf descendants of the check-in specified or if the argument\n"
  "is omitted, of the check-in currently checked out.\n"
  "\n"
  "Options:\n"
  "   -R|--repository FILE       Extract info from repository FILE\n"
  "   -W|--width <num>           Width of lines (default is to auto-detect).\n"
  "                              Must be >20 or 0 (= no limit, resulting in a\n"
  "                              single line per entry).\n"
  "\n"
  "See also: finfo, info, leaves";
static const char zHelp173[] =
  "Usage: %fossil diff|gdiff ?OPTIONS? ?FILE1? ?FILE2 ...?\n"
  "\n"
  "Show the difference between the current version of each of the FILEs\n"
  "specified (as they exist on disk) and that same file as it was checked\n"
  "out.  Or if the FILE arguments are omitted, show the unsaved changes\n"
  "currently in the working check-out.\n"
  "\n"
  "If the \"--from VERSION\" or \"-r VERSION\" option is used it specifies\n"
  "the source check-in for the diff operation.  If not specified, the\n"
  "source check-in is the base check-in for the current check-out.\n"
  "\n"
  "If the \"--to VERSION\" option appears, it specifies the check-in from\n"
  "which the second version of the file or files is taken.  If there is\n"
  "no \"--to\" option then the (possibly edited) files in the current check-out\n"
  "are used.\n"
  "\n"
  "The \"--checkin VERSION\" option shows the changes made by\n"
  "check-in VERSION relative to its primary parent.\n"
  "\n"
  "The \"-i\" command-line option forces the use of the internal diff logic\n"
  "rather than any external diff program that might be configured using\n"
  "the \"setting\" command.  If no external diff program is configured, then\n"
  "the \"-i\" option is a no-op.  The \"-i\" option converts \"gdiff\" into \"diff\".\n"
  "\n"
  "The \"-N\" or \"--new-file\" option causes the complete text of added or\n"
  "deleted files to be displayed.\n"
  "\n"
  "The \"--diff-binary\" option enables or disables the inclusion of binary files\n"
  "when using an external diff program.\n"
  "\n"
  "The \"--binary\" option causes files matching the glob PATTERN to be treated\n"
  "as binary when considering if they should be used with external diff program.\n"
  "This option overrides the \"binary-glob\" setting.\n"
  "\n"
  "Options:\n"
  "  --binary PATTERN           Treat files that match the glob PATTERN as binary\n"
  "  --branch BRANCH            Show diff of all changes on BRANCH\n"
  "  --brief                    Show filenames only\n"
  "  --checkin VERSION          Show diff of all changes in VERSION\n"
  "  --command PROG             External diff program - overrides \"diff-command\"\n"
  "  --context|-c N             Use N lines of context\n"
  "  --diff-binary BOOL         Include binary files when using external commands\n"
  "  --exec-abs-paths           Force absolute path names with external commands.\n"
  "  --exec-rel-paths           Force relative path names with external commands.\n"
  "  --from|-r VERSION          Select VERSION as source for the diff\n"
  "  --internal|-i              Use internal diff logic\n"
  "  --new-file|-N              Show complete text of added and deleted files\n"
  "  --numstat                  Show only the number of lines delete and added\n"
  "  --side-by-side|-y          Side-by-side diff\n"
  "  --strip-trailing-cr        Strip trailing CR\n"
  "  --tk                       Launch a Tcl/Tk GUI for display\n"
  "  --to VERSION               Select VERSION as target for the diff\n"
  "  --undo                     Diff against the \"undo\" buffer\n"
  "  --unified                  Unified diff\n"
  "  -v|--verbose               Output complete text of added or deleted files\n"
  "  -w|--ignore-all-space      Ignore white space when comparing lines\n"
  "  -W|--width <num>           Width of lines in side-by-side diff\n"
  "  -Z|--ignore-trailing-space Ignore changes to end-of-line whitespace";
static const char zHelp113[] =
  "If enabled, permit files that may be binary\n"
  "or that match the \"binary-glob\" setting to be used with\n"
  "external diff programs.  If disabled, skip these files.";
static const char zHelp114[] =
  "The value is an external command to run when performing a diff.\n"
  "If undefined, the internal text diff will be used.";
static const char zHelp115[] =
  "If enabled, prevent this repository from pushing from client to\n"
  "server.  This can be used as an extra precaution to prevent\n"
  "accidental pushes to a public server from a private clone.";
static const char zHelp116[] =
  "If enabled, include --dotfiles option for all compatible commands.";
static const char zHelp117[] =
  "The value is an external command that will launch the\n"
  "text editor command used for check-in comments.";
static const char zHelp014[] =
  "This is the email address for the repository.  Outbound emails add\n"
  "this email address as the \"From:\" field.";
static const char zHelp011[] =
  "This is a command to which outbound email content is piped when the\n"
  "email-send-method is set to \"pipe\".  The command must extract\n"
  "recipient, sender, subject, and all other relevant information\n"
  "from the email header.";
static const char zHelp013[] =
  "This is an SQLite database file into which outbound emails are written\n"
  "if the email-send-method is set to \"db\".";
static const char zHelp012[] =
  "This is a directory into which outbound emails are written as individual\n"
  "files if the email-send-method is set to \"dir\".";
static const char zHelp010[] =
  "Determine the method used to send email.  Allowed values are\n"
  "\"off\", \"relay\", \"pipe\", \"dir\", \"db\", and \"stdout\".  The \"off\" value\n"
  "means no email is ever sent.  The \"relay\" value means emails are sent\n"
  "to an Mail Sending Agent using SMTP located at email-send-relayhost.\n"
  "The \"pipe\" value means email messages are piped into a command \n"
  "determined by the email-send-command setting. The \"dir\" value means\n"
  "emails are written to individual files in a directory determined\n"
  "by the email-send-dir setting.  The \"db\" value means that emails\n"
  "are added to an SQLite database named by the* email-send-db setting.\n"
  "The \"stdout\" value writes email text to standard output, for debugging.";
static const char zHelp015[] =
  "This is the hostname and TCP port to which output email messages\n"
  "are sent when email-send-method is \"relay\".  There should be an\n"
  "SMTP server configured as a Mail Submission Agent listening on the\n"
  "designated host and port and all times.";
static const char zHelp118[] =
  "The value is a comma or newline-separated list of pathnames. On\n"
  "update and checkout commands, if no file or directory\n"
  "exists with that name, an empty directory will be\n"
  "created.";
static const char zHelp119[] =
  "The value is a comma or newline-separated list of GLOB\n"
  "patterns specifying files that the \"commit\" command will\n"
  "ignore when issuing warnings about text files that may\n"
  "use another encoding than ASCII or UTF-8. Set to \"*\"\n"
  "to disable encoding checking.";
#if !defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
static const char zHelp121[] =
  "When executing certain external commands (e.g. diff and\n"
  "gdiff), use relative paths.";
#endif
#if defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
static const char zHelp120[] =
  "When executing certain external commands (e.g. diff and\n"
  "gdiff), use relative paths.";
#endif
static const char zHelp196[] =
  "Usage: %fossil export --git ?OPTIONS? ?REPOSITORY?\n"
  "\n"
  "Write an export of all check-ins to standard output.  The export is\n"
  "written in the git-fast-export file format assuming the --git option is\n"
  "provided.  The git-fast-export format is currently the only VCS\n"
  "interchange format supported, though other formats may be added in\n"
  "the future.\n"
  "\n"
  "Run this command within a checkout.  Or use the -R or --repository\n"
  "option to specify a Fossil repository to be exported.\n"
  "\n"
  "Only check-ins are exported using --git.  Git does not support tickets\n"
  "or wiki or tech notes or attachments, so none of those are exported.\n"
  "\n"
  "If the \"--import-marks FILE\" option is used, it contains a list of\n"
  "rids to skip.\n"
  "\n"
  "If the \"--export-marks FILE\" option is used, the rid of all commits and\n"
  "blobs written on exit for use with \"--import-marks\" on the next run.\n"
  "\n"
  "Options:\n"
  "  --export-marks FILE          export rids of exported data to FILE\n"
  "  --import-marks FILE          read rids of data to ignore from FILE\n"
  "  --rename-trunk NAME          use NAME as name of exported trunk branch\n"
  "  --repository|-R REPOSITORY   export the given REPOSITORY\n"
  "\n"
  "See also: import";
static const char zHelp062[] =
  "Usage: %fossil extras ?OPTIONS? ?PATH1 ...?\n"
  "\n"
  "Print a list of all files in the source tree that are not part of the\n"
  "current checkout. See also the \"clean\" command. If paths are specified,\n"
  "only files in the given directories will be listed.\n"
  "\n"
  "Files and subdirectories whose names begin with \".\" are normally\n"
  "ignored but can be included by adding the --dotfiles option.\n"
  "\n"
  "Files whose names match any of the glob patterns in the \"ignore-glob\"\n"
  "setting are ignored. This setting can be overridden by the --ignore\n"
  "option, whose CSG argument is a comma-separated list of glob patterns.\n"
  "\n"
  "Pathnames are displayed according to the \"relative-paths\" setting,\n"
  "unless overridden by the --abs-paths or --rel-paths options.\n"
  "\n"
  "Options:\n"
  "   --abs-paths      Display absolute pathnames.\n"
  "   --case-sensitive <BOOL> override case-sensitive setting\n"
  "   --dotfiles       include files beginning with a dot (\".\")\n"
  "   --header         Identify the repository if there are extras\n"
  "   --ignore <CSG>   ignore files matching patterns from the argument\n"
  "   --rel-paths      Display pathnames relative to the current working\n"
  "                    directory.\n"
  "\n"
  "See also: changes, clean, status";
static const char zHelp208[] =
  "Usage: %fossil finfo ?OPTIONS? FILENAME\n"
  "\n"
  "Print the complete change history for a single file going backwards\n"
  "in time.  The default mode is -l.\n"
  "\n"
  "For the -l|--log mode: If \"-b|--brief\" is specified one line per revision\n"
  "is printed, otherwise the full comment is printed.  The \"-n|--limit N\"\n"
  "and \"--offset P\" options limits the output to the first N changes\n"
  "after skipping P changes.\n"
  "\n"
  "In the -s mode prints the status as <status> <revision>.  This is\n"
  "a quick status and does not check for up-to-date-ness of the file.\n"
  "\n"
  "In the -p mode, there's an optional flag \"-r|--revision REVISION\".\n"
  "The specified version (or the latest checked out version) is printed\n"
  "to stdout.  The -p mode is another form of the \"cat\" command.\n"
  "\n"
  "Options:\n"
  "  -b|--brief           display a brief (one line / revision) summary\n"
  "  --case-sensitive B   Enable or disable case-sensitive filenames.  B is a\n"
  "                       boolean: \"yes\", \"no\", \"true\", \"false\", etc.\n"
  "  -l|--log             select log mode (the default)\n"
  "  -n|--limit N         Display the first N changes (default unlimited).\n"
  "                       N<=0 means no limit.\n"
  "  --offset P           skip P changes\n"
  "  -p|--print           select print mode\n"
  "  -r|--revision R      print the given revision (or ckout, if none is given)\n"
  "                       to stdout (only in print mode)\n"
  "  -s|--status          select status mode (print a status indicator for FILE)\n"
  "  -W|--width <num>     Width of lines (default is to auto-detect). Must be\n"
  "                       >22 or 0 (= no limit, resulting in a single line per\n"
  "                       entry).\n"
  "\n"
  "See also: artifact, cat, descendants, info, leaves";
static const char zHelp313[] =
  "Usage: fossil fts-config ?SUBCOMMAND? ?ARGUMENT?\n"
  "\n"
  "The \"fossil fts-config\" command configures the full-text search capabilities\n"
  "of the repository.  Subcommands:\n"
  "\n"
  "    reindex            Rebuild the search index.  This is a no-op if\n"
  "                       index search is disabled\n"
  "\n"
  "    index (on|off)     Turn the search index on or off\n"
  "\n"
  "    enable cdtwe       Enable various kinds of search. c=Check-ins,\n"
  "                       d=Documents, t=Tickets, w=Wiki, e=Tech Notes.\n"
  "\n"
  "    disable cdtwe      Disable various kinds of search\n"
  "\n"
  "    stemmer (on|off)   Turn the Porter stemmer on or off for indexed\n"
  "                       search.  (Unindexed search is never stemmed.)\n"
  "\n"
  "The current search settings are displayed after any changes are applied.\n"
  "Run this command with no arguments to simply see the settings.";
#ifdef FOSSIL_HAVE_FUSEFS
static const char zHelp221[] =
  "Usage: %fossil fusefs [--debug] DIRECTORY\n"
  "\n"
  "This command uses the Fuse Filesystem (FuseFS) to mount a directory\n"
  "at DIRECTORY that contains the content of all check-ins in the\n"
  "repository.  The names of files are DIRECTORY/checkins/VERSION/PATH\n"
  "where DIRECTORY is the root of the mount, VERSION is any valid\n"
  "check-in name (examples: \"trunk\" or \"tip\" or a tag or any unique\n"
  "prefix of an artifact hash, etc) and PATH is the pathname of the file in\n"
  "the check-in.  If DIRECTORY does not exist, then an attempt is made\n"
  "to create it.\n"
  "\n"
  "The DIRECTORY/checkins directory is not searchable so one cannot\n"
  "do \"ls DIRECTORY/checkins\" to get a listing of all possible check-in\n"
  "names.  There are countless variations on check-in names and it is\n"
  "impractical to list them all.  But all other directories are searchable\n"
  "and so the \"ls\" command will work everywhere else in the fusefs\n"
  "file hierarchy.\n"
  "\n"
  "The FuseFS typically only works on Linux, and then only on Linux\n"
  "systems that have the right kernel drivers and have installed the\n"
  "appropriate support libraries.\n"
  "\n"
  "After stopping the \"fossil fusefs\" command, it might also be necessary\n"
  "to run \"fusermount -u DIRECTORY\" to reset the FuseFS before using it\n"
  "again.";
#endif
static const char zHelp122[] =
  "The value is an external command to run when performing a graphical\n"
  "diff. If undefined, text diff will be used.";
static const char zHelp123[] =
  "The value is a graphical merge conflict resolver command operating\n"
  "on four files.  Examples:\n"
  "\n"
  "    kdiff3 \"%baseline\" \"%original\" \"%merge\" -o \"%output\"\n"
  "    xxdiff \"%original\" \"%baseline\" \"%merge\" -M \"%output\"\n"
  "    meld \"%baseline\" \"%original\" \"%merge\" \"%output\"";
static const char zHelp299[] =
  "Usage: %fossil grep [OPTIONS] PATTERN FILENAME\n"
  "\n"
  "Attempt to match the given POSIX extended regular expression PATTERN\n"
  "over all historic versions of FILENAME.  For details of the supported\n"
  "RE dialect, see https://fossil-scm.org/fossil/doc/trunk/www/grep.md\n"
  "\n"
  "Options:\n"
  "\n"
  "    -i|--ignore-case         Ignore case\n"
  "    -l|--files-with-matches  List only checkin ID for versions that match\n"
  "    -v|--verbose             Show each file as it is analyzed";
static const char zHelp124[] =
  "The number of hexadecimal digits of the SHA3 hash to display.";
static const char zHelp224[] =
  "Usage: fossil hash-policy ?NEW-POLICY?\n"
  "\n"
  "Query or set the hash policy for the current repository.  Available hash\n"
  "policies are as follows:\n"
  "\n"
  "  sha1              New artifact names are created using SHA1\n"
  "\n"
  "  auto              New artifact names are created using SHA1, but\n"
  "                    automatically change the policy to \"sha3\" when\n"
  "                    any SHA3 artifact enters the repository.\n"
  "\n"
  "  sha3              New artifact names are created using SHA3, but\n"
  "                    older artifacts with SHA1 names may be reused.\n"
  "\n"
  "  sha3-only         Use only SHA3 artifact names.  Do not reuse legacy\n"
  "                    SHA1 names.\n"
  "\n"
  "  shun-sha1         Shun any SHA1 artifacts received by sync operations\n"
  "                    other than clones.  Older legacy SHA1 artifacts are\n"
  "                    allowed during a clone.\n"
  "\n"
  "The default hash policy for existing repositories is \"auto\", which will\n"
  "immediately promote to \"sha3\" if the repository contains one or more\n"
  "artifacts with SHA3 names.  The default hash policy for new repositories\n"
  "is \"shun-sha1\".";
static const char zHelp180[] =
  "Usage: %fossil help TOPIC\n"
  "   or: %fossil TOPIC --help\n"
  "\n"
  "Display information on how to use TOPIC, which may be a command, webpage, or\n"
  "setting.  Webpage names begin with \"/\".  To display a list of available\n"
  "topics, use one of:\n"
  "\n"
  "   %fossil help                Show common commands\n"
  "   %fossil help -a|--all       Show both common and auxiliary commands\n"
  "   %fossil help -o|--options   Show command-line options common to all cmds\n"
  "   %fossil help -s|--setting   Show setting names\n"
  "   %fossil help -t|--test      Show test commands only\n"
  "   %fossil help -x|--aux       Show auxiliary commands only\n"
  "   %fossil help -w|--www       Show list of webpages";
static const char zHelp256[] =
  "Usage: %fossil http ?REPOSITORY? ?OPTIONS?\n"
  "\n"
  "Handle a single HTTP request appearing on stdin.  The resulting webpage\n"
  "is delivered on stdout.  This method is used to launch an HTTP request\n"
  "handler from inetd, for example.  The argument is the name of the\n"
  "repository.\n"
  "\n"
  "If REPOSITORY is a directory that contains one or more repositories,\n"
  "either directly in REPOSITORY itself or in subdirectories, and\n"
  "with names of the form \"*.fossil\" then a prefix of the URL pathname\n"
  "selects from among the various repositories.  If the pathname does\n"
  "not select a valid repository and the --notfound option is available,\n"
  "then the server redirects (HTTP code 302) to the URL of --notfound.\n"
  "When REPOSITORY is a directory, the pathname must contain only\n"
  "alphanumerics, \"_\", \"/\", \"-\" and \".\" and no \"-\" may occur after a \"/\"\n"
  "and every \".\" must be surrounded on both sides by alphanumerics or else\n"
  "a 404 error is returned.  Static content files in the directory are\n"
  "returned if they match comma-separate GLOB pattern specified by --files\n"
  "and do not match \"*.fossil*\" and have a well-known suffix.\n"
  "\n"
  "The --host option can be used to specify the hostname for the server.\n"
  "The --https option indicates that the request came from HTTPS rather\n"
  "than HTTP. If --nossl is given, then SSL connections will not be available,\n"
  "thus also no redirecting from http: to https: will take place.\n"
  "\n"
  "If the --localauth option is given, then automatic login is performed\n"
  "for requests coming from localhost, if the \"localauth\" setting is not\n"
  "enabled.\n"
  "\n"
  "Options:\n"
  "  --baseurl URL    base URL (useful with reverse proxies)\n"
  "  --files GLOB     comma-separate glob patterns for static file to serve\n"
  "  --localauth      enable automatic login for local connections\n"
  "  --host NAME      specify hostname of the server\n"
  "  --https          signal a request coming in via https\n"
  "  --in FILE        Take input from FILE instead of standard input\n"
  "  --ipaddr ADDR    Assume the request comes from the given IP address\n"
  "  --nocompress     do not compress HTTP replies\n"
  "  --nodelay        omit backoffice processing if it would delay process exit\n"
  "  --nojail         drop root privilege but do not enter the chroot jail\n"
  "  --nossl          signal that no SSL connections are available\n"
  "  --notfound URL   use URL as \"HTTP 404, object not found\" page.\n"
  "  --out FILE       write results to FILE instead of to standard output\n"
  "  --repolist       If REPOSITORY is directory, URL \"/\" lists all repos\n"
  "  --scgi           Interpret input as SCGI rather than HTTP\n"
  "  --skin LABEL     Use override skin LABEL\n"
  "  --th-trace       trace TH1 execution (for debugging purposes)\n"
  "  --usepidkey      Use saved encryption key from parent process.  This is\n"
  "                   only necessary when using SEE on Windows.\n"
  "\n"
  "See also: cgi, server, winsrv";
static const char zHelp125[] =
  "The default TCP/IP port number to use by the \"server\"\n"
  "and \"ui\" commands.";
static const char zHelp126[] =
  "If true, then the Fossil web server will redirect unencrypted\n"
  "login screen requests to HTTPS.";
static const char zHelp127[] =
  "The value is a comma or newline-separated list of GLOB\n"
  "patterns specifying files that the \"add\", \"addremove\",\n"
  "\"clean\", and \"extras\" commands will ignore.\n"
  "\n"
  "Example:  *.log customCode.c notes.txt";
static const char zHelp225[] =
  "Usage: %fossil import ?--git? ?OPTIONS? NEW-REPOSITORY ?INPUT-FILE?\n"
  "   or: %fossil import --svn ?OPTIONS? NEW-REPOSITORY ?INPUT-FILE?\n"
  "\n"
  "Read interchange format generated by another VCS and use it to\n"
  "construct a new Fossil repository named by the NEW-REPOSITORY\n"
  "argument.  If no input file is supplied the interchange format\n"
  "data is read from standard input.\n"
  "\n"
  "The following formats are currently understood by this command\n"
  "\n"
  "  --git        Import from the git-fast-export file format (default)\n"
  "               Options:\n"
  "                 --import-marks  FILE Restore marks table from FILE\n"
  "                 --export-marks  FILE Save marks table to FILE\n"
  "                 --rename-master NAME Renames the master branch to NAME\n"
  "                 --use-author    Uses author as the committer\n"
  "\n"
  "  --svn        Import from the svnadmin-dump file format.  The default\n"
  "               behaviour (unless overridden by --flat) is to treat 3\n"
  "               folders in the SVN root as special, following the\n"
  "               common layout of SVN repositories.  These are (by\n"
  "               default) trunk/, branches/ and tags/.  The SVN --deltas\n"
  "               format is supported but not required.\n"
  "               Options:\n"
  "                 --trunk FOLDER     Name of trunk folder\n"
  "                 --branches FOLDER  Name of branches folder\n"
  "                 --tags FOLDER      Name of tags folder\n"
  "                 --base PATH        Path to project root in repository\n"
  "                 --flat             The whole dump is a single branch\n"
  "                 --rev-tags         Tag each revision, implied by -i\n"
  "                 --no-rev-tags      Disables tagging effect of -i\n"
  "                 --rename-rev PAT   Rev tag names, default \"svn-rev-%\"\n"
  "                 --ignore-tree DIR  Ignores subtree rooted at DIR\n"
  "\n"
  "Common Options:\n"
  "  -i|--incremental     allow importing into an existing repository\n"
  "  -f|--force           overwrite repository if already exists\n"
  "  -q|--quiet           omit progress output\n"
  "  --no-rebuild         skip the \"rebuilding metadata\" step\n"
  "  --no-vacuum          skip the final VACUUM of the database file\n"
  "  --rename-trunk NAME  use NAME as name of imported trunk branch\n"
  "  --rename-branch PAT  rename all branch names using PAT pattern\n"
  "  --rename-tag PAT     rename all tag names using PAT pattern\n"
  "\n"
  "The --incremental option allows an existing repository to be extended\n"
  "with new content.  The --rename-* options may be useful to avoid name\n"
  "conflicts when using the --incremental option.\n"
  "\n"
  "The argument to --rename-* contains one \"%\" character to be replaced\n"
  "with the original name.  For example, \"--rename-tag svn-%-tag\" renames\n"
  "the tag called \"release\" to \"svn-release-tag\".\n"
  "\n"
  "--ignore-tree is useful for importing Subversion repositories which\n"
  "move branches to subdirectories of \"branches/deleted\" instead of\n"
  "deleting them.  It can be supplied multiple times if necessary.\n"
  "\n"
  "See also: export";
static const char zHelp226[] =
  "Usage: %fossil info ?VERSION | REPOSITORY_FILENAME? ?OPTIONS?\n"
  "\n"
  "With no arguments, provide information about the current tree.\n"
  "If an argument is specified, provide information about the object\n"
  "in the repository of the current tree that the argument refers\n"
  "to.  Or if the argument is the name of a repository, show\n"
  "information about that repository.\n"
  "\n"
  "If the argument is a repository name, then the --verbose option shows\n"
  "known the check-out locations for that repository and all URLs used\n"
  "to access the repository.  The --verbose is (currently) a no-op if\n"
  "the argument is the name of a object within the repository.\n"
  "\n"
  "Use the \"finfo\" command to get information about a specific\n"
  "file in a checkout.\n"
  "\n"
  "Options:\n"
  "\n"
  "   -R|--repository FILE       Extract info from repository FILE\n"
  "   -v|--verbose               Show extra information about repositories\n"
  "\n"
  "See also: annotate, artifact, finfo, timeline";
#ifdef FOSSIL_ENABLE_JSON
static const char zHelp244[] =
  "Usage: %fossil json SUBCOMMAND ?OPTIONS?\n"
  "\n"
  "In CLI mode, the -R REPO common option is supported. Due to limitations\n"
  "in the argument dispatching code, any -FLAGS must come after the final\n"
  "sub- (or subsub-) command.\n"
  "\n"
  "The -json-input FILE option can be used to read JSON data and process\n"
  "it like the HTTP interface would. For example:\n"
  "\n"
  "  %fossil json -json-input my.json\n"
  "\n"
  "The commands include:\n"
  "\n"
  "  anonymousPassword\n"
  "  artifact\n"
  "  branch\n"
  "  cap\n"
  "  config\n"
  "  diff\n"
  "  dir\n"
  "  g\n"
  "  login\n"
  "  logout\n"
  "  query\n"
  "  rebuild\n"
  "  report\n"
  "  resultCodes\n"
  "  stat\n"
  "  tag\n"
  "  timeline\n"
  "  user\n"
  "  version (alias: HAI)\n"
  "  whoami\n"
  "  wiki\n"
  "\n"
  "Run '%fossil json' without any subcommand to see the full list (but be\n"
  "aware that some listed might not yet be fully implemented).";
#endif
static const char zHelp128[] =
  "The value is a comma or newline-separated list of GLOB\n"
  "patterns specifying files that the \"clean\" command will keep.";
static const char zHelp163[] =
  "Usage: %fossil leaves ?OPTIONS?\n"
  "\n"
  "Find leaves of all branches.  By default show only open leaves.\n"
  "The -a|--all flag causes all leaves (closed and open) to be shown.\n"
  "The -c|--closed flag shows only closed leaves.\n"
  "\n"
  "The --recompute flag causes the content of the \"leaf\" table in the\n"
  "repository database to be recomputed.\n"
  "\n"
  "Options:\n"
  "  -a|--all         show ALL leaves\n"
  "  --bybranch       order output by branch name\n"
  "  -c|--closed      show only closed leaves\n"
  "  -m|--multiple    show only cases with multiple leaves on a single branch\n"
  "  --recompute      recompute the \"leaf\" table in the repository DB\n"
  "  -W|--width <num> Width of lines (default is to auto-detect). Must be\n"
  "                   >39 or 0 (= no limit, resulting in a single line per\n"
  "                   entry).\n"
  "\n"
  "See also: descendants, finfo, info, branch";
static const char zHelp129[] =
  "If enabled, require that HTTP connections from the loopback\n"
  "address (127.0.0.1) be authenticated by password.  If false,\n"
  "some HTTP requests might be granted full \"Setup\" user\n"
  "privileges without having to present login credentials.\n"
  "This mechanism allows the \"fossil ui\" command to provide\n"
  "full access to the repository without requiring the user to\n"
  "log in first.\n"
  "\n"
  "In order for full \"Setup\" privilege to be granted without a\n"
  "login, the following conditions must be met:\n"
  "\n"
  "  (1)  This setting (\"localauth\") must be off\n"
  "  (2)  The HTTP request arrive over the loopback TCP/IP\n"
  "       address (127.0.01) or else via SSH.\n"
  "  (3)  The request must be HTTP, not HTTPS. (This\n"
  "       restriction is designed to help prevent accidentally\n"
  "       providing \"Setup\" privileges to requests arriving\n"
  "       over a reverse proxy.)\n"
  "  (4)  The command that launched the fossil server must be\n"
  "       one of the following:\n"
  "       (a) \"fossil ui\"\n"
  "       (b) \"fossil server\" with the --localauth option\n"
  "       (c) \"fossil http\" with the --localauth option\n"
  "       (d) CGI with the \"localauth\" setting in the cgi script.\n"
  "\n"
  "For maximum security, set \"localauth\" to 1.  However, because\n"
  "of the other restrictions (2) through (4), it should be safe\n"
  "to leave \"localauth\" set to 0 in most installations, and \n"
  "especially on cloned repositories on workstations. Leaving\n"
  "\"localauth\" at 0 makes the \"fossil ui\" command more convenient\n"
  "to use.";
static const char zHelp061[] =
  "Usage: %fossil ls ?OPTIONS? ?PATHS ...?\n"
  "\n"
  "List all files in the current checkout.  If PATHS is included, only the\n"
  "named files (or their children if directories) are shown.\n"
  "\n"
  "The ls command is essentially two related commands in one, depending on\n"
  "whether or not the -r option is given.  -r selects a specific check-in\n"
  "version to list, in which case -R can be used to select the repository.\n"
  "The fine behavior of the --age, -v, and -t options is altered by the -r\n"
  "option as well, as explained below.\n"
  "\n"
  "The --age option displays file commit times.  Like -r, --age has the\n"
  "side effect of making -t sort by commit time, not modification time.\n"
  "\n"
  "The -v option provides extra information about each file.  Without -r,\n"
  "-v displays the change status, in the manner of the changes command.\n"
  "With -r, -v shows the commit time and size of the checked-in files.\n"
  "\n"
  "The -t option changes the sort order.  Without -t, files are sorted by\n"
  "path and name (case insensitive sort if -r).  If neither --age nor -r\n"
  "are used, -t sorts by modification time, otherwise by commit time.\n"
  "\n"
  "Options:\n"
  "  --age                 Show when each file was committed.\n"
  "  -v|--verbose          Provide extra information about each file.\n"
  "  -t                    Sort output in time order.\n"
  "  -r VERSION            The specific check-in to list.\n"
  "  -R|--repository FILE  Extract info from repository FILE.\n"
  "\n"
  "See also: changes, extras, status";
static const char zHelp130[] =
  "The value is the primary branch for the project.";
static const char zHelp131[] =
  "If enabled, automatically create files \"manifest\" and \"manifest.uuid\"\n"
  "in every checkout.\n"
  "\n"
  "Optionally use combinations of characters 'r' for \"manifest\",\n"
  "'u' for \"manifest.uuid\" and 't' for \"manifest.tags\".  The SQLite\n"
  "and Fossil repositories both require manifests.";
static const char zHelp132[] =
  "Some CPU-intensive web pages (ex: /zip, /tarball, /blame)\n"
  "are disallowed if the system load average goes above this\n"
  "value.  \"0.0\" means no limit.  This only works on unix.\n"
  "Only local settings of this value make a difference since\n"
  "when running as a web-server, Fossil does not open the\n"
  "global configuration database.";
static const char zHelp133[] =
  "A limit on the size of uplink HTTP requests.";
static const char zHelp265[] =
  "Usage: %fossil md5sum FILES....\n"
  "\n"
  "Compute an MD5 checksum of all files named on the command-line.\n"
  "If a file is named \"-\" then content is read from standard input.";
static const char zHelp266[] =
  "Usage: %fossil merge ?OPTIONS? ?VERSION?\n"
  "\n"
  "The argument VERSION is a version that should be merged into the\n"
  "current checkout.  All changes from VERSION back to the nearest\n"
  "common ancestor are merged.  Except, if either of the --cherrypick or\n"
  "--backout options are used only the changes associated with the\n"
  "single check-in VERSION are merged.  The --backout option causes\n"
  "the changes associated with VERSION to be removed from the current\n"
  "checkout rather than added.\n"
  "\n"
  "If the VERSION argument is omitted, then Fossil attempts to find\n"
  "a recent fork on the current branch to merge.\n"
  "\n"
  "Only file content is merged.  The result continues to use the\n"
  "file and directory names from the current checkout even if those\n"
  "names might have been changed in the branch being merged in.\n"
  "\n"
  "Other options:\n"
  "\n"
  "  --baseline BASELINE     Use BASELINE as the \"pivot\" of the merge instead\n"
  "                          of the nearest common ancestor.  This allows\n"
  "                          a sequence of changes in a branch to be merged\n"
  "                          without having to merge the entire branch.\n"
  "\n"
  "  --binary GLOBPATTERN    Treat files that match GLOBPATTERN as binary\n"
  "                          and do not try to merge parallel changes.  This\n"
  "                          option overrides the \"binary-glob\" setting.\n"
  "\n"
  "  --case-sensitive BOOL   Override the case-sensitive setting.  If false,\n"
  "                          files whose names differ only in case are taken\n"
  "                          to be the same file.\n"
  "\n"
  "  -f|--force              Force the merge even if it would be a no-op.\n"
  "\n"
  "  --force-missing         Force the merge even if there is missing content.\n"
  "\n"
  "  --integrate             Merged branch will be closed when committing.\n"
  "\n"
  "  -n|--dry-run            If given, display instead of run actions\n"
  "\n"
  "  -v|--verbose            Show additional details of the merge";
static const char zHelp134[] =
  "Use file modification times (mtimes) to detect when\n"
  "files have been modified.  If disabled, all managed files\n"
  "are hashed to detect changes, which can be slow for large\n"
  "projects.";
static const char zHelp006[] =
  "Usage: %fossil mv|rename OLDNAME NEWNAME\n"
  "   or: %fossil mv|rename OLDNAME... DIR\n"
  "\n"
  "Move or rename one or more files or directories within the repository tree.\n"
  "You can either rename a file or directory or move it to another subdirectory.\n"
  "\n"
  "The 'mv' command does NOT normally rename or move the files on disk.\n"
  "This command merely records the fact that file names have changed so\n"
  "that appropriate notations can be made at the next commit/check-in.\n"
  "However, the default behavior of this command may be overridden via\n"
  "command line options listed below and/or the 'mv-rm-files' setting.\n"
  "\n"
  "The 'rename' command never renames or moves files on disk, even when the\n"
  "command line options and/or the 'mv-rm-files' setting would otherwise\n"
  "require it to do so.\n"
  "\n"
  "WARNING: If the \"--hard\" option is specified -OR- the \"mv-rm-files\"\n"
  "         setting is non-zero, files WILL BE renamed or moved on disk\n"
  "         as well.  This does NOT apply to the 'rename' command.\n"
  "\n"
  "Options:\n"
  "  --soft                  Skip moving files within the checkout.\n"
  "                          This supersedes the --hard option.\n"
  "  --hard                  Move files within the checkout.\n"
  "  --case-sensitive <BOOL> Override the case-sensitive setting.\n"
  "  -n|--dry-run            If given, display instead of run actions.\n"
  "\n"
  "See also: changes, status";
#if FOSSIL_ENABLE_LEGACY_MV_RM
static const char zHelp135[] =
  "If enabled, the \"mv\" and \"rename\" commands will also move\n"
  "the associated files within the checkout -AND- the \"rm\"\n"
  "and \"delete\" commands will also remove the associated\n"
  "files from within the checkout.";
#endif
static const char zHelp089[] =
  "Usage: %fossil new ?OPTIONS? FILENAME\n"
  "   or: %fossil init ?OPTIONS? FILENAME\n"
  "\n"
  "Create a repository for a new project in the file named FILENAME.\n"
  "This command is distinct from \"clone\".  The \"clone\" command makes\n"
  "a copy of an existing project.  This command starts a new project.\n"
  "\n"
  "By default, your current login name is used to create the default\n"
  "admin user. This can be overridden using the -A|--admin-user\n"
  "parameter.\n"
  "\n"
  "By default, all settings will be initialized to their default values.\n"
  "This can be overridden using the --template parameter to specify a\n"
  "repository file from which to copy the initial settings.  When a template\n"
  "repository is used, almost all of the settings accessible from the setup\n"
  "page, either directly or indirectly, will be copied.  Normal users and\n"
  "their associated permissions will not be copied; however, the system\n"
  "default users \"anonymous\", \"nobody\", \"reader\", \"developer\", and their\n"
  "associated permissions will be copied.\n"
  "\n"
  "Options:\n"
  "   --template      FILE         Copy settings from repository file\n"
  "   --admin-user|-A USERNAME     Select given USERNAME as admin user\n"
  "   --date-override DATETIME     Use DATETIME as time of the initial check-in\n"
  "   --sha1                       Use a initial hash policy of \"sha1\"\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.\n"
  "\n"
  "See also: clone";
static const char zHelp091[] =
  "Usage: %fossil open FILENAME ?VERSION? ?OPTIONS?\n"
  "\n"
  "Open a connection to the local repository in FILENAME.  A checkout\n"
  "for the repository is created with its root at the working directory.\n"
  "If VERSION is specified then that version is checked out.  Otherwise\n"
  "the latest version is checked out.  No files other than \"manifest\"\n"
  "and \"manifest.uuid\" are modified if the --keep option is present.\n"
  "\n"
  "Options:\n"
  "  --empty           Initialize checkout as being empty, but still connected\n"
  "                    with the local repository. If you commit this checkout,\n"
  "                    it will become a new \"initial\" commit in the repository.\n"
  "  --keep            Only modify the manifest and manifest.uuid files\n"
  "  --nested          Allow opening a repository inside an opened checkout\n"
  "  --force-missing   Force opening a repository with missing content\n"
  "\n"
  "See also: close";
static const char zHelp136[] =
  "Command used to clear-sign manifests at check-in.\n"
  "Default value is \"gpg --clearsign -o\"";
static const char zHelp354[] =
  "Usage: %fossil pop3d [OPTIONS] REPOSITORY\n"
  "\n"
  "Begin a POP3 conversation with a client using stdin/stdout using\n"
  "the mailboxes stored in REPOSITORY.\n"
  "\n"
  "If launched as root, the process first enters a chroot jail using\n"
  "the directory of REPOSITORY as root, then drops all privileges and\n"
  "assumes the user and group of REPOSITORY before reading any content\n"
  "off of the wire.\n"
  "\n"
  "  --logdir  DIR        Each pop3d session creates a new logfile\n"
  "                       in the directory DIR and records a transcript\n"
  "                       of the session there.  The logfile is opened\n"
  "                       before entering the chroot jail.";
static const char zHelp137[] =
  "URL of the HTTP proxy.  If undefined or \"off\" then\n"
  "the \"http_proxy\" environment variable is consulted.\n"
  "If the http_proxy environment variable is undefined\n"
  "then a direct HTTP connection is used.";
static const char zHelp288[] =
  "Usage: %fossil publish ?--only? TAGS...\n"
  "\n"
  "Cause artifacts identified by TAGS... to be published (made non-private).\n"
  "This can be used (for example) to convert a private branch into a public\n"
  "branch, or to publish a bundle that was imported privately.\n"
  "\n"
  "If any of TAGS names a branch, then all check-ins on the most recent\n"
  "instance of that branch are included, not just the most recent check-in.\n"
  "\n"
  "If any of TAGS name check-ins then all files and tags associated with\n"
  "those check-ins are also published automatically.  Except if the --only\n"
  "option is used, then only the specific artifacts identified by TAGS\n"
  "are published.\n"
  "\n"
  "If a TAG is already public, this command is a harmless no-op.";
static const char zHelp372[] =
  "Usage: %fossil pull ?URL? ?options?\n"
  "\n"
  "Pull all sharable changes from a remote repository into the local repository.\n"
  "Sharable changes include public check-ins, and wiki, ticket, and tech-note\n"
  "edits.  Add the --private option to pull private branches.  Use the\n"
  "\"configuration pull\" command to pull website configuration details.\n"
  "\n"
  "If URL is not specified, then the URL from the most recent clone, push,\n"
  "pull, remote-url, or sync command is used.  See \"fossil help clone\" for\n"
  "details on the URL formats.\n"
  "\n"
  "Options:\n"
  "\n"
  "  -B|--httpauth USER:PASS    Credentials for the simple HTTP auth protocol,\n"
  "                             if required by the remote website\n"
  "  --from-parent-project      Pull content from the parent project\n"
  "  --ipv4                     Use only IPv4, not IPv6\n"
  "  --once                     Do not remember URL for subsequent syncs\n"
  "  --proxy PROXY              Use the specified HTTP proxy\n"
  "  --private                  Pull private branches too\n"
  "  -R|--repository REPO       Local repository to pull into\n"
  "  --ssl-identity FILE        Local SSL credentials, if requested by remote\n"
  "  --ssh-command SSH          Use SSH as the \"ssh\" command\n"
  "  -v|--verbose               Additional (debugging) output\n"
  "  --verily                   Exchange extra information with the remote\n"
  "                             to ensure no content is overlooked\n"
  "\n"
  "See also: clone, config pull, push, remote-url, sync";
static const char zHelp289[] =
  "The purge command removes content from a repository and stores that content\n"
  "in a \"graveyard\".  The graveyard exists so that content can be recovered\n"
  "using the \"fossil purge undo\" command.  The \"fossil purge obliterate\"\n"
  "command empties the graveyard, making the content unrecoverable.\n"
  "\n"
  "==== WARNING: This command can potentially destroy historical data and ====\n"
  "==== leave your repository in a goofy state. Know what you are doing!  ====\n"
  "==== Make a backup of your repository before using this command!       ====\n"
  "\n"
  "==== FURTHER WARNING: This command is a work-in-progress and may yet   ====\n"
  "==== contain bugs.                                                     ====\n"
  "\n"
  "  fossil purge artifacts UUID... ?OPTIONS?\n"
  "\n"
  "     Move arbitrary artifacts identified by the UUID list into the\n"
  "     graveyard.\n"
  "\n"
  "  fossil purge cat UUID...\n"
  "\n"
  "     Write the content of one or more artifacts in the graveyard onto\n"
  "     standard output.\n"
  "\n"
  "  fossil purge checkins TAGS... ?OPTIONS?\n"
  "\n"
  "     Move the check-ins or branches identified by TAGS and all of\n"
  "     their descendants out of the repository and into the graveyard.\n"
  "     If TAGS includes a branch name then it means all the check-ins\n"
  "     on the most recent occurrence of that branch.\n"
  "\n"
  "  fossil purge files NAME ... ?OPTIONS?\n"
  "\n"
  "     Move all instances of files called NAME into the graveyard.\n"
  "     NAME should be the name of the file relative to the root of the\n"
  "     repository.  If NAME is a directory, then all files within that\n"
  "     directory are moved.\n"
  "\n"
  "  fossil purge list|ls ?-l?\n"
  "\n"
  "     Show the graveyard of prior purges.  The -l option gives more\n"
  "     detail in the output.\n"
  "\n"
  "  fossil purge obliterate ID... ?--force?\n"
  "\n"
  "     Remove one or more purge events from the graveyard.  Once a purge\n"
  "     event is obliterated, it can no longer be undone.  The --force\n"
  "     option suppresses the confirmation prompt.\n"
  "\n"
  "  fossil purge tickets NAME ... ?OPTIONS?\n"
  "\n"
  "     TBD...\n"
  "\n"
  "  fossil purge undo ID\n"
  "\n"
  "     Restore the content previously removed by purge ID.\n"
  "\n"
  "  fossil purge wiki NAME ... ?OPTIONS?\n"
  "\n"
  "     TBD...\n"
  "\n"
  "COMMON OPTIONS:\n"
  "\n"
  "  --explain         Make no changes, but show what would happen.\n"
  "  --dry-run         An alias for --explain\n"
  "\n"
  "SUMMARY:\n"
  "  fossil purge artifacts UUID.. [OPTIONS]\n"
  "  fossil purge cat UUID...\n"
  "  fossil purge checkins TAGS... [OPTIONS]\n"
  "  fossil purge files FILENAME... [OPTIONS]\n"
  "  fossil purge list\n"
  "  fossil purge obliterate ID...\n"
  "  fossil purge tickets NAME... [OPTIONS]\n"
  "  fossil purge undo ID\n"
  "  fossil purge wiki NAME... [OPTIONS]";
static const char zHelp373[] =
  "Usage: %fossil push ?URL? ?options?\n"
  "\n"
  "Push all sharable changes from the local repository to a remote repository.\n"
  "Sharable changes include public check-ins, and wiki, ticket, and tech-note\n"
  "edits.  Use --private to also push private branches.  Use the\n"
  "\"configuration push\" command to push website configuration details.\n"
  "\n"
  "If URL is not specified, then the URL from the most recent clone, push,\n"
  "pull, remote-url, or sync command is used.  See \"fossil help clone\" for\n"
  "details on the URL formats.\n"
  "\n"
  "Options:\n"
  "\n"
  "  -B|--httpauth USER:PASS    Credentials for the simple HTTP auth protocol,\n"
  "                             if required by the remote website\n"
  "  --ipv4                     Use only IPv4, not IPv6\n"
  "  --once                     Do not remember URL for subsequent syncs\n"
  "  --proxy PROXY              Use the specified HTTP proxy\n"
  "  --private                  Push private branches too\n"
  "  -R|--repository REPO       Local repository to push from\n"
  "  --ssl-identity FILE        Local SSL credentials, if requested by remote\n"
  "  --ssh-command SSH          Use SSH as the \"ssh\" command\n"
  "  -v|--verbose               Additional (debugging) output\n"
  "  --verily                   Exchange extra information with the remote\n"
  "                             to ensure no content is overlooked\n"
  "\n"
  "See also: clone, config push, pull, remote-url, sync";
static const char zHelp290[] =
  "Usage: %fossil rebuild ?REPOSITORY? ?OPTIONS?\n"
  "\n"
  "Reconstruct the named repository database from the core\n"
  "records.  Run this command after updating the fossil\n"
  "executable in a way that changes the database schema.\n"
  "\n"
  "Options:\n"
  "  --analyze         Run ANALYZE on the database after rebuilding\n"
  "  --cluster         Compute clusters for unclustered artifacts\n"
  "  --compress        Strive to make the database as small as possible\n"
  "  --compress-only   Skip the rebuilding step. Do --compress only\n"
  "  --deanalyze       Remove ANALYZE tables from the database\n"
  "  --force           Force the rebuild to complete even if errors are seen\n"
  "  --ifneeded        Only do the rebuild if it would change the schema version\n"
  "  --index           Always add in the full-text search index\n"
  "  --noverify        Skip the verification of changes to the BLOB table\n"
  "  --noindex         Always omit the full-text search index\n"
  "  --pagesize N      Set the database pagesize to N. (512..65536 and power of 2)\n"
  "  --quiet           Only show output if there are errors\n"
  "  --randomize       Scan artifacts in a random order\n"
  "  --stats           Show artifact statistics after rebuilding\n"
  "  --vacuum          Run VACUUM on the database after rebuilding\n"
  "  --wal             Set Write-Ahead-Log journalling mode on the database\n"
  "\n"
  "See also: deconstruct, reconstruct";
static const char zHelp296[] =
  "Usage: %fossil reconstruct ?OPTIONS? FILENAME DIRECTORY\n"
  "\n"
  "This command studies the artifacts (files) in DIRECTORY and\n"
  "reconstructs the fossil record from them. It places the new\n"
  "fossil repository in FILENAME. Subdirectories are read, files\n"
  "with leading '.' in the filename are ignored.\n"
  "\n"
  "Options:\n"
  "   -K|--keep-rid1    Read the filename of the artifact with\n"
  "                     RID=1 from the file .rid in DIRECTORY.\n"
  "\n"
  "See also: deconstruct, rebuild";
static const char zHelp138[] =
  "When showing changes and extras, report paths relative\n"
  "to the current working directory.";
static const char zHelp375[] =
  "Usage: %fossil remote-url ?URL|off?\n"
  "\n"
  "Query and/or change the default server URL used by the \"pull\", \"push\",\n"
  "and \"sync\" commands.\n"
  "\n"
  "The remote-url is set automatically by a \"clone\" command or by any\n"
  "\"sync\", \"push\", or \"pull\" command that specifies an explicit URL.\n"
  "The default remote-url is used by auto-syncing and by \"sync\", \"push\",\n"
  "\"pull\" that omit the server URL.\n"
  "\n"
  "See \"fossil help clone\" for further information about URL formats\n"
  "\n"
  "See also: clone, push, pull, sync";
static const char zHelp378[] =
  "Usage: %fossil reparent [OPTIONS] CHECK-IN PARENT ...\n"
  "\n"
  "Create a \"parent\" tag that causes CHECK-IN to be interpreted as a\n"
  "child of PARENT.  If multiple PARENTs are listed, then the first is\n"
  "the primary parent and others are merge ancestors.\n"
  "\n"
  "This is an experts-only command.  It is used to patch up a repository\n"
  "that has been damaged by a shun or that has been pieced together from\n"
  "two or more separate repositories.  You should never need to reparent\n"
  "during normal operations.\n"
  "\n"
  "Reparenting is accomplished by adding a parent tag.  So to undo the\n"
  "reparenting operation, simply delete the tag.\n"
  "\n"
  "   --test           Make database entries but do not add the tag artifact.\n"
  "                    So the reparent operation will be undone by the next\n"
  "                    \"fossil rebuild\" command.\n"
  "   --dryrun | -n    Print the tag that would have been created but do not\n"
  "                    actually change the database in any way.\n"
  "   --date-override DATETIME  Set the change time on the control artifact\n"
  "   --user-override USER      Set the user name on the control artifact";
static const char zHelp139[] =
  "Compute checksums over all files in each checkout as a double-check\n"
  "of correctness.  Disable this on large repositories for a performance\n"
  "improvement.";
static const char zHelp423[] =
  "Usage: %fossil revert ?-r REVISION? ?FILE ...?\n"
  "\n"
  "Revert to the current repository version of FILE, or to\n"
  "the version associated with baseline REVISION if the -r flag\n"
  "appears.\n"
  "\n"
  "If FILE was part of a rename operation, both the original file\n"
  "and the renamed file are reverted.\n"
  "\n"
  "Revert all files if no file name is provided.\n"
  "\n"
  "If a file is reverted accidentally, it can be restored using\n"
  "the \"fossil undo\" command.\n"
  "\n"
  "Options:\n"
  "  -r REVISION    revert given FILE(s) back to given REVISION\n"
  "\n"
  "See also: redo, undo, update";
static const char zHelp002[] =
  "Usage: %fossil rm|delete|forget FILE1 ?FILE2 ...?\n"
  "\n"
  "Remove one or more files or directories from the repository.\n"
  "\n"
  "The 'rm' and 'delete' commands do NOT normally remove the files from\n"
  "disk.  They just mark the files as no longer being part of the project.\n"
  "In other words, future changes to the named files will not be versioned.\n"
  "However, the default behavior of this command may be overridden via the\n"
  "command line options listed below and/or the 'mv-rm-files' setting.\n"
  "\n"
  "The 'forget' command never removes files from disk, even when the command\n"
  "line options and/or the 'mv-rm-files' setting would otherwise require it\n"
  "to do so.\n"
  "\n"
  "WARNING: If the \"--hard\" option is specified -OR- the \"mv-rm-files\"\n"
  "         setting is non-zero, files WILL BE removed from disk as well.\n"
  "         This does NOT apply to the 'forget' command.\n"
  "\n"
  "Options:\n"
  "  --soft                  Skip removing files from the checkout.\n"
  "                          This supersedes the --hard option.\n"
  "  --hard                  Remove files from the checkout.\n"
  "  --case-sensitive <BOOL> Override the case-sensitive setting.\n"
  "  -n|--dry-run            If given, display instead of run actions.\n"
  "\n"
  "See also: addremove, add";
static const char zHelp307[] =
  "Usage: %fossil rss ?OPTIONS?\n"
  "\n"
  "The CLI variant of the /timeline.rss page, this produces an RSS\n"
  "feed of the timeline to stdout. Options:\n"
  "\n"
  "-type|y FLAG\n"
  "   may be: all (default), ci (show check-ins only), t (show tickets only),\n"
  "   w (show wiki only).\n"
  "\n"
  "-limit|n LIMIT\n"
  "  The maximum number of items to show.\n"
  "\n"
  "-tkt UUID\n"
  "   Filters for only those events for the specified ticket.\n"
  "\n"
  "-tag TAG\n"
  "   filters for a tag\n"
  "\n"
  "-wiki NAME\n"
  "  Filters on a specific wiki page.\n"
  "\n"
  "Only one of -tkt, -tag, or -wiki may be used.\n"
  "\n"
  "-name FILENAME\n"
  "  filters for a specific file. This may be combined with one of the other\n"
  "  filters (useful for looking at a specific branch).\n"
  "\n"
  "-url STRING\n"
  "  Sets the RSS feed's root URL to the given string. The default is\n"
  "\"URL-PLACEHOLDER\" (without quotes).";
static const char zHelp294[] =
  "Usage: %fossil scrub ?OPTIONS? ?REPOSITORY?\n"
  "\n"
  "The command removes sensitive information (such as passwords) from a\n"
  "repository so that the repository can be sent to an untrusted reader.\n"
  "\n"
  "By default, only passwords are removed.  However, if the --verily option\n"
  "is added, then private branches, concealed email addresses, IP\n"
  "addresses of correspondents, and similar privacy-sensitive fields\n"
  "are also purged.  If the --private option is used, then only private\n"
  "branches are removed and all other information is left intact.\n"
  "\n"
  "This command permanently deletes the scrubbed information. THE EFFECTS\n"
  "OF THIS COMMAND ARE IRREVERSIBLE. USE WITH CAUTION!\n"
  "\n"
  "The user is prompted to confirm the scrub unless the --force option\n"
  "is used.\n"
  "\n"
  "Options:\n"
  "  --force     do not prompt for confirmation\n"
  "  --private   only private branches are removed from the repository\n"
  "  --verily    scrub real thoroughly (see above)";
static const char zHelp309[] =
  "Usage: %fossil search [-all|-a] [-limit|-n #] [-width|-W #] pattern...\n"
  "\n"
  "Search for timeline entries matching all words provided on the\n"
  "command line. Whole-word matches scope more highly than partial\n"
  "matches.\n"
  "\n"
  "Outputs, by default, some top-N fraction of the results. The -all\n"
  "option can be used to output all matches, regardless of their search\n"
  "score.  The -limit option can be used to limit the number of entries\n"
  "returned.  The -width option can be used to set the output width used\n"
  "when printing matches.\n"
  "\n"
  "Options:\n"
  "\n"
  "    -a|--all          Output all matches, not just best matches.\n"
  "    -n|--limit N      Limit output to N matches.\n"
  "    -W|--width WIDTH  Set display width to WIDTH columns, 0 for\n"
  "                      unlimited. Defaults the terminal's width.";
static const char zHelp140[] =
  "Allow users to register themselves through the HTTP UI.\n"
  "This is useful if you want to see other names than\n"
  "\"Anonymous\" in e.g. ticketing system. On the other hand\n"
  "users can not be deleted.";
static const char zHelp258[] =
  "Usage: %fossil server ?OPTIONS? ?REPOSITORY?\n"
  "   or: %fossil ui ?OPTIONS? ?REPOSITORY?\n"
  "\n"
  "Open a socket and begin listening and responding to HTTP requests on\n"
  "TCP port 8080, or on any other TCP port defined by the -P or\n"
  "--port option.  The optional argument is the name of the repository.\n"
  "The repository argument may be omitted if the working directory is\n"
  "within an open checkout.\n"
  "\n"
  "The \"ui\" command automatically starts a web browser after initializing\n"
  "the web server.  The \"ui\" command also binds to 127.0.0.1 and so will\n"
  "only process HTTP traffic from the local machine.\n"
  "\n"
  "The REPOSITORY can be a directory (aka folder) that contains one or\n"
  "more repositories with names ending in \".fossil\".  In this case, a\n"
  "prefix of the URL pathname is used to search the directory for an\n"
  "appropriate repository.  To thwart mischief, the pathname in the URL must\n"
  "contain only alphanumerics, \"_\", \"/\", \"-\", and \".\", and no \"-\" may\n"
  "occur after \"/\", and every \".\" must be surrounded on both sides by\n"
  "alphanumerics.  Any pathname that does not satisfy these constraints\n"
  "results in a 404 error.  Files in REPOSITORY that match the comma-separated\n"
  "list of glob patterns given by --files and that have known suffixes\n"
  "such as \".txt\" or \".html\" or \".jpeg\" and do not match the pattern\n"
  "\"*.fossil*\" will be served as static content.  With the \"ui\" command,\n"
  "the REPOSITORY can only be a directory if the --notfound option is\n"
  "also present.\n"
  "\n"
  "For the special case REPOSITORY name of \"/\", the list global configuration\n"
  "database is consulted for a list of all known repositories.  The --repolist\n"
  "option is implied by this special case.  See also the \"fossil all ui\"\n"
  "command.\n"
  "\n"
  "By default, the \"ui\" command provides full administrative access without\n"
  "having to log in.  This can be disabled by turning off the \"localauth\"\n"
  "setting.  Automatic login for the \"server\" command is available if the\n"
  "--localauth option is present and the \"localauth\" setting is off and the\n"
  "connection is from localhost.  The \"ui\" command also enables --repolist\n"
  "by default.\n"
  "\n"
  "Options:\n"
  "  --baseurl URL       Use URL as the base (useful for reverse proxies)\n"
  "  --create            Create a new REPOSITORY if it does not already exist\n"
  "  --page PAGE         Start \"ui\" on PAGE.  ex: --page \"timeline?y=ci\"\n"
  "  --files GLOBLIST    Comma-separated list of glob patterns for static files\n"
  "  --localauth         enable automatic login for requests from localhost\n"
  "  --localhost         listen on 127.0.0.1 only (always true for \"ui\")\n"
  "  --https             signal a request coming in via https\n"
  "  --max-latency N     Do not let any single HTTP request run for more than N\n"
  "                      seconds (only works on unix)\n"
  "  --nocompress        Do not compress HTTP replies\n"
  "  --nojail            Drop root privileges but do not enter the chroot jail\n"
  "  --nossl             signal that no SSL connections are available (Always\n"
  "                      set by default for the \"ui\" command)\n"
  "  --notfound URL      Redirect\n"
  "  -P|--port TCPPORT   listen to request on port TCPPORT\n"
  "  --th-trace          trace TH1 execution (for debugging purposes)\n"
  "  --repolist          If REPOSITORY is dir, URL \"/\" lists repos.\n"
  "  --scgi              Accept SCGI rather than HTTP\n"
  "  --skin LABEL        Use override skin LABEL\n"
  "  --usepidkey         Use saved encryption key from parent process.  This is\n"
  "                      only necessary when using SEE on Windows.\n"
  "\n"
  "See also: cgi, http, winsrv";
static const char zHelp152[] =
  "Usage: %fossil settings ?SETTING? ?VALUE? ?OPTIONS?\n"
  "   or: %fossil unset SETTING ?OPTIONS?\n"
  "\n"
  "The \"settings\" command with no arguments lists all settings and their\n"
  "values.  With just a SETTING name it shows the current value of that setting.\n"
  "With a VALUE argument it changes the property for the current repository.\n"
  "\n"
  "Settings marked as versionable are overridden by the contents of the\n"
  "file named .fossil-settings/PROPERTY in the check-out root, if that\n"
  "file exists.\n"
  "\n"
  "The \"unset\" command clears a setting.\n"
  "\n"
  "Settings can have both a \"local\" repository-only value and \"global\" value\n"
  "that applies to all repositories.  The local values are stored in the\n"
  "\"config\" table of the repository and the global values are stored in the\n"
  "$HOME/.fossil file on unix or in the %LOCALAPPDATA%/_fossil file on Windows.\n"
  "If both a local and a global value exists for a setting, the local value\n"
  "takes precedence.  This command normally operates on the local settings.\n"
  "Use the --global option to change global settings.\n"
  "\n"
  "Options:\n"
  "  --global   set or unset the given property globally instead of\n"
  "             setting or unsetting it for the open repository only.\n"
  "\n"
  "  --exact    only consider exact name matches.\n"
  "\n"
  "See also: configuration";
static const char zHelp337[] =
  "Usage: %fossil sha1sum FILE...\n"
  "\n"
  "Compute an SHA1 checksum of all files named on the command-line.\n"
  "If a file is named \"-\" then take its content from standard input.\n"
  "Options:\n"
  "\n"
  "   -h, --dereference     If FILE is a symbolic link, compute the hash\n"
  "                         on the object that the link points to.  Normally,\n"
  "                         the hash is over the name of the object that\n"
  "                         the link points to.";
static const char zHelp338[] =
  "Usage: %fossil sha3sum FILE...\n"
  "\n"
  "Compute an SHA3 checksum of all files named on the command-line.\n"
  "If a file is named \"-\" then take its content from standard input.\n"
  "\n"
  "To be clear:  The official NIST FIPS-202 implementation of SHA3\n"
  "with the added 01 padding is used, not the original Keccak submission.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --224               Compute a SHA3-224 hash\n"
  "   --256               Compute a SHA3-256 hash (the default)\n"
  "   --384               Compute a SHA3-384 hash\n"
  "   --512               Compute a SHA3-512 hash\n"
  "   --size N            An N-bit hash.  N must be a multiple of 32 between\n"
  "                       128 and 512.\n"
  "   -h, --dereference   If FILE is a symbolic link, compute the hash on\n"
  "                       the object pointed to, not on the link itself.";
static const char zHelp220[] =
  "Usage: %fossil shell\n"
  "\n"
  "Prompt for lines of input from stdin.  Parse each line and evaluate\n"
  "it as a separate fossil command, in a child process.  The initial\n"
  "\"fossil\" is omitted from each line.\n"
  "\n"
  "This command only works on unix-like platforms that support fork().\n"
  "It is non-functional on Windows.";
static const char zHelp353[] =
  "Usage: %fossil smtpd [OPTIONS] REPOSITORY\n"
  "\n"
  "Begin a SMTP conversation with a client using stdin/stdout.  The\n"
  "received email is stored in REPOSITORY.\n"
  "\n"
  "Options:\n"
  "\n"
  "     --dryrun          Do not record any emails in the database\n"
  "\n"
  "     --trace           Print a transcript of the conversation on stderr\n"
  "                       for debugging and analysis\n"
  "\n"
  "     --ipaddr ADDR     The SMTP connection originates at ADDR.  Or if ADDR\n"
  "                       is the name of an environment variable, the address\n"
  "                       is taken from that environment variable.";
static const char zHelp355[] =
  "Usage: %fossil sql ?OPTIONS?\n"
  "\n"
  "Run the standalone sqlite3 command-line shell on DATABASE with SHELL_OPTS.\n"
  "If DATABASE is omitted, then the repository that serves the working\n"
  "directory is opened.  See https://www.sqlite.org/cli.html for additional\n"
  "information.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --no-repository           Skip opening the repository database.\n"
  "\n"
  "   -R REPOSITORY             Use REPOSITORY as the repository database\n"
  "\n"
  "WARNING:  Careless use of this command can corrupt a Fossil repository\n"
  "in ways that are unrecoverable.  Be sure you know what you are doing before\n"
  "running any SQL commands that modify the repository database.\n"
  "\n"
  "The following extensions to the usual SQLite commands are provided:\n"
  "\n"
  "   content(X)                Return the content of artifact X.  X can be an\n"
  "                             artifact hash or prefix or a tag.\n"
  "\n"
  "   compress(X)               Compress text X.\n"
  "\n"
  "   decompress(X)             Decompress text X.  Undoes the work of\n"
  "                             compress(X).\n"
  "\n"
  "   checkin_mtime(X,Y)        Return the mtime for the file Y (a BLOB.RID)\n"
  "                             found in check-in X (another BLOB.RID value).\n"
  "\n"
  "   symbolic_name_to_rid(X)   Return the BLOB.RID corresponding to symbolic\n"
  "                             name X.\n"
  "\n"
  "   now()                     Return the number of seconds since 1970.\n"
  "\n"
  "   REGEXP                    The REGEXP operator works, unlike in\n"
  "                             standard SQLite.\n"
  "\n"
  "   files_of_checkin(X)       A table-valued function that returns info on\n"
  "                             all files contained in check-in X.  Example:\n"
  "                               SELECT * FROM files_of_checkin('trunk');";
static const char zHelp467[] =
  "Usage: %fossil sqlar VERSION OUTPUTFILE [OPTIONS]\n"
  "\n"
  "Generate an SQLAR archive for a check-in.  If the --name option is\n"
  "used, its argument becomes the name of the top-level directory in the\n"
  "resulting SQLAR archive.  If --name is omitted, the top-level directory\n"
  "name is derived from the project name, the check-in date and time, and\n"
  "the artifact ID of the check-in.\n"
  "\n"
  "The GLOBLIST argument to --exclude and --include can be a comma-separated\n"
  "list of glob patterns, where each glob pattern may optionally be enclosed\n"
  "in \"...\" or '...' so that it may contain commas.  If a file matches both\n"
  "--include and --exclude then it is excluded.\n"
  "\n"
  "Options:\n"
  "  -X|--exclude GLOBLIST   Comma-separated list of GLOBs of files to exclude\n"
  "  --include GLOBLIST      Comma-separated list of GLOBs of files to include\n"
  "  --name DIRECTORYNAME    The name of the top-level directory in the archive\n"
  "  -R REPOSITORY           Specify a Fossil repository";
static const char zHelp141[] =
  "The command used to talk to a remote machine with  the \"ssh://\" protocol.";
static const char zHelp142[] =
  "The full pathname to a file containing PEM encoded\n"
  "CA root certificates, or a directory of certificates\n"
  "with filenames formed from the certificate hashes as\n"
  "required by OpenSSL.\n"
  "\n"
  "If set, this will override the OS default list of\n"
  "OpenSSL CAs. If unset, the default list will be used.\n"
  "Some platforms may add additional certificates.\n"
  "Checking your platform behaviour is required if the\n"
  "exact contents of the CA root is critical for your\n"
  "application.";
static const char zHelp143[] =
  "The full pathname to a file containing a certificate\n"
  "and private key in PEM format. Create by concatenating\n"
  "the certificate and private key files.\n"
  "\n"
  "This identity will be presented to SSL servers to\n"
  "authenticate this client, in addition to the normal\n"
  "password authentication.";
static const char zHelp357[] =
  "Usage: %fossil stash SUBCOMMAND ARGS...\n"
  "\n"
  " fossil stash\n"
  " fossil stash save ?-m|--comment COMMENT? ?FILES...?\n"
  " fossil stash snapshot ?-m|--comment COMMENT? ?FILES...?\n"
  "\n"
  "    Save the current changes in the working tree as a new stash.\n"
  "    Then revert the changes back to the last check-in.  If FILES\n"
  "    are listed, then only stash and revert the named files.  The\n"
  "    \"save\" verb can be omitted if and only if there are no other\n"
  "    arguments.  The \"snapshot\" verb works the same as \"save\" but\n"
  "    omits the revert, keeping the checkout unchanged.\n"
  "\n"
  " fossil stash list|ls ?-v|--verbose? ?-W|--width <num>?\n"
  "\n"
  "    List all changes sets currently stashed.  Show information about\n"
  "    individual files in each changeset if -v or --verbose is used.\n"
  "\n"
  " fossil stash show|cat ?STASHID? ?DIFF-OPTIONS?\n"
  " fossil stash gshow|gcat ?STASHID? ?DIFF-OPTIONS?\n"
  "\n"
  "    Show the contents of a stash as a diff against its baseline.\n"
  "    With gshow and gcat, gdiff-command is used instead of internal\n"
  "    diff logic.\n"
  "\n"
  " fossil stash pop\n"
  " fossil stash apply ?STASHID?\n"
  "\n"
  "    Apply STASHID or the most recently create stash to the current\n"
  "    working checkout.  The \"pop\" command deletes that changeset from\n"
  "    the stash after applying it but the \"apply\" command retains the\n"
  "    changeset.\n"
  "\n"
  " fossil stash goto ?STASHID?\n"
  "\n"
  "    Update to the baseline checkout for STASHID then apply the\n"
  "    changes of STASHID.  Keep STASHID so that it can be reused\n"
  "    This command is undoable.\n"
  "\n"
  " fossil stash drop|rm ?STASHID? ?-a|--all?\n"
  "\n"
  "    Forget everything about STASHID.  Forget the whole stash if the\n"
  "    -a|--all flag is used.  Individual drops are undoable but -a|--all\n"
  "    is not.\n"
  "\n"
  " fossil stash diff ?STASHID? ?DIFF-OPTIONS?\n"
  " fossil stash gdiff ?STASHID? ?DIFF-OPTIONS?\n"
  "\n"
  "    Show diffs of the current working directory and what that\n"
  "    directory would be if STASHID were applied. With gdiff,\n"
  "    gdiff-command is used instead of internal diff logic.\n"
  "\n"
  "SUMMARY:\n"
  " fossil stash\n"
  " fossil stash save ?-m|--comment COMMENT? ?FILES...?\n"
  " fossil stash snapshot ?-m|--comment COMMENT? ?FILES...?\n"
  " fossil stash list|ls ?-v|--verbose? ?-W|--width <num>?\n"
  " fossil stash show|cat ?STASHID? ?DIFF-OPTIONS?\n"
  " fossil stash gshow|gcat ?STASHID? ?DIFF-OPTIONS?\n"
  " fossil stash pop\n"
  " fossil stash apply|goto ?STASHID?\n"
  " fossil stash drop|rm ?STASHID? ?-a|--all?\n"
  " fossil stash diff ?STASHID? ?DIFF-OPTIONS?\n"
  " fossil stash gdiff ?STASHID? ?DIFF-OPTIONS?";
static const char zHelp374[] =
  "Usage: %fossil sync ?URL? ?options?\n"
  "\n"
  "Synchronize all sharable changes between the local repository and a\n"
  "remote repository.  Sharable changes include public check-ins and\n"
  "edits to wiki pages, tickets, and technical notes.\n"
  "\n"
  "If URL is not specified, then the URL from the most recent clone, push,\n"
  "pull, remote-url, or sync command is used.  See \"fossil help clone\" for\n"
  "details on the URL formats.\n"
  "\n"
  "Options:\n"
  "\n"
  "  -B|--httpauth USER:PASS    Credentials for the simple HTTP auth protocol,\n"
  "                             if required by the remote website\n"
  "  --ipv4                     Use only IPv4, not IPv6\n"
  "  --once                     Do not remember URL for subsequent syncs\n"
  "  --proxy PROXY              Use the specified HTTP proxy\n"
  "  --private                  Sync private branches too\n"
  "  -R|--repository REPO       Local repository to sync with\n"
  "  --ssl-identity FILE        Local SSL credentials, if requested by remote\n"
  "  --ssh-command SSH          Use SSH as the \"ssh\" command\n"
  "  -u|--unversioned           Also sync unversioned content\n"
  "  -v|--verbose               Additional (debugging) output\n"
  "  --verily                   Exchange extra information with the remote\n"
  "                             to ensure no content is overlooked\n"
  "\n"
  "See also: clone, pull, push, remote-url";
static const char zHelp377[] =
  "Usage: %fossil tag SUBCOMMAND ...\n"
  "\n"
  "Run various subcommands to control tags and properties.\n"
  "\n"
  "    %fossil tag add ?OPTIONS? TAGNAME CHECK-IN ?VALUE?\n"
  "\n"
  "        Add a new tag or property to CHECK-IN. The tag will\n"
  "        be usable instead of a CHECK-IN in commands such as\n"
  "        update and merge.  If the --propagate flag is present,\n"
  "        the tag value propagates to all descendants of CHECK-IN\n"
  "\n"
  "        Options:\n"
  "          --raw                       Raw tag name.\n"
  "          --propagate                 Propagating tag.\n"
  "          --date-override DATETIME    Set date and time added.\n"
  "          --user-override USER        Name USER when adding the tag.\n"
  "          --dryrun|-n                 Display the tag text, but do not\n"
  "                                      actually insert it into the database.\n"
  "\n"
  "        The --date-override and --user-override options support\n"
  "        importing history from other SCM systems. DATETIME has\n"
  "        the form 'YYYY-MMM-DD HH:MM:SS'.\n"
  "\n"
  "    %fossil tag cancel ?--raw? TAGNAME CHECK-IN\n"
  "\n"
  "        Remove the tag TAGNAME from CHECK-IN, and also remove\n"
  "        the propagation of the tag to any descendants.  Use the\n"
  "        the --dryrun or -n options to see what would have happened.\n"
  "\n"
  "        Options:\n"
  "          --raw                       Raw tag name.\n"
  "          --date-override DATETIME    Set date and time deleted.\n"
  "          --user-override USER        Name USER when deleting the tag.\n"
  "          --dryrun|-n                 Display the control artifact, but do\n"
  "                                      not insert it into the database.\n"
  "\n"
  "    %fossil tag find ?OPTIONS? TAGNAME\n"
  "\n"
  "        List all objects that use TAGNAME.  TYPE can be \"ci\" for\n"
  "        check-ins or \"e\" for events. The limit option limits the number\n"
  "        of results to the given value.\n"
  "\n"
  "        Options:\n"
  "          --raw           Raw tag name.\n"
  "          -t|--type TYPE  One of \"ci\", or \"e\".\n"
  "          -n|--limit N    Limit to N results.\n"
  "\n"
  "    %fossil tag list|ls ?--raw? ?CHECK-IN?\n"
  "\n"
  "        List all tags, or if CHECK-IN is supplied, list\n"
  "        all tags and their values for CHECK-IN.\n"
  "\n"
  "The option --raw allows the manipulation of all types of tags\n"
  "used for various internal purposes in fossil. It also shows\n"
  "\"cancel\" tags for the \"find\" and \"list\" subcommands. You should\n"
  "not use this option to make changes unless you are sure what\n"
  "you are doing.\n"
  "\n"
  "If you need to use a tagname that might be confused with\n"
  "a hexadecimal baseline or artifact ID, you can explicitly\n"
  "disambiguate it by prefixing it with \"tag:\". For instance:\n"
  "\n"
  "  fossil update decaf\n"
  "\n"
  "will be taken as an artifact or baseline ID and fossil will\n"
  "probably complain that no such revision was found. However\n"
  "\n"
  "  fossil update tag:decaf\n"
  "\n"
  "will assume that \"decaf\" is a tag/branch name.";
static const char zHelp382[] =
  "Usage: %fossil tarball VERSION OUTPUTFILE [OPTIONS]\n"
  "\n"
  "Generate a compressed tarball for a specified version.  If the --name\n"
  "option is used, its argument becomes the name of the top-level directory\n"
  "in the resulting tarball.  If --name is omitted, the top-level directory\n"
  "name is derived from the project name, the check-in date and time, and\n"
  "the artifact ID of the check-in.\n"
  "\n"
  "The GLOBLIST argument to --exclude and --include can be a comma-separated\n"
  "list of glob patterns, where each glob pattern may optionally be enclosed\n"
  "in \"...\" or '...' so that it may contain commas.  If a file matches both\n"
  "--include and --exclude then it is excluded.\n"
  "\n"
  "Options:\n"
  "  -X|--exclude GLOBLIST   Comma-separated list of GLOBs of files to exclude\n"
  "  --include GLOBLIST      Comma-separated list of GLOBs of files to include\n"
  "  --name DIRECTORYNAME    The name of the top-level directory in the archive\n"
  "  -R REPOSITORY           Specify a Fossil repository";
#ifdef FOSSIL_ENABLE_TCL
static const char zHelp144[] =
  "If enabled Tcl integration commands will be added to the TH1\n"
  "interpreter, allowing arbitrary Tcl expressions and\n"
  "scripts to be evaluated from TH1.  Additionally, the Tcl\n"
  "interpreter will be able to evaluate arbitrary TH1\n"
  "expressions and scripts.";
#endif
#ifdef FOSSIL_ENABLE_TCL
static const char zHelp145[] =
  "This is the setup script to be evaluated after creating\n"
  "and initializing the Tcl interpreter.  By default, this\n"
  "is empty and no extra setup is performed.";
#endif
static const char zHelp022[] =
  "Usage: %fossil test-add-alerts [OPTIONS] EVENTID ...\n"
  "\n"
  "Add one or more events to the pending_alert queue.  Use this\n"
  "command during testing to force email notifications for specific\n"
  "events.\n"
  "\n"
  "EVENTIDs are text.  The first character is 'c', 'f', 't', or 'w'\n"
  "for check-in, forum, ticket, or wiki.  The remaining text is a\n"
  "integer that references the EVENT.OBJID value for the event.\n"
  "Run /timeline?showid to see these OBJID values.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --backoffice        Run alert_backoffice() after all alerts have\n"
  "                       been added.  This will cause the alerts to be\n"
  "                       sent out with the SENDALERT_TRACE option.\n"
  "\n"
  "   --debug             Like --backoffice, but add the SENDALERT_STDOUT\n"
  "                       so that emails are printed to standard output\n"
  "                       rather than being sent.\n"
  "\n"
  "   --digest            Process emails using SENDALERT_DIGEST";
static const char zHelp432[] =
  "Display the aggregate checksum for content computed in several\n"
  "different ways.  The aggregate checksum is used during \"fossil commit\"\n"
  "to double-check that the information about to be committed to the\n"
  "repository exactly matches the information currently in the check-out.";
static const char zHelp021[] =
  "Usage: %fossil test-alert EVENTID ...\n"
  "\n"
  "Generate the text of an email alert for all of the EVENTIDs\n"
  "listed on the command-line.  Or if no events are listed on the\n"
  "command line, generate text for all events named in the\n"
  "pending_alert table.\n"
  "\n"
  "This command is intended for testing and debugging the logic\n"
  "that generates email alert text.\n"
  "\n"
  "Options:\n"
  "\n"
  "     --digest           Generate digest alert text\n"
  "     --needmod          Assume all events are pending moderator approval";
static const char zHelp176[] =
  "Usage: %fossil test-all-help ?OPTIONS?\n"
  "\n"
  "Show help text for commands and pages.  Useful for proof-reading.\n"
  "Defaults to just the CLI commands.  Specify --www to see only the\n"
  "web pages, or --everything to see both commands and pages.\n"
  "\n"
  "Options:\n"
  "   -e|--everything   Show all commands and pages.\n"
  "   -t|--test         Include test- commands\n"
  "   -w|--www          Show WWW pages.\n"
  "   -s|--settings     Show settings.\n"
  "   -h|--html         Transform output to HTML.";
static const char zHelp273[] =
  "Usage: %fossil test-ambiguous [--minsize N]\n"
  "\n"
  "Show a list of ambiguous artifact hash abbreviations of N characters or\n"
  "more where N defaults to 4.  Change N to a different value using\n"
  "the \"--minsize N\" command-line option.";
static const char zHelp282[] =
  "Usage: %fossil test-ancestor-path VERSION1 VERSION2\n"
  "\n"
  "Report the path from VERSION1 to VERSION2 through their most recent\n"
  "common ancestor.";
static const char zHelp034[] =
  "Usage: %fossil test-backoffice-lease\n"
  "\n"
  "Print out information about the backoffice \"lease\" entry in the\n"
  "config table that controls whether or not backoffice should run.";
static const char zHelp051[] =
  "Usage: %fossil test-builtin-get NAME ?OUTPUT-FILE?";
static const char zHelp049[] =
  "List the names and sizes of all built-in resources.";
static const char zHelp202[] =
  "Usage: %fossil test-canonical-name FILENAME...\n"
  "\n"
  "Test the operation of the canonical name generator.\n"
  "Also test Fossil's ability to measure attributes of a file.";
static const char zHelp057[] =
  "Render an ASCII-art captcha for numbers given on the command line.";
static const char zHelp293[] =
  "Verify that all non-private and non-shunned artifacts are accessible\n"
  "through the cluster chain.";
static const char zHelp073[] =
  "Usage: %fossil test-comment-format ?OPTIONS? PREFIX TEXT ?ORIGTEXT?\n"
  "\n"
  "Test comment formatting and printing.  Use for testing only.\n"
  "\n"
  "Options:\n"
  "  --file           The comment text is really just a file name to\n"
  "                   read it from.\n"
  "  --decode         Decode the text using the same method used when\n"
  "                   handling the value of a C-card from a manifest.\n"
  "  --legacy         Use the legacy comment printing algorithm.\n"
  "  --trimcrlf       Enable trimming of leading/trailing CR/LF.\n"
  "  --trimspace      Enable trimming of leading/trailing spaces.\n"
  "  --wordbreak      Attempt to break lines on word boundaries.\n"
  "  --origbreak      Attempt to break when the original comment text\n"
  "                   is detected.\n"
  "  --indent         Number of spaces to indent (default (-1) is to\n"
  "                   auto-detect).  Zero means no indent.\n"
  "  -W|--width <num> Width of lines (default (-1) is to auto-detect).\n"
  "                   Zero means no limit.";
static const char zHelp065[] =
  "Usage: %fossil test-commit-warning ?OPTIONS?\n"
  "\n"
  "Check each file in the checkout, including unmodified ones, using all\n"
  "the pre-commit checks.\n"
  "\n"
  "Options:\n"
  "   --no-settings     Do not consider any glob settings.\n"
  "   -v|--verbose      Show per-file results for all pre-commit checks.\n"
  "\n"
  "See also: commit, extras";
static const char zHelp038[] =
  "Usage: %fossil test-compress INPUTFILE OUTPUTFILE\n"
  "\n"
  "Run compression on INPUTFILE and write the result into OUTPUTFILE.\n"
  "\n"
  "This is used to test and debug the blob_compress() routine.";
static const char zHelp039[] =
  "Usage: %fossil test-compress-2 IN1 IN2 OUT\n"
  "\n"
  "Read files IN1 and IN2, concatenate the content, compress the\n"
  "content, then write results into OUT.\n"
  "\n"
  "This is used to test and debug the blob_compress2() routine.";
static const char zHelp366[] =
  "Usage: %fossil test-contains-selector FILENAME SELECTOR\n"
  "\n"
  "Determine if the CSS stylesheet FILENAME contains SELECTOR.";
static const char zHelp082[] =
  "Usage:  %fossil RID SRCID SRCID ...  [-force]\n"
  "\n"
  "Convert the content at RID into a delta one of the from SRCIDs.";
static const char zHelp086[] =
  "Usage: %fossil test-content-erase RID ....\n"
  "\n"
  "Remove all traces of one or more artifacts from the local repository.\n"
  "\n"
  "WARNING: This command destroys data and can cause you to lose work.\n"
  "Make sure you have a backup copy before using this command!\n"
  "\n"
  "WARNING: You must run \"fossil rebuild\" after this command to rebuild\n"
  "the metadata.\n"
  "\n"
  "Note that the arguments are the integer raw RID values from the BLOB table,\n"
  "not artifact hashes or labels.";
static const char zHelp080[] =
  "Usage: %fossil test-content-put FILE\n"
  "\n"
  "Read the content of FILE and add it to the Blob table as a new\n"
  "artifact using a direct call to content_put().";
static const char zHelp079[] =
  "Extract a blob from the database and write it into a file.  This\n"
  "version does not expand the delta.";
static const char zHelp081[] =
  "Make sure the content at RECORDID is not a delta";
static const char zHelp312[] =
  "Usage: fossil test-convert-stext FILE MIMETYPE\n"
  "\n"
  "Read the content of FILE and convert it to stext according to MIMETYPE.\n"
  "Send the result to standard output.";
static const char zHelp292[] =
  "Create clusters for all unclustered artifacts if the number of unclustered\n"
  "artifacts exceeds the current clustering threshold.";
static const char zHelp264[] =
  "Usage:  %fossil test-crosslink RECORDID\n"
  "\n"
  "Run the manifest_crosslink() routine on the artifact with the given\n"
  "record ID.  This is typically done in the debugger.";
static const char zHelp041[] =
  "Compress and uncompress each file named on the command line.\n"
  "Verify that the original content is recovered.";
static const char zHelp156[] =
  "Print the names of the various database files:\n"
  "(1) The main repository database\n"
  "(2) The local checkout database\n"
  "(3) The global configuration database";
static const char zHelp064[] =
  "Usage: %fossil test-date-format DATE-STRING...\n"
  "\n"
  "Convert the DATE-STRING into the standard format used in artifacts\n"
  "and display the result.";
static const char zHelp433[] =
  "Usage: %fossil test-decode-email FILE\n"
  "\n"
  "Read an rfc-2822 formatted email out of FILE, then write a decoding\n"
  "to stdout.  Use for testing and validating the email decoder.";
static const char zHelp189[] =
  "Usage: %fossil test-decode64 STRING";
static const char zHelp161[] =
  "Usage: %fossil test-delta FILE1 FILE2\n"
  "\n"
  "Read two files named on the command-line.  Create and apply deltas\n"
  "going in both directions.  Verify that the original files are\n"
  "correctly recovered.";
static const char zHelp159[] =
  "Usage: %fossil test-delta-analyze FILE1 FILE2\n"
  "\n"
  "Create and a delta that carries FILE1 into FILE2.  Print the\n"
  "number bytes copied and the number of bytes inserted.";
static const char zHelp160[] =
  "Usage: %fossil test-delta-apply FILE1 DELTA\n"
  "\n"
  "Apply DELTA to FILE1 and output the result.";
static const char zHelp158[] =
  "Usage: %fossil test-delta-create FILE1 FILE2 DELTA\n"
  "\n"
  "Create and output a delta that carries FILE1 into FILE2.\n"
  "Store the result in DELTA.";
static const char zHelp274[] =
  "Usage: %fossil test-describe-artifacts [--from S] [--count N]\n"
  "\n"
  "Display a one-line description of every artifact.";
static const char zHelp291[] =
  "Usage: %fossil test-detach  ?REPOSITORY?\n"
  "\n"
  "Change the project-code and make other changes in order to prevent\n"
  "the repository from ever again pushing or pulling to other\n"
  "repositories.  Used to create a \"test\" repository for development\n"
  "testing by cloning a working project repository.";
static const char zHelp166[] =
  "Usage: %fossil [options] FILE1 FILE2\n"
  "\n"
  "Print the difference between two files.  The usual diff options apply.";
static const char zHelp207[] =
  "Usage: %fossil test-dir-size NAME [GLOB] [--nodots]\n"
  "\n"
  "Return the number of objects in the directory NAME.  If GLOB is\n"
  "provided, then only count objects that match the GLOB pattern.\n"
  "if --nodots is specified, omit files that begin with \".\".";
static const char zHelp260[] =
  "Usage:  %fossil test-echo [--hex] ARGS...\n"
  "\n"
  "Echo all command-line arguments (enclosed in [...]) to the screen so that\n"
  "wildcard expansion behavior of the host shell can be investigated.\n"
  "\n"
  "With the --hex option, show the output as hexadecimal.  This can be used\n"
  "to verify the fossil_path_to_utf8() routine on Windows and Mac.";
static const char zHelp352[] =
  "Usage: %fossil test-emailblob-refcheck [--repair] [--full] [--clean]\n"
  "\n"
  "Verify that the emailblob.enref field is correct.  Report any errors.\n"
  "Use the --repair command to fix up the enref field.  The --full option\n"
  "gives a full report showing the enref value on all entries in the\n"
  "emailblob table.  If the --clean flags is used together with --repair,\n"
  "then emailblob table entires with enref==0 are removed.";
static const char zHelp188[] =
  "Usage: %fossil test-encode64 STRING";
static const char zHelp191[] =
  "Usage:  fossil test-etag -key KEY-NUMBER  -hash HASH\n"
  "\n"
  "Generate an etag given a KEY-NUMBER and/or a HASH.\n"
  "\n"
  "KEY-NUMBER is some combination of:\n"
  "\n"
  "   1   ETAG_CONFIG   The config table version number\n"
  "   2   ETAG_DATA     The event table version number\n"
  "   4   ETAG_COOKIE   The display cookie";
static const char zHelp198[] =
  "Usage: %fossil test-file-copy SOURCE DESTINATION\n"
  "\n"
  "Make a copy of the file at SOURCE into a new name DESTINATION.  Any\n"
  "directories in the path leading up to DESTINATION that do not already\n"
  "exist are created automatically.";
static const char zHelp201[] =
  "Usage: %fossil test-file-environment FILENAME...\n"
  "\n"
  "Display the effective file handling subsystem \"settings\" and then\n"
  "display file system information about the files specified, if any.\n"
  "\n"
  "Options:\n"
  "\n"
  "    --allow-symlinks BOOLEAN     Temporarily turn allow-symlinks on/off\n"
  "    --open-config                Open the configuration database first.\n"
  "    --slash                      Trailing slashes, if any, are retained.\n"
  "    --reset                      Reset cached stat() info for each file.";
static const char zHelp047[] =
  "Usage: %fossil test-fileage CHECKIN";
static const char zHelp465[] =
  "Generate a ZIP archive specified by the first argument that\n"
  "contains files given in the second and subsequent arguments.";
static const char zHelp346[] =
  "Usage: %fossil test-find-mx DOMAIN ...\n"
  "\n"
  "Do a DNS MX lookup to find the hostname for sending email for\n"
  "DOMAIN.";
static const char zHelp286[] =
  "Usage: %fossil test-find-pivot ?options? PRIMARY SECONDARY ...\n"
  "\n"
  "Test the pivot_find() procedure.\n"
  "\n"
  "Options:\n"
  "   --ignore-merges       Ignore merges for discovering name pivots";
static const char zHelp157[] =
  "Usage: %fossil test-fingerprint ?RCVID? ?--check?\n"
  "\n"
  "Display the repository fingerprint.  Or if the --check option\n"
  "is provided and this command is run from a checkout, invoke the\n"
  "db_fingerprint_ok() method and print its result.";
static const char zHelp212[] =
  "Usage: %fossil test-forumthread THREADID\n"
  "\n"
  "Display a summary of all messages on a thread.";
static const char zHelp222[] =
  "Usage:  %fossil test-glob PATTERN STRING...\n"
  "\n"
  "PATTERN is a comma- and whitespace-separated list of optionally\n"
  "quoted glob patterns.  Show which of the STRINGs that follow match\n"
  "the PATTERN.\n"
  "\n"
  "If PATTERN begins with \"@\" the rest of the pattern is understood\n"
  "to be a setting name (such as binary-glob, crln-glob, or encoding-glob)\n"
  "and the value of that setting is used as the actually glob pattern.";
static const char zHelp298[] =
  "Usage: %fossil test-grep REGEXP [FILE...]\n"
  "\n"
  "Run a regular expression match over the named disk files, or against\n"
  "standard input if no disk files are named on the command-line.\n"
  "\n"
  "Options:\n"
  "\n"
  "  -i|--ignore-case    Ignore case";
static const char zHelp223[] =
  "Usage: %fossil test-gzip FILENAME\n"
  "\n"
  "Compress a file using gzip.";
static const char zHelp388[] =
  "Usage: %fossil test-hash-color TAG ...\n"
  "\n"
  "Print out the color names associated with each tag.  Used for\n"
  "testing the hash_color() function.";
#if 0
static const char zHelp295[] =
  "Usage: %fossil test-hash-from-path ?OPTIONS? DESTINATION UUID\n"
  "\n"
  "Generate a sample path name from DESTINATION and UUID, as the `deconstruct'\n"
  "command would do.  Then try to guess the hash policy from the path name, as\n"
  "the `reconstruct' command would do.\n"
  "\n"
  "No files or directories will be created.\n"
  "\n"
  "Options:\n"
  "  -L|--prefixlength N     Set the length of the names of the DESTINATION\n"
  "                          subdirectories to N.";
#endif
static const char zHelp427[] =
  "Usage: %fossil test-hash-passwords REPOSITORY\n"
  "\n"
  "Convert all local password storage to use a SHA1 hash of the password\n"
  "rather than cleartext.  Passwords that are already stored as the SHA1\n"
  "has are unchanged.";
static const char zHelp455[] =
  "Run the htmlTidy() routine on the content of all files named on\n"
  "the command-line and write the results to standard output.";
static const char zHelp456[] =
  "Usage: %fossil test-html-to-text FILE ...\n"
  "\n"
  "Read all files named on the command-line.  Convert the file\n"
  "content from HTML to text and write the results on standard\n"
  "output.\n"
  "\n"
  "This command is intended as a test and debug interface for\n"
  "the html_to_plaintext() routine.";
static const char zHelp257[] =
  "Works like the http command but gives setup permission to all users.\n"
  "\n"
  "Options:\n"
  "  --th-trace          trace TH1 execution (for debugging purposes)";
static const char zHelp083[] =
  "Verify that all content can be extracted from the BLOB table correctly.\n"
  "If the BLOB table is correct, then the repository can always be\n"
  "successfully reconstructed using \"fossil rebuild\".\n"
  "\n"
  "Options:\n"
  "\n"
  "   --parse            Parse all manifests, wikis, tickets, events, and\n"
  "                      so forth, reporting any errors found.";
static const char zHelp247[] =
  "Read lines of text from standard input.  Interpret each line of text\n"
  "as a User-Agent string from an HTTP header.  Label each line as HUMAN\n"
  "or ROBOT.";
static const char zHelp037[] =
  "Verify that the fossil_isspace() routine is working correctly by\n"
  "testing it on all possible inputs.";
static const char zHelp245[] =
  "Usage: %fossil NAME ...\n"
  "\n"
  "Resolve each name on the command line and call leaf_ambiguity_warning()\n"
  "for each resulting RID.";
static const char zHelp300[] =
  "Usage: %fossil test-list-page DIRECTORY\n"
  "\n"
  "Show all repositories underneath DIRECTORY.  Or if DIRECTORY is \"/\"\n"
  "show all repositories in the ~/.fossil file.";
static const char zHelp179[] =
  "List all web pages.";
static const char zHelp246[] =
  "%fossil test-loadavg\n"
  "\n"
  "Print the load average on the host machine.";
static const char zHelp252[] =
  "Usage:  %fossil test-looks-like-utf FILENAME\n"
  "\n"
  "Options:\n"
  "   -n|--limit <num> Repeat looks-like function <num> times, for\n"
  "                    performance measurement. Default = 1;\n"
  "   --utf8           Ignoring BOM and file size, force UTF-8 checking\n"
  "   --utf16          Ignoring BOM and file size, force UTF-16 checking\n"
  "\n"
  "FILENAME is the name of a file to check for textual content in the UTF-8\n"
  "and/or UTF-16 encodings.";
static const char zHelp009[] =
  "Usage: %fossil test-mailbox-hashname HUMAN-NAME ...\n"
  "\n"
  "Return the mailbox hash name corresponding to each human-readable\n"
  "name on the command line.  This is a test interface for the\n"
  "alert_mailbox_name() function.";
static const char zHelp453[] =
  "Usage: %fossil test-markdown-render FILE\n"
  "\n"
  "Render markdown wiki from FILE to stdout.";
static const char zHelp308[] =
  "Usage: %fossil test-match SEARCHSTRING FILE1 FILE2 ...\n"
  "\n"
  "Run the full-scan search algorithm using SEARCHSTRING against\n"
  "the text of the files listed.  Output matches and snippets.";
static const char zHelp181[] =
  "Usage: %fossil test-mimetype FILENAME...\n"
  "\n"
  "Return the deduced mimetype for each file listed.\n"
  "\n"
  "If Fossil is compiled with -DFOSSIL_DEBUG then the \"mimetype-test\"\n"
  "filename is special and verifies the integrity of the mimetype table.\n"
  "It should return \"ok\".";
static const char zHelp085[] =
  "Usage: %fossil test-missing\n"
  "\n"
  "Look at every artifact in the repository and verify that\n"
  "all references are satisfied.  Report any referenced artifacts\n"
  "that are missing or shunned.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --notshunned          Do not report shunned artifacts\n"
  "   --quiet               Only show output if there are errors";
static const char zHelp088[] =
  "Usage: %fossil test-move-repository PATHNAME\n"
  "\n"
  "Change the location of the repository database on a local check-out.\n"
  "Use this command to avoid having to close and reopen a checkout\n"
  "when relocating the repository database.";
static const char zHelp283[] =
  "Usage: %fossil test-name-changes [--debug] VERSION1 VERSION2\n"
  "\n"
  "Show all filename changes that occur going from VERSION1 to VERSION2";
static const char zHelp269[] =
  "Convert a name to a full artifact ID.";
static const char zHelp190[] =
  "For each command-line argument X, run both obscure(X) and\n"
  "unobscure(obscure(X)) and print the results.  This is used for testing\n"
  "and debugging of the obscure() and unobscure() functions.";
static const char zHelp084[] =
  "Search the repository for orphaned artifacts.";
static const char zHelp263[] =
  "Usage: %fossil test-parse-all-blobs\n"
  "\n"
  "Parse all entries in the BLOB table that are believed to be non-data\n"
  "artifacts and report any errors.  Run this test command on historical\n"
  "repositories after making any changes to the manifest_parse()\n"
  "implementation to confirm that the changes did not break anything.";
static const char zHelp262[] =
  "Usage: %fossil test-parse-manifest FILENAME ?N?\n"
  "\n"
  "Parse the manifest(s) given on the command-line and report any\n"
  "errors.  If the N argument is given, run the parsing N times.";
static const char zHelp279[] =
  "Usage: %fossil test-phantoms\n"
  "\n"
  "Show all phantom artifacts";
static const char zHelp033[] =
  "Usage: %fossil [--sleep N] PROCESS-ID ...\n"
  "\n"
  "Show the current process id, and also tell whether or not all other\n"
  "processes IDs on the command line are running or not.  If the --sleep N\n"
  "option is provide, then sleep for N seconds before exiting.";
static const char zHelp429[] =
  "Usage: %fossil test-prompt-password PROMPT VERIFY\n"
  "\n"
  "Prompts the user for a password and then prints it verbatim.\n"
  "\n"
  "Behavior is controlled by the VERIFY parameter:\n"
  "\n"
  "    0     Just ask once.\n"
  "\n"
  "    1     If the first answer is a non-empty string, ask for\n"
  "          verification.  Repeat if the two strings do not match.\n"
  "\n"
  "    2     Ask twice, repeat if the strings do not match.";
static const char zHelp428[] =
  "Usage: %fossil test-prompt-user PROMPT\n"
  "\n"
  "Prompts the user for input and then prints it verbatim (i.e. without\n"
  "a trailing line terminator).";
static const char zHelp165[] =
  "Usage: %fossil test-rawdiff FILE1 FILE2\n"
  "\n"
  "Show a minimal sequence of Copy/Delete/Insert operations needed to convert\n"
  "FILE1 into FILE2.  This command is intended for use in testing and debugging\n"
  "the built-in difference engine of Fossil.";
static const char zHelp203[] =
  "Test the operation of the relative name generator.";
static const char zHelp000[] =
  "Usage: %fossil test-reserved-names [-omitrepo]\n"
  "\n"
  "Show all reserved filenames for the current check-out.";
static const char zHelp311[] =
  "Usage: fossil test-search-stext TYPE RID NAME\n"
  "\n"
  "Compute the search text for document TYPE-RID whose name is NAME.\n"
  "The TYPE is one of \"c\", \"d\", \"t\", \"w\", or \"e\".  The RID is the document\n"
  "ID.  The NAME is used to figure out a mimetype to use for formatting\n"
  "the raw document text.";
static const char zHelp199[] =
  "Usage: %fossil test-set-mtime FILENAME DATE/TIME\n"
  "\n"
  "Sets the mtime of the named file to the date/time shown.";
static const char zHelp281[] =
  "Usage: %fossil test-shortest-path ?--no-merge? VERSION1 VERSION2\n"
  "\n"
  "Report the shortest path between two check-ins.  If the --no-merge flag\n"
  "is used, follow only direct parent-child paths and omit merge links.";
static const char zHelp200[] =
  "Usage: %fossil test-simplify-name FILENAME...\n"
  "\n"
  "Print the simplified versions of each FILENAME.";
static const char zHelp347[] =
  "Usage: %fossil test-smtp-probe DOMAIN [ME]\n"
  "\n"
  "Interact with the SMTP server for DOMAIN by setting up a connection\n"
  "and then immediately shutting it back down.  Log all interaction\n"
  "on the console.  Use ME as the domain name of the sender.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --direct              Use DOMAIN directly without going through MX\n"
  "   --port N              Talk on TCP port N";
static const char zHelp349[] =
  "Usage: %fossil test-smtp-send EMAIL FROM TO ...\n"
  "\n"
  "Use SMTP to send the email message contained in the file named EMAIL\n"
  "to the list of users TO.  FROM is the sender of the email.\n"
  "\n"
  "Options:\n"
  "\n"
  "     --direct              Go directly to the TO domain.  Bypass MX lookup\n"
  "     --port N              Use TCP port N instead of 25\n"
  "     --trace               Show the SMTP conversation on the console";
static const char zHelp348[] =
  "Usage: %fossil test-smtp-senddata FILE\n"
  "\n"
  "Read content from FILE, then send it to stdout encoded as if sent\n"
  "to the DATA portion of an SMTP session.  This command is used to\n"
  "test the encoding logic.";
static const char zHelp052[] =
  "Usage: %fossil test-subtree ?OPTIONS?\n"
  "\n"
  "Show the subset of check-ins that match the supplied options.  This\n"
  "command is used to test the subtree_from_options() subroutine in the\n"
  "implementation and does not really have any other practical use that\n"
  "we know of.\n"
  "\n"
  "Options:\n"
  "   --branch BRANCH           Include only check-ins on BRANCH\n"
  "   --from TAG                Start the subtree at TAG\n"
  "   --to TAG                  End the subtree at TAG\n"
  "   --checkin TAG             The subtree is the single check-in TAG\n"
  "   --all                     Include FILE and TAG artifacts\n"
  "   --exclusive               Include FILES exclusively on check-ins";
static const char zHelp376[] =
  "Usage: %fossil test-tag (+|*|-)TAGNAME ARTIFACT-ID ?VALUE?\n"
  "\n"
  "Add a tag or anti-tag to the rebuildable tables of the local repository.\n"
  "No tag artifact is created so the new tag is erased the next\n"
  "time the repository is rebuilt.  This routine is for testing\n"
  "use only.";
static const char zHelp381[] =
  "Generate a GZIP-compressed tarball in the file given by the first argument\n"
  "that contains files given in the second and subsequent arguments.\n"
  "\n"
  "  -h, --dereference   Follow symlinks; archive the files they point to.";
static const char zHelp205[] =
  "Usage:  fossil test-name [--time SUFFIX] BASENAME ...\n"
  "\n"
  "Generate temporary filenames derived from BASENAME.  Use the --time\n"
  "option to generate temp names based on the time of day.";
static const char zHelp385[] =
  "Usage: %fossil test-th-eval SCRIPT\n"
  "\n"
  "Evaluate SCRIPT as if it were a header or footer or ticket rendering\n"
  "script and show the results on standard output.\n"
  "\n"
  "Options:\n"
  "\n"
  "    --cgi                Include a CGI response header in the output\n"
  "    --http               Include an HTTP response header in the output\n"
  "    --open-config        Open the configuration database\n"
  "    --set-anon-caps      Set anonymous login capabilities\n"
  "    --set-user-caps      Set user login capabilities\n"
  "    --th-trace           Trace TH1 execution (for debugging purposes)";
#ifdef FOSSIL_ENABLE_TH1_HOOKS
static const char zHelp387[] =
  "Usage: %fossil test-th-hook TYPE NAME FLAGS\n"
  "\n"
  "Evaluates the TH1 script configured for the pre-operation (i.e. a command\n"
  "or web page) \"hook\" or post-operation \"notification\".  The results of the\n"
  "script evaluation, if any, will be printed to the standard output channel.\n"
  "The NAME argument must be the name of a command or web page; however, it\n"
  "does not necessarily have to be a command or web page that is normally\n"
  "recognized by Fossil.  The FLAGS argument will be used to set the value\n"
  "of the \"cmd_flags\" and/or \"web_flags\" TH1 variables, if applicable.  The\n"
  "TYPE argument must be one of the following:\n"
  "\n"
  "    cmdhook              Executes the TH1 procedure [command_hook], after\n"
  "                         setting the TH1 variables \"cmd_name\", \"cmd_args\",\n"
  "                         and \"cmd_flags\" to appropriate values.\n"
  "\n"
  "    cmdnotify            Executes the TH1 procedure [command_notify], after\n"
  "                         setting the TH1 variables \"cmd_name\", \"cmd_args\",\n"
  "                         and \"cmd_flags\" to appropriate values.\n"
  "\n"
  "    webhook              Executes the TH1 procedure [webpage_hook], after\n"
  "                         setting the TH1 variables \"web_name\", \"web_args\",\n"
  "                         and \"web_flags\" to appropriate values.\n"
  "\n"
  "    webnotify            Executes the TH1 procedure [webpage_notify], after\n"
  "                         setting the TH1 variables \"web_name\", \"web_args\",\n"
  "                         and \"web_flags\" to appropriate values.\n"
  "\n"
  "Options:\n"
  "\n"
  "    --cgi                Include a CGI response header in the output\n"
  "    --http               Include an HTTP response header in the output\n"
  "    --th-trace           Trace TH1 execution (for debugging purposes)";
#endif
static const char zHelp384[] =
  "Usage: %fossil test-th-render FILE\n"
  "\n"
  "Read the content of the file named \"FILE\" as if it were a header or\n"
  "footer or ticket rendering script, evaluate it, and show the results\n"
  "on standard output.\n"
  "\n"
  "Options:\n"
  "\n"
  "    --cgi                Include a CGI response header in the output\n"
  "    --http               Include an HTTP response header in the output\n"
  "    --open-config        Open the configuration database\n"
  "    --set-anon-caps      Set anonymous login capabilities\n"
  "    --set-user-caps      Set user login capabilities\n"
  "    --th-trace           Trace TH1 execution (for debugging purposes)";
static const char zHelp386[] =
  "Usage: %fossil test-th-source FILE\n"
  "\n"
  "Evaluate the contents of the file named \"FILE\" as if it were a header\n"
  "or footer or ticket rendering script and show the results on standard\n"
  "output.\n"
  "\n"
  "Options:\n"
  "\n"
  "    --cgi                Include a CGI response header in the output\n"
  "    --http               Include an HTTP response header in the output\n"
  "    --open-config        Open the configuration database\n"
  "    --set-anon-caps      Set anonymous login capabilities\n"
  "    --set-user-caps      Set user login capabilities\n"
  "    --th-trace           Trace TH1 execution (for debugging purposes)";
static const char zHelp394[] =
  "Usage: %fossil test-ticket-rebuild TICKETID|all\n"
  "\n"
  "Rebuild the TICKET and TICKETCHNG tables for the given ticket ID\n"
  "or for ALL.";
static const char zHelp154[] =
  "Usage: %fossil test-timespan TIMESTAMP\n"
  "\n"
  "Print the approximate span of time from now to TIMESTAMP.";
static const char zHelp392[] =
  "Usage: %fossil test-timewarp-list ?-v|---verbose?\n"
  "\n"
  "Display all instances of child check-ins that appear earlier in time\n"
  "than their parent.  If the -v|--verbose option is provided, both the\n"
  "parent and child check-ins and their times are shown.";
static const char zHelp197[] =
  "Invoke the topological_sort_checkins() interface for testing\n"
  "purposes.";
static const char zHelp204[] =
  "Test the operation of the tree name generator.\n"
  "\n"
  "Options:\n"
  "  --absolute           Return an absolute path instead of a relative one.\n"
  "  --case-sensitive B   Enable or disable case-sensitive filenames.  B is\n"
  "                       a boolean: \"yes\", \"no\", \"true\", \"false\", etc.";
static const char zHelp278[] =
  "Usage: %fossil test-unclustered\n"
  "\n"
  "Show all artifacts in the unclustered table";
static const char zHelp040[] =
  "Usage: %fossil test-uncompress IN OUT\n"
  "\n"
  "Read the content of file IN, uncompress that content, and write the\n"
  "result into OUT.  This command is intended for testing of the\n"
  "blob_compress() function.";
static const char zHelp277[] =
  "Usage: %fossil test-unsent\n"
  "\n"
  "Show all artifacts in the unsent table";
static const char zHelp424[] =
  "Usage: %fossil test-urlparser URL ?options?\n"
  "\n"
  "   --remember      Store results in last-sync-url\n"
  "   --prompt-pw     Prompt for password if missing";
static const char zHelp426[] =
  "Usage: %fossil test-usernames\n"
  "\n"
  "Print details about sources of fossil usernames.";
static const char zHelp206[] =
  "Usage:  fossil test-valid-for-windows FILENAME ....\n"
  "\n"
  "Show which filenames are not valid for Windows";
static const char zHelp076[] =
  "Usage: %fossil test-var-get VAR ?FILE?\n"
  "\n"
  "Write the text of the VAR variable into FILE.  If FILE is \"-\"\n"
  "or is omitted then output goes to standard output.  VAR can be a\n"
  "GLOB pattern.\n"
  "\n"
  "If not in an open check-out, use the -R REPO option to specify a\n"
  "a repository.";
static const char zHelp075[] =
  "Usage: %fossil test-var-list ?PATTERN? ?--unset? ?--mtime?\n"
  "\n"
  "Show the content of the CONFIG table in a repository.  If PATTERN is\n"
  "specified, then only show the entries that match that glob pattern.\n"
  "Last modification time is shown if the --mtime option is present.\n"
  "\n"
  "If the --unset option is included, then entries are deleted rather than\n"
  "being displayed.  WARNING! This cannot be undone.  Be sure you know what\n"
  "you are doing!  The --unset option only works if there is a PATTERN.\n"
  "Probably you should run the command once without --unset to make sure\n"
  "you know exactly what is being deleted.\n"
  "\n"
  "If not in an open check-out, use the -R REPO option to specify a\n"
  "a repository.";
static const char zHelp077[] =
  "Usage: %fossil test-var-set VAR ?VALUE? ?--file FILE?\n"
  "\n"
  "Store VALUE or the content of FILE (exactly one of which must be\n"
  "supplied) into variable VAR.  Use a FILE of \"-\" to read from\n"
  "standard input.\n"
  "\n"
  "WARNING: changing the value of a variable can interfere with the\n"
  "operation of Fossil.  Be sure you know what you are doing.\n"
  "\n"
  "Use \"--blob FILE\" instead of \"--file FILE\" to load a binary blob\n"
  "such as a GIF.";
static const char zHelp431[] =
  "Verify all records in the repository.";
static const char zHelp272[] =
  "Usage: %fossil test-whatis-all\n"
  "\n"
  "Show \"whatis\" information about every artifact in the repository";
static const char zHelp454[] =
  "Usage: %fossil test-wiki-render FILE [OPTIONS]\n"
  "\n"
  "Options:\n"
  "   --buttons        Set the WIKI_BUTTONS flag\n"
  "   --htmlonly       Set the WIKI_HTMLONLY flag\n"
  "   --linksonly      Set the WIKI_LINKSONLY flag\n"
  "   --nobadlinks     Set the WIKI_NOBADLINKS flag\n"
  "   --inline         Set the WIKI_INLINE flag\n"
  "   --noblock        Set the WIKI_NOBLOCK flag";
static const char zHelp155[] =
  "Usage: %fossil test-without-rowid FILENAME...\n"
  "\n"
  "Change the Fossil repository FILENAME to make use of the WITHOUT ROWID\n"
  "optimization.  FILENAME can also be the ~/.fossil file or a local\n"
  ".fslckout or _FOSSIL_ file.\n"
  "\n"
  "The purpose of this command is for testing the WITHOUT ROWID capabilities\n"
  "of SQLite.  There is no big advantage to using WITHOUT ROWID in Fossil.\n"
  "\n"
  "Options:\n"
  "   --dryrun | -n         No changes.  Just print what would happen.";
static const char zHelp459[] =
  "This command is used for debugging the server.  There is a single\n"
  "argument which is the uncompressed content of an \"xfer\" message\n"
  "from client to server.  This command interprets that message as\n"
  "if had been received by the server.\n"
  "\n"
  "On the client side, run:\n"
  "\n"
  "     fossil push http://bogus/ --httptrace\n"
  "\n"
  "Or a similar command to provide the output.  The content of the\n"
  "message will appear on standard output.  Capture this message\n"
  "into a file named (for example) out.txt.  Then run the\n"
  "server in gdb:\n"
  "\n"
  "    gdb fossil\n"
  "    r test-xfer out.txt";
#ifdef FOSSIL_ENABLE_TH1_DOCS
static const char zHelp146[] =
  "If enabled, this allows embedded documentation files to contain\n"
  "arbitrary TH1 scripts that are evaluated on the server.  If native\n"
  "Tcl integration is also enabled, this setting has the\n"
  "potential to allow anybody with check-in privileges to\n"
  "do almost anything that the associated operating system\n"
  "user account could do.  Extreme caution should be used\n"
  "when enabling this setting.";
#endif
#ifdef FOSSIL_ENABLE_TH1_HOOKS
static const char zHelp147[] =
  "If enabled, special TH1 commands will be called before and\n"
  "after any Fossil command or web page.";
#endif
static const char zHelp148[] =
  "This is the setup script to be evaluated after creating\n"
  "and initializing the TH1 interpreter.  By default, this\n"
  "is empty and no extra setup is performed.";
static const char zHelp149[] =
  "Specify which URI's are allowed in HTTP requests from\n"
  "TH1 scripts.  If empty, no HTTP requests are allowed\n"
  "whatsoever.";
static const char zHelp402[] =
  "Usage: %fossil ticket SUBCOMMAND ...\n"
  "\n"
  "Run various subcommands to control tickets\n"
  "\n"
  "  %fossil ticket show (REPORTTITLE|REPORTNR) ?TICKETFILTER? ?OPTIONS?\n"
  "\n"
  "    Options:\n"
  "      -l|--limit LIMITCHAR\n"
  "      -q|--quote\n"
  "      -R|--repository FILE\n"
  "\n"
  "    Run the ticket report, identified by the report format title\n"
  "    used in the GUI. The data is written as flat file on stdout,\n"
  "    using TAB as separator. The separator can be changed using\n"
  "    the -l or --limit option.\n"
  "\n"
  "    If TICKETFILTER is given on the commandline, the query is\n"
  "    limited with a new WHERE-condition.\n"
  "      example:  Report lists a column # with the uuid\n"
  "                TICKETFILTER may be [#]='uuuuuuuuu'\n"
  "      example:  Report only lists rows with status not open\n"
  "                TICKETFILTER: status != 'open'\n"
  "\n"
  "    If --quote is used, the tickets are encoded by quoting special\n"
  "    chars (space -> \\s, tab -> \\t, newline -> \\n, cr -> \\r,\n"
  "    formfeed -> \\f, vtab -> \\v, nul -> \\0, \\ -> \\\\).\n"
  "    Otherwise, the simplified encoding as on the show report raw page\n"
  "    in the GUI is used. This has no effect in JSON mode.\n"
  "\n"
  "    Instead of the report title it's possible to use the report\n"
  "    number; the special report number 0 lists all columns defined in\n"
  "    the ticket table.\n"
  "\n"
  "  %fossil ticket list fields\n"
  "  %fossil ticket ls fields\n"
  "\n"
  "    List all fields defined for ticket in the fossil repository.\n"
  "\n"
  "  %fossil ticket list reports\n"
  "  %fossil ticket ls reports\n"
  "\n"
  "    List all ticket reports defined in the fossil repository.\n"
  "\n"
  "  %fossil ticket set TICKETUUID (FIELD VALUE)+ ?-q|--quote?\n"
  "  %fossil ticket change TICKETUUID (FIELD VALUE)+ ?-q|--quote?\n"
  "\n"
  "    Change ticket identified by TICKETUUID to set the values of\n"
  "    each field FIELD to VALUE.\n"
  "\n"
  "    Field names as defined in the TICKET table.  By default, these\n"
  "    names include: type, status, subsystem, priority, severity, foundin,\n"
  "    resolution, title, and comment, but other field names can be added\n"
  "    or substituted in customized installations.\n"
  "\n"
  "    If you use +FIELD, the VALUE is appended to the field FIELD.  You\n"
  "    can use more than one field/value pair on the commandline.  Using\n"
  "    --quote enables the special character decoding as in \"ticket\n"
  "    show\", which allows setting multiline text or text with special\n"
  "    characters.\n"
  "\n"
  "  %fossil ticket add FIELD VALUE ?FIELD VALUE .. ? ?-q|--quote?\n"
  "\n"
  "    Like set, but create a new ticket with the given values.\n"
  "\n"
  "  %fossil ticket history TICKETUUID\n"
  "\n"
  "    Show the complete change history for the ticket\n"
  "\n"
  "Note that the values in set|add are not validated against the\n"
  "definitions given in \"Ticket Common Script\".";
static const char zHelp391[] =
  "Usage: %fossil timeline ?WHEN? ?CHECKIN|DATETIME? ?OPTIONS?\n"
  "\n"
  "Print a summary of activity going backwards in date and time\n"
  "specified or from the current date and time if no arguments\n"
  "are given.  The WHEN argument can be any unique abbreviation\n"
  "of one of these keywords:\n"
  "\n"
  "    before\n"
  "    after\n"
  "    descendants | children\n"
  "    ancestors | parents\n"
  "\n"
  "The CHECKIN can be any unique prefix of 4 characters or more. You\n"
  "can also say \"current\" for the current version.\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.\n"
  "\n"
  "\n"
  "Options:\n"
  "  -n|--limit N         If N is positive, output the first N entries.  If\n"
  "                       N is negative, output the first -N lines.  If N is\n"
  "                       zero, no limit.  Default is -20 meaning 20 lines.\n"
  "  -p|--path PATH       Output items affecting PATH only.\n"
  "                       PATH can be a file or a sub directory.\n"
  "  --offset P           skip P changes\n"
  "  --sql                Show the SQL used to generate the timeline\n"
  "  -t|--type TYPE       Output items from the given types only, such as:\n"
  "                           ci = file commits only\n"
  "                           e  = technical notes only\n"
  "                           t  = tickets only\n"
  "                           w  = wiki commits only\n"
  "  -v|--verbose         Output the list of files changed by each commit\n"
  "                       and the type of each change (edited, deleted,\n"
  "                       etc.) after the check-in comment.\n"
  "  -W|--width <num>     Width of lines (default is to auto-detect). Must be\n"
  "                       >20 or 0 (= no limit, resulting in a single line per\n"
  "                       entry).\n"
  "  -R REPO_FILE         Specifies the repository db to use. Default is\n"
  "                       the current checkout's repository.";
static const char zHelp416[] =
  "Usage: %fossil undo ?OPTIONS? ?FILENAME...?\n"
  "   or: %fossil redo ?OPTIONS? ?FILENAME...?\n"
  "\n"
  "Undo the changes to the working checkout caused by the most recent\n"
  "of the following operations:\n"
  "\n"
  "   (1) fossil update             (5) fossil stash apply\n"
  "   (2) fossil merge              (6) fossil stash drop\n"
  "   (3) fossil revert             (7) fossil stash goto\n"
  "   (4) fossil stash pop\n"
  "\n"
  "The \"fossil clean\" operation can also be undone; however, this is\n"
  "currently limited to files that are less than 10MiB in size.\n"
  "\n"
  "If FILENAME is specified then restore the content of the named\n"
  "file(s) but otherwise leave the update or merge or revert in effect.\n"
  "The redo command undoes the effect of the most recent undo.\n"
  "\n"
  "If the -n|--dry-run option is present, no changes are made and instead\n"
  "the undo or redo command explains what actions the undo or redo would\n"
  "have done had the -n|--dry-run been omitted.\n"
  "\n"
  "A single level of undo/redo is supported.  The undo/redo stack\n"
  "is cleared by the commit and checkout commands.\n"
  "\n"
  "Options:\n"
  "  -n|--dry-run   do not make changes but show what would be done\n"
  "\n"
  "See also: commit, status";
static const char zHelp287[] =
  "Usage: %fossil unpublished ?OPTIONS?\n"
  "\n"
  "Show a list of unpublished or \"private\" artifacts.  Unpublished artifacts\n"
  "will never push and hence will not be shared with collaborators.\n"
  "\n"
  "By default, this command only shows unpublished check-ins.  To show\n"
  "all unpublished artifacts, use the --all command-line option.\n"
  "\n"
  "OPTIONS:\n"
  "    --all                   Show all artifacts, not just check-ins";
static const char zHelp422[] =
  "Usage: %fossil update ?OPTIONS? ?VERSION? ?FILES...?\n"
  "\n"
  "Change the version of the current checkout to VERSION.  Any\n"
  "uncommitted changes are retained and applied to the new checkout.\n"
  "\n"
  "The VERSION argument can be a specific version or tag or branch\n"
  "name.  If the VERSION argument is omitted, then the leaf of the\n"
  "subtree that begins at the current version is used, if there is\n"
  "only a single leaf.  VERSION can also be \"current\" to select the\n"
  "leaf of the current version or \"latest\" to select the most recent\n"
  "check-in.\n"
  "\n"
  "If one or more FILES are listed after the VERSION then only the\n"
  "named files are candidates to be updated, and any updates to them\n"
  "will be treated as edits to the current version. Using a directory\n"
  "name for one of the FILES arguments is the same as using every\n"
  "subdirectory and file beneath that directory.\n"
  "\n"
  "If FILES is omitted, all files in the current checkout are subject\n"
  "to being updated and the version of the current checkout is changed\n"
  "to VERSION. Any uncommitted changes are retained and applied to the\n"
  "new checkout.\n"
  "\n"
  "The -n or --dry-run option causes this command to do a \"dry run\".\n"
  "It prints out what would have happened but does not actually make\n"
  "any changes to the current checkout or the repository.\n"
  "\n"
  "The -v or --verbose option prints status information about\n"
  "unchanged files in addition to those file that actually do change.\n"
  "\n"
  "Options:\n"
  "  --case-sensitive <BOOL> override case-sensitive setting\n"
  "  --debug          print debug information on stdout\n"
  "  --latest         acceptable in place of VERSION, update to latest version\n"
  "  --force-missing  force update if missing content after sync\n"
  "  -n|--dry-run     If given, display instead of run actions\n"
  "  -v|--verbose     print status information about all files\n"
  "  -W|--width <num> Width of lines (default is to auto-detect). Must be >20\n"
  "                   or 0 (= no limit, resulting in a single line per entry).\n"
  "\n"
  "See also: revert";
static const char zHelp425[] =
  "Usage: %fossil user SUBCOMMAND ...  ?-R|--repository FILE?\n"
  "\n"
  "Run various subcommands on users of the open repository or of\n"
  "the repository identified by the -R or --repository option.\n"
  "\n"
  "   %fossil user capabilities USERNAME ?STRING?\n"
  "\n"
  "       Query or set the capabilities for user USERNAME\n"
  "\n"
  "   %fossil user default ?USERNAME?\n"
  "\n"
  "       Query or set the default user.  The default user is the\n"
  "       user for command-line interaction.\n"
  "\n"
  "   %fossil user list\n"
  "   %fossil user ls\n"
  "\n"
  "       List all users known to the repository\n"
  "\n"
  "   %fossil user new ?USERNAME? ?CONTACT-INFO? ?PASSWORD?\n"
  "\n"
  "       Create a new user in the repository.  Users can never be\n"
  "       deleted.  They can be denied all access but they must continue\n"
  "       to exist in the database.\n"
  "\n"
  "   %fossil user password USERNAME ?PASSWORD?\n"
  "\n"
  "       Change the web access password for a user.";
static const char zHelp418[] =
  "Usage: %fossil unversioned SUBCOMMAND ARGS...\n"
  "   or: %fossil uv SUBCOMMAND ARGS..\n"
  "\n"
  "Unversioned files (UV-files) are artifacts that are synced and are available\n"
  "for download but which do not preserve history.  Only the most recent version\n"
  "of each UV-file is retained.  Changes to an UV-file are permanent and cannot\n"
  "be undone, so use appropriate caution with this command.\n"
  "\n"
  "Subcommands:\n"
  "\n"
  "   add FILE ...           Add or update one or more unversioned files in\n"
  "                          the local repository so that they match FILEs\n"
  "                          on disk. Changes are not pushed to other\n"
  "                          repositories until the next sync.\n"
  "\n"
  "   add FILE --as UVFILE   Add or update a single file named FILE on disk\n"
  "                          and UVFILE in the repository unversioned file\n"
  "                          namespace. This variant of the 'add' command allows\n"
  "                          the name to be different in the repository versus\n"
  "                          what appears on disk, but it only allows adding\n"
  "                          a single file at a time.\n"
  "\n"
  "   cat FILE ...           Concatenate the content of FILEs to stdout.\n"
  "\n"
  "   edit FILE              Bring up FILE in a text editor for modification.\n"
  "\n"
  "   export FILE OUTPUT     Write the content of FILE into OUTPUT on disk\n"
  "\n"
  "   list | ls              Show all unversioned files held in the local\n"
  "                          repository.\n"
  "\n"
  "   revert ?URL?           Restore the state of all unversioned files in the\n"
  "                          local repository to match the remote repository\n"
  "                          URL.\n"
  "\n"
  "                          Options:\n"
  "                             -v|--verbose     Extra diagnostic output\n"
  "                             -n|--dryrun      Show what would have happened\n"
  "\n"
  "   remove|rm|delete FILE ...\n"
  "                          Remove unversioned files from the local repository.\n"
  "                          Changes are not pushed to other repositories until\n"
  "                          the next sync.\n"
  "\n"
  "   sync ?URL?             Synchronize the state of all unversioned files with\n"
  "                          the remote repository URL.  The most recent version\n"
  "                          of each file is propagated to all repositories and\n"
  "                          all prior versions are permanently forgotten.\n"
  "\n"
  "                          Options:\n"
  "                             -v|--verbose     Extra diagnostic output\n"
  "                             -n|--dryrun      Show what would have happened\n"
  "\n"
  "   touch FILE ...         Update the TIMESTAMP on all of the listed files\n"
  "\n"
  "Options:\n"
  "\n"
  "  --mtime TIMESTAMP       Use TIMESTAMP instead of \"now\" for the \"add\",\n"
  "                          \"edit\", \"remove\", and \"touch\" subcommands.";
static const char zHelp150[] =
  "If true, automatically send unversioned files as part\n"
  "of a \"fossil clone\" or \"fossil sync\" command.  The\n"
  "default is false, in which case the -u option is\n"
  "needed to clone or sync unversioned files.";
static const char zHelp253[] =
  "Usage: %fossil version ?-verbose|-v?\n"
  "\n"
  "Print the source code version number for the fossil executable.\n"
  "If the verbose option is specified, additional details will\n"
  "be output about what optional features this binary was compiled\n"
  "with";
static const char zHelp151[] =
  "A shell command used to launch your preferred\n"
  "web browser when given a URL as an argument.\n"
  "Defaults to \"start\" on windows, \"open\" on Mac,\n"
  "and \"firefox\" on Unix.";
static const char zHelp271[] =
  "Usage: %fossil whatis NAME\n"
  "\n"
  "Resolve the symbol NAME into its canonical artifact hash\n"
  "artifact name and provide a description of what role that artifact\n"
  "plays.\n"
  "\n"
  "Options:\n"
  "\n"
  "   --type TYPE          Only find artifacts of TYPE (one of: 'ci', 't',\n"
  "                        'w', 'g', or 'e').\n"
  "   -v|--verbose         Provide extra information (such as the RID)";
static const char zHelp452[] =
  "Usage: %fossil wiki (export|create|commit|list) WikiName\n"
  "\n"
  "Run various subcommands to work with wiki entries or tech notes.\n"
  "\n"
  "   %fossil wiki export PAGENAME ?FILE?\n"
  "   %fossil wiki export ?FILE? -t|--technote DATETIME|TECHNOTE-ID\n"
  "\n"
  "      Sends the latest version of either a wiki page or of a tech note\n"
  "      to the given file or standard output.\n"
  "      If PAGENAME is provided, the wiki page will be output. For\n"
  "      a tech note either DATETIME or TECHNOTE-ID must be specified. If\n"
  "      DATETIME is used, the most recently modified tech note with that\n"
  "      DATETIME will be sent.\n"
  "\n"
  "   %fossil wiki (create|commit) PAGENAME ?FILE? ?OPTIONS?\n"
  "\n"
  "      Create a new or commit changes to an existing wiki page or\n"
  "      technote from FILE or from standard input. PAGENAME is the\n"
  "      name of the wiki entry or the timeline comment of the\n"
  "      technote.\n"
  "\n"
  "      Options:\n"
  "        -M|--mimetype TEXT-FORMAT   The mime type of the update.\n"
  "                                    Defaults to the type used by\n"
  "                                    the previous version of the\n"
  "                                    page, or text/x-fossil-wiki.\n"
  "                                    Valid values are: text/x-fossil-wiki,\n"
  "                                    text/markdown and text/plain. fossil,\n"
  "                                    markdown or plain can be specified as\n"
  "                                    synonyms of these values.\n"
  "        -t|--technote DATETIME      Specifies the timestamp of\n"
  "                                    the technote to be created or\n"
  "                                    updated. When updating a tech note\n"
  "                                    the most recently modified tech note\n"
  "                                    with the specified timestamp will be\n"
  "                                    updated.\n"
  "        -t|--technote TECHNOTE-ID   Specifies the technote to be\n"
  "                                    updated by its technote id.\n"
  "        --technote-tags TAGS        The set of tags for a technote.\n"
  "        --technote-bgcolor COLOR    The color used for the technote\n"
  "                                    on the timeline.\n"
  "\n"
  "   %fossil wiki list ?OPTIONS?\n"
  "   %fossil wiki ls ?OPTIONS?\n"
  "\n"
  "      Lists all wiki entries, one per line, ordered\n"
  "      case-insensitively by name.\n"
  "\n"
  "      Options:\n"
  "        -t|--technote               Technotes will be listed instead of\n"
  "                                    pages. The technotes will be in order\n"
  "                                    of timestamp with the most recent\n"
  "                                    first.\n"
  "        -s|--show-technote-ids      The id of the tech note will be listed\n"
  "                                    along side the timestamp. The tech note\n"
  "                                    id will be the first word on each line.\n"
  "                                    This option only applies if the\n"
  "                                    --technote option is also specified.\n"
  "\n"
  "DATETIME may be \"now\" or \"YYYY-MM-DDTHH:MM:SS.SSS\". If in\n"
  "year-month-day form, it may be truncated, the \"T\" may be replaced by\n"
  "a space, and it may also name a timezone offset from UTC as \"-HH:MM\"\n"
  "(westward) or \"+HH:MM\" (eastward). Either no timezone suffix or \"Z\"\n"
  "means UTC.";
#ifdef _WIN32
static const char zHelp457[] =
  "Usage: %fossil winsrv METHOD ?SERVICE-NAME? ?OPTIONS?\n"
  "\n"
  "Where METHOD is one of: create delete show start stop.\n"
  "\n"
  "The winsrv command manages Fossil as a Windows service.  This allows\n"
  "(for example) Fossil to be running in the background when no user\n"
  "is logged in.\n"
  "\n"
  "In the following description of the methods, \"Fossil-DSCM\" will be\n"
  "used as the default SERVICE-NAME:\n"
  "\n"
  "   %fossil winsrv create ?SERVICE-NAME? ?OPTIONS?\n"
  "\n"
  "        Creates a service. Available options include:\n"
  "\n"
  "        -D|--display DISPLAY-NAME\n"
  "\n"
  "             Sets the display name of the service. This name is shown\n"
  "             by graphical interface programs. By default, the display name\n"
  "             equals to the service name.\n"
  "\n"
  "        -S|--start TYPE\n"
  "\n"
  "             Sets the start type of the service. TYPE can be \"manual\",\n"
  "             which means you need to start the service yourself with the\n"
  "             'fossil winsrv start' command or with the \"net start\" command\n"
  "             from the operating system. If TYPE is set to \"auto\", the service\n"
  "             will be started automatically by the system during startup.\n"
  "\n"
  "        -U|--username USERNAME\n"
  "\n"
  "             Specifies the user account which will be used to run the\n"
  "             service. The account needs the \"Logon as a service\" right\n"
  "             enabled in its profile. Specify local accounts as follows:\n"
  "             \".\\USERNAME\". By default, the \"LocalSystem\" account will be\n"
  "             used.\n"
  "\n"
  "        -W|--password PASSWORD\n"
  "\n"
  "             Password for the user account.\n"
  "\n"
  "        The following options are more or less the same as for the \"server\"\n"
  "        command and influence the behaviour of the http server:\n"
  "\n"
  "        --baseurl URL\n"
  "\n"
  "             Use URL as the base (useful for reverse proxies)\n"
  "\n"
  "        -P|--port TCPPORT\n"
  "\n"
  "             Specifies the TCP port (default port is 8080) on which the\n"
  "             server should listen.\n"
  "\n"
  "        -R|--repository REPOSITORY\n"
  "\n"
  "             Specifies the name of the repository to be served.\n"
  "             The repository option may be omitted if the working directory\n"
  "             is within an open checkout.\n"
  "             The REPOSITORY can be a directory (aka folder) that contains\n"
  "             one or more repositories with names ending in \".fossil\".\n"
  "             In that case, the first element of the URL is used to select\n"
  "             among the various repositories.\n"
  "\n"
  "        --notfound URL\n"
  "\n"
  "             If REPOSITORY is a directory that contains one or more\n"
  "             repositories with names of the form \"*.fossil\" then the\n"
  "             first element of the URL  pathname selects among the various\n"
  "             repositories. If the pathname does not select a valid\n"
  "             repository and the --notfound option is available,\n"
  "             then the server redirects (HTTP code 302) to the URL of\n"
  "             --notfound.\n"
  "\n"
  "        --localauth\n"
  "\n"
  "             Enables automatic login if the --localauth option is present\n"
  "             and the \"localauth\" setting is off and the connection is from\n"
  "             localhost.\n"
  "\n"
  "        --repolist\n"
  "\n"
  "             If REPOSITORY is directory, URL \"/\" lists all repositories.\n"
  "\n"
  "        --scgi\n"
  "\n"
  "             Create an SCGI server instead of an HTTP server\n"
  "\n"
  "\n"
  "   %fossil winsrv delete ?SERVICE-NAME?\n"
  "\n"
  "        Deletes a service. If the service is currently running, it will be\n"
  "        stopped first and then deleted.\n"
  "\n"
  "\n"
  "   %fossil winsrv show ?SERVICE-NAME?\n"
  "\n"
  "        Shows how the service is configured and its current state.\n"
  "\n"
  "\n"
  "   %fossil winsrv start ?SERVICE-NAME?\n"
  "\n"
  "        Start the service.\n"
  "\n"
  "\n"
  "   %fossil winsrv stop ?SERVICE-NAME?\n"
  "\n"
  "        Stop the service.\n"
  "\n"
  "\n"
  "NOTE: This command is available on Windows operating systems only and\n"
  "      requires administrative rights on the machine executed.";
#endif
static const char zHelp466[] =
  "Usage: %fossil zip VERSION OUTPUTFILE [OPTIONS]\n"
  "\n"
  "Generate a ZIP archive for a check-in.  If the --name option is\n"
  "used, its argument becomes the name of the top-level directory in the\n"
  "resulting ZIP archive.  If --name is omitted, the top-level directory\n"
  "name is derived from the project name, the check-in date and time, and\n"
  "the artifact ID of the check-in.\n"
  "\n"
  "The GLOBLIST argument to --exclude and --include can be a comma-separated\n"
  "list of glob patterns, where each glob pattern may optionally be enclosed\n"
  "in \"...\" or '...' so that it may contain commas.  If a file matches both\n"
  "--include and --exclude then it is excluded.\n"
  "\n"
  "Options:\n"
  "  -X|--exclude GLOBLIST   Comma-separated list of GLOBs of files to exclude\n"
  "  --include GLOBLIST      Comma-separated list of GLOBs of files to include\n"
  "  --name DIRECTORYNAME    The name of the top-level directory in the archive\n"
  "  -R REPOSITORY           Specify a Fossil repository";
static const CmdOrPage aCommand[] = {
  { "/access_log",              access_log_page,              zHelp430, 0x008 },
  { "/admin_log",               page_admin_log,               zHelp330, 0x008 },
  { "/admin_sql",               sql_page,                     zHelp328, 0x008 },
  { "/admin_th1",               th1_page,                     zHelp329, 0x008 },
  { "/ainfo",                   ainfo_page,                   zHelp031, 0x008 },
  { "/alerts",                  alert_page,                   zHelp018, 0x008 },
  { "/ambiguous",               ambiguous_page,               zHelp270, 0x008 },
  { "/annotate",                annotation_page,              zHelp167, 0x008 },
  { "/announce",                announce_page,                zHelp024, 0x008 },
  { "/artifact",                artifact_page,                zHelp236, 0x008 },
  { "/artifact_stats",          artifact_stats_page,          zHelp364, 0x008 },
  { "/attachadd",               attachadd_page,               zHelp030, 0x008 },
  { "/attachdownload",          attachview_page,              zHelp027, 0x008 },
  { "/attachimage",             attachview_page,              zHelp027, 0x008 },
  { "/attachlist",              attachlist_page,              zHelp026, 0x008 },
  { "/attachview",              attachview_page,              zHelp027, 0x008 },
  { "/background",              background_page,              zHelp186, 0x008 },
  { "/bigbloblist",             bigbloblist_page,             zHelp276, 0x008 },
  { "/blame",                   annotation_page,              zHelp167, 0x008 },
  { "/bloblist",                bloblist_page,                zHelp275, 0x008 },
  { "/brlist",                  brlist_page,                  zHelp043, 0x008 },
  { "/brtimeline",              brtimeline_page,              zHelp044, 0x008 },
  { "/builtin",                 page_builtin_text,            zHelp369, 0x008 },
  { "/cacheget",                cache_getpage,                zHelp056, 0x008 },
  { "/cachestat",               cache_page,                   zHelp055, 0x008 },
  { "/ci",                      ci_page,                      zHelp229, 0x008 },
  { "/ci_edit",                 ci_edit_page,                 zHelp241, 0x008 },
  { "/ci_tags",                 ci_tags_page,                 zHelp228, 0x008 },
  { "/contact_admin",           contact_admin_page,           zHelp023, 0x008 },
  { "/cookies",                 cookie_page,                  zHelp087, 0x008 },
  { "/debug_tktedit",           tktedit_page,                 zHelp398, 0x008 },
  { "/debug_tktnew",            tktnew_page,                  zHelp396, 0x008 },
  { "/dir",                     page_dir,                     zHelp045, 0x008 },
  { "/doc",                     doc_page,                     zHelp183, 0x008 },
  { "/docsrch",                 doc_search_page,              zHelp187, 0x008 },
  { "/download",                download_page,                zHelp072, 0x008 },
  { "/emailblob",               webmail_emailblob_page,       zHelp435, 0x008 },
  { "/emailoutq",               webmail_emailoutq_page,       zHelp436, 0x008 },
  { "/errorlog",                errorlog_page,                zHelp317, 0x008 },
  { "/event",                   event_page,                   zHelp192, 0x008 },
  { "/eventedit",               eventedit_page,               zHelp194, 0x008 },
  { "/fdiff",                   diff_page,                    zHelp233, 0x008 },
  { "/file",                    artifact_page,                zHelp236, 0x008 },
  { "/fileage",                 fileage_page,                 zHelp048, 0x008 },
  { "/finfo",                   finfo_page,                   zHelp210, 0x008 },
  { "/forum",                   forum_main_page,              zHelp219, 0x008 },
  { "/forume1",                 forumnew_page,                zHelp217, 0x008 },
  { "/forume2",                 forumedit_page,               zHelp218, 0x008 },
  { "/forumedit",               forum_page_init,              zHelp215, 0x008 },
  { "/forumnew",                forum_page_init,              zHelp215, 0x008 },
  { "/forumpost",               forumpost_page,               zHelp213, 0x008 },
  { "/forumthread",             forumthread_page,             zHelp214, 0x008 },
  { "/hash-collisions",         hash_collisions_webpage,      zHelp280, 0x008 },
  { "/hash-color-test",         test_hash_color_page,         zHelp389, 0x008 },
  { "/help",                    help_page,                    zHelp177, 0x008 },
  { "/hexdump",                 hexdump_page,                 zHelp235, 0x008 },
  { "/home",                    home_page,                    zHelp437, 0x008 },
  { "/honeypot",                honeypot_page,                zHelp371, 0x008 },
  { "/index",                   home_page,                    zHelp437, 0x008 },
  { "/info",                    info_page,                    zHelp240, 0x008 },
#ifdef FOSSIL_ENABLE_JSON
  { "/json",                    json_page_top,                zHelp243, 0x008 },
#endif
  { "/juvlist",                 uvlist_json_page,             zHelp421, 0x008 },
  { "/leaves",                  leaves_page,                  zHelp164, 0x008 },
  { "/login",                   login_page,                   zHelp248, 0x008 },
  { "/logo",                    logo_page,                    zHelp185, 0x008 },
  { "/logout",                  login_page,                   zHelp248, 0x008 },
  { "/md_rules",                markdown_rules_page,          zHelp440, 0x008 },
  { "/mimetype_list",           mimetype_list_page,           zHelp182, 0x008 },
  { "/mlink",                   mlink_page,                   zHelp211, 0x008 },
  { "/modreq",                  modreq_page,                  zHelp268, 0x008 },
  { "/my",                      login_page,                   zHelp248, 0x008 },
  { "/not_found",               home_page,                    zHelp437, 0x008 },
  { "/praise",                  annotation_page,              zHelp167, 0x008 },
  { "/raw",                     rawartifact_page,             zHelp234, 0x008 },
  { "/rcvfrom",                 rcvfrom_page,                 zHelp341, 0x008 },
  { "/rcvfromlist",             rcvfromlist_page,             zHelp340, 0x008 },
  { "/register",                register_page,                zHelp251, 0x008 },
  { "/repo-tabsize",            repo_tabsize_page,            zHelp363, 0x008 },
  { "/repo_schema",             repo_schema_page,             zHelp361, 0x008 },
  { "/repo_stat1",              repo_stat1_page,              zHelp362, 0x008 },
  { "/reportlist",              view_list,                    zHelp301, 0x008 },
  { "/reports",                 stats_report_page,            zHelp365, 0x008 },
  { "/rptedit",                 view_edit,                    zHelp303, 0x008 },
  { "/rptnew",                  view_edit,                    zHelp303, 0x008 },
  { "/rptsql",                  view_see_sql,                 zHelp302, 0x008 },
  { "/rptview",                 rptview_page,                 zHelp305, 0x008 },
  { "/script.js",               page_script_js,               zHelp367, 0x008 },
  { "/search",                  search_page,                  zHelp310, 0x008 },
  { "/secaudit0",               secaudit0_page,               zHelp315, 0x008 },
  { "/setup",                   setup_page,                   zHelp318, 0x008 },
  { "/setup_access",            setup_access,                 zHelp319, 0x008 },
  { "/setup_adunit",            setup_adunit,                 zHelp326, 0x008 },
  { "/setup_config",            setup_config,                 zHelp323, 0x008 },
  { "/setup_login_group",       setup_login_group,            zHelp320, 0x008 },
  { "/setup_logo",              setup_logo,                   zHelp327, 0x008 },
  { "/setup_modreq",            setup_modreq,                 zHelp325, 0x008 },
  { "/setup_notification",      setup_notification,           zHelp008, 0x008 },
  { "/setup_settings",          setup_settings,               zHelp322, 0x008 },
  { "/setup_skin",              setup_skin,                   zHelp345, 0x008 },
  { "/setup_skin_admin",        setup_skin_admin,             zHelp343, 0x008 },
  { "/setup_skinedit",          setup_skinedit,               zHelp344, 0x008 },
  { "/setup_smtp",              setup_smtp,                   zHelp350, 0x008 },
  { "/setup_smtp_route",        setup_smtp_route,             zHelp351, 0x008 },
  { "/setup_timeline",          setup_timeline,               zHelp321, 0x008 },
  { "/setup_ucap_list",         setup_ucap_list,              zHelp335, 0x008 },
  { "/setup_uedit",             user_edit,                    zHelp336, 0x008 },
  { "/setup_ulist",             setup_ulist,                  zHelp333, 0x008 },
  { "/setup_ulist_notes",       setup_ulist_notes,            zHelp334, 0x008 },
  { "/setup_wiki",              setup_wiki,                   zHelp324, 0x008 },
  { "/shun",                    shun_page,                    zHelp339, 0x008 },
  { "/sitemap",                 sitemap_page,                 zHelp342, 0x008 },
  { "/sqlar",                   baseline_zip_page,            zHelp468, 0x008 },
  { "/srchsetup",               page_srchsetup,               zHelp331, 0x008 },
  { "/stat",                    stat_page,                    zHelp358, 0x008 },
  { "/style.css",               page_style_css,               zHelp368, 0x008 },
  { "/subscribe",               subscribe_page,               zHelp017, 0x008 },
  { "/subscribers",             subscriber_list_page,         zHelp020, 0x008 },
  { "/taglist",                 taglist_page,                 zHelp379, 0x008 },
  { "/tagtimeline",             tagtimeline_page,             zHelp380, 0x008 },
  { "/takeitprivate",           takeitprivate_page,           zHelp316, 0x008 },
  { "/tarball",                 tarball_page,                 zHelp383, 0x008 },
  { "/technote",                event_page,                   zHelp192, 0x008 },
  { "/technoteedit",            eventedit_page,               zHelp194, 0x008 },
  { "/test-all-help",           test_all_help_page,           zHelp178, 0x008 },
  { "/test-backlinks",          backlink_timeline_page,       zHelp227, 0x008 },
  { "/test-builtin-files",      test_builtin_list_page,       zHelp050, 0x008 },
  { "/test-captcha",            captcha_test,                 zHelp058, 0x008 },
  { "/test-ftsdocs",            search_data_page,             zHelp314, 0x008 },
  { "/test-piechart",           piechart_test_page,           zHelp285, 0x008 },
  { "/test-rename-list",        test_rename_list_page,        zHelp284, 0x008 },
  { "/test-warning",            test_warning_page,            zHelp261, 0x008 },
  { "/test_env",                page_test_env,                zHelp370, 0x008 },
  { "/ticket",                  tkt_home_page,                zHelp403, 0x008 },
  { "/timeline",                page_timeline,                zHelp390, 0x008 },
  { "/timeline.rss",            page_timeline_rss,            zHelp306, 0x008 },
  { "/timewarps",               test_timewarp_page,           zHelp393, 0x008 },
  { "/tinfo",                   tinfo_page,                   zHelp239, 0x008 },
  { "/tktedit",                 tktedit_page,                 zHelp398, 0x008 },
  { "/tkthistory",              tkthistory_page,              zHelp401, 0x008 },
  { "/tktnew",                  tktnew_page,                  zHelp396, 0x008 },
  { "/tktsetup",                tktsetup_page,                zHelp405, 0x008 },
  { "/tktsetup_change",         tktsetup_change_page,         zHelp408, 0x008 },
  { "/tktsetup_com",            tktsetup_com_page,            zHelp407, 0x008 },
  { "/tktsetup_editpage",       tktsetup_editpage_page,       zHelp411, 0x008 },
  { "/tktsetup_keytplt",        tktsetup_keytplt_page,        zHelp414, 0x008 },
  { "/tktsetup_newpage",        tktsetup_newpage_page,        zHelp409, 0x008 },
  { "/tktsetup_reportlist",     tktsetup_reportlist,          zHelp412, 0x008 },
  { "/tktsetup_rpttplt",        tktsetup_rpttplt_page,        zHelp413, 0x008 },
  { "/tktsetup_tab",            tktsetup_tab_page,            zHelp406, 0x008 },
  { "/tktsetup_timeline",       tktsetup_timeline_page,       zHelp415, 0x008 },
  { "/tktsetup_viewpage",       tktsetup_viewpage_page,       zHelp410, 0x008 },
  { "/tktsrch",                 tkt_srchpage,                 zHelp404, 0x008 },
  { "/tkttimeline",             tkttimeline_page,             zHelp400, 0x008 },
  { "/tktview",                 tktview_page,                 zHelp395, 0x008 },
  { "/tree",                    page_tree,                    zHelp046, 0x008 },
  { "/unsubscribe",             unsubscribe_page,             zHelp019, 0x008 },
  { "/urllist",                 urllist_page,                 zHelp360, 0x008 },
  { "/uv",                      doc_page,                     zHelp183, 0x008 },
  { "/uvlist",                  uvlist_page,                  zHelp420, 0x008 },
  { "/vdiff",                   vdiff_page,                   zHelp232, 0x008 },
  { "/version",                 test_version_page,            zHelp254, 0x008 },
  { "/vinfo",                   ci_page,                      zHelp229, 0x008 },
  { "/vpatch",                  vpatch_page,                  zHelp175, 0x008 },
  { "/waliassetup",             page_waliassetup,             zHelp332, 0x008 },
  { "/wcontent",                wcontent_page,                zHelp450, 0x008 },
  { "/wdiff",                   wdiff_page,                   zHelp449, 0x008 },
  { "/webmail",                 webmail_page,                 zHelp434, 0x008 },
  { "/wfind",                   wfind_page,                   zHelp451, 0x008 },
  { "/whatis",                  artifact_page,                zHelp236, 0x008 },
  { "/whistory",                whistory_page,                zHelp448, 0x008 },
  { "/wiki",                    wiki_page,                    zHelp444, 0x008 },
  { "/wiki_rules",              wiki_rules_page,              zHelp441, 0x008 },
  { "/wikiappend",              wikiappend_page,              zHelp447, 0x008 },
  { "/wikiedit",                wikiedit_page,                zHelp445, 0x008 },
  { "/wikihelp",                wiki_helppage,                zHelp442, 0x008 },
  { "/wikinew",                 wikinew_page,                 zHelp446, 0x008 },
  { "/wikisrch",                wiki_srchpage,                zHelp443, 0x008 },
  { "/winfo",                   winfo_page,                   zHelp231, 0x008 },
  { "/xfer",                    page_xfer,                    zHelp458, 0x008 },
  { "/xfersetup",               xfersetup_page,               zHelp460, 0x008 },
  { "/xfersetup_com",           xfersetup_com_page,           zHelp461, 0x008 },
  { "/xfersetup_commit",        xfersetup_commit_page,        zHelp463, 0x008 },
  { "/xfersetup_push",          xfersetup_push_page,          zHelp462, 0x008 },
  { "/xfersetup_ticket",        xfersetup_ticket_page,        zHelp464, 0x008 },
  { "/zip",                     baseline_zip_page,            zHelp468, 0x008 },
  { "3-way-merge",              delta_3waymerge_cmd,          zHelp267, 0x012 },
  { "access-log",               0,                            zHelp092, 0x120 },
  { "add",                      add_cmd,                      zHelp001, 0x011 },
  { "addremove",                addremove_cmd,                zHelp005, 0x011 },
  { "admin-log",                0,                            zHelp093, 0x120 },
  { "alerts",                   alert_cmd,                    zHelp016, 0x012 },
  { "all",                      all_cmd,                      zHelp025, 0x011 },
#if defined(_WIN32)
  { "allow-symlinks",           0,                            zHelp094, 0x160 },
#endif
#if !defined(_WIN32)
  { "allow-symlinks",           0,                            zHelp095, 0x160 },
#endif
  { "amend",                    ci_amend_cmd,                 zHelp242, 0x011 },
  { "annotate",                 annotate_cmd,                 zHelp170, 0x011 },
  { "artifact",                 artifact_cmd,                 zHelp078, 0x012 },
  { "attachment",               attachment_cmd,               zHelp032, 0x012 },
  { "auto-captcha",             0,                            zHelp096, 0x120 },
  { "auto-hyperlink",           0,                            zHelp097, 0x120 },
  { "auto-shun",                0,                            zHelp098, 0x120 },
  { "autosync",                 0,                            zHelp099, 0x020 },
  { "autosync-tries",           0,                            zHelp100, 0x020 },
  { "backoffice",               backoffice_command,           zHelp035, 0x012 },
  { "backoffice-disable",       0,                            zHelp102, 0x120 },
  { "backoffice-logfile",       0,                            zHelp103, 0x020 },
  { "backoffice-nodelay",       0,                            zHelp101, 0x120 },
  { "binary-glob",              0,                            zHelp104, 0x0e0 },
  { "bisect",                   bisect_cmd,                   zHelp036, 0x011 },
  { "blame",                    annotate_cmd,                 zHelp170, 0x011 },
  { "branch",                   branch_cmd,                   zHelp042, 0x011 },
  { "bundle",                   bundle_cmd,                   zHelp053, 0x011 },
  { "cache",                    cache_cmd,                    zHelp054, 0x012 },
#if !(defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__))
  { "case-sensitive",           0,                            zHelp106, 0x120 },
#endif
#if defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__)
  { "case-sensitive",           0,                            zHelp105, 0x120 },
#endif
  { "cat",                      cat_cmd,                      zHelp209, 0x011 },
  { "cgi",                      cmd_cgi,                      zHelp255, 0x012 },
  { "changes",                  status_cmd,                   zHelp059, 0x011 },
  { "checkout",                 checkout_cmd,                 zHelp068, 0x012 },
  { "ci",                       commit_cmd,                   zHelp066, 0x012 },
  { "clean",                    clean_cmd,                    zHelp063, 0x011 },
  { "clean-glob",               0,                            zHelp107, 0x0e0 },
  { "clearsign",                0,                            zHelp108, 0x120 },
  { "clone",                    clone_cmd,                    zHelp071, 0x011 },
  { "close",                    close_cmd,                    zHelp070, 0x012 },
  { "co",                       checkout_cmd,                 zHelp068, 0x012 },
  { "comment-format",           0,                            zHelp109, 0x020 },
  { "commit",                   commit_cmd,                   zHelp066, 0x011 },
  { "configuration",            configuration_cmd,            zHelp074, 0x012 },
  { "crlf-glob",                0,                            zHelp110, 0x0e0 },
  { "crnl-glob",                0,                            zHelp111, 0x0e0 },
  { "dbstat",                   dbstat_cmd,                   zHelp359, 0x012 },
  { "deconstruct",              deconstruct_cmd,              zHelp297, 0x012 },
  { "default-perms",            0,                            zHelp112, 0x020 },
  { "delete",                   delete_cmd,                   zHelp002, 0x011 },
  { "descendants",              descendants_cmd,              zHelp162, 0x012 },
  { "diff",                     diff_cmd,                     zHelp173, 0x011 },
  { "diff-binary",              0,                            zHelp113, 0x120 },
  { "diff-command",             0,                            zHelp114, 0x020 },
  { "dont-push",                0,                            zHelp115, 0x120 },
  { "dotfiles",                 0,                            zHelp116, 0x160 },
  { "editor",                   0,                            zHelp117, 0x020 },
  { "email-self",               0,                            zHelp014, 0x020 },
  { "email-send-command",       0,                            zHelp011, 0x020 },
  { "email-send-db",            0,                            zHelp013, 0x020 },
  { "email-send-dir",           0,                            zHelp012, 0x020 },
  { "email-send-method",        0,                            zHelp010, 0x020 },
  { "email-send-relayhost",     0,                            zHelp015, 0x020 },
  { "empty-dirs",               0,                            zHelp118, 0x0e0 },
  { "encoding-glob",            0,                            zHelp119, 0x0e0 },
#if !defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
  { "exec-rel-paths",           0,                            zHelp121, 0x120 },
#endif
#if defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
  { "exec-rel-paths",           0,                            zHelp120, 0x120 },
#endif
  { "export",                   export_cmd,                   zHelp196, 0x011 },
  { "extras",                   extras_cmd,                   zHelp062, 0x011 },
  { "finfo",                    finfo_cmd,                    zHelp208, 0x011 },
  { "forget",                   delete_cmd,                   zHelp002, 0x012 },
  { "fts-config",               fts_config_cmd,               zHelp313, 0x012 },
#ifdef FOSSIL_HAVE_FUSEFS
  { "fusefs",                   fusefs_cmd,                   zHelp221, 0x011 },
#endif
  { "gdiff",                    diff_cmd,                     zHelp173, 0x011 },
  { "gdiff-command",            0,                            zHelp122, 0x020 },
  { "gmerge-command",           0,                            zHelp123, 0x020 },
  { "grep",                     re_grep_cmd,                  zHelp299, 0x011 },
  { "hash-digits",              0,                            zHelp124, 0x020 },
  { "hash-policy",              hash_policy_command,          zHelp224, 0x012 },
  { "help",                     help_cmd,                     zHelp180, 0x011 },
  { "http",                     cmd_http,                     zHelp256, 0x012 },
  { "http-port",                0,                            zHelp125, 0x020 },
  { "https-login",              0,                            zHelp126, 0x120 },
  { "ignore-glob",              0,                            zHelp127, 0x0e0 },
  { "import",                   import_cmd,                   zHelp225, 0x011 },
  { "info",                     info_cmd,                     zHelp226, 0x011 },
  { "init",                     create_repository_cmd,        zHelp089, 0x011 },
#ifdef FOSSIL_ENABLE_JSON
  { "json",                     json_cmd_top,                 zHelp244, 0x011 },
#endif
  { "keep-glob",                0,                            zHelp128, 0x0e0 },
  { "leaves",                   leaves_cmd,                   zHelp163, 0x012 },
  { "localauth",                0,                            zHelp129, 0x120 },
  { "ls",                       ls_cmd,                       zHelp061, 0x011 },
  { "main-branch",              0,                            zHelp130, 0x020 },
  { "manifest",                 0,                            zHelp131, 0x060 },
  { "max-loadavg",              0,                            zHelp132, 0x020 },
  { "max-upload",               0,                            zHelp133, 0x020 },
  { "md5sum",                   md5sum_test,                  zHelp265, 0x012 },
  { "merge",                    merge_cmd,                    zHelp266, 0x011 },
  { "mtime-changes",            0,                            zHelp134, 0x120 },
  { "mv",                       mv_cmd,                       zHelp006, 0x011 },
#if FOSSIL_ENABLE_LEGACY_MV_RM
  { "mv-rm-files",              0,                            zHelp135, 0x120 },
#endif
  { "new",                      create_repository_cmd,        zHelp089, 0x012 },
  { "open",                     cmd_open,                     zHelp091, 0x011 },
  { "pgp-command",              0,                            zHelp136, 0x020 },
  { "pop3d",                    pop3d_command,                zHelp354, 0x012 },
  { "praise",                   annotate_cmd,                 zHelp170, 0x011 },
  { "proxy",                    0,                            zHelp137, 0x020 },
  { "publish",                  publish_cmd,                  zHelp288, 0x011 },
  { "pull",                     pull_cmd,                     zHelp372, 0x011 },
  { "purge",                    purge_cmd,                    zHelp289, 0x012 },
  { "push",                     push_cmd,                     zHelp373, 0x011 },
  { "rebuild",                  rebuild_database,             zHelp290, 0x011 },
  { "reconstruct",              reconstruct_cmd,              zHelp296, 0x012 },
  { "redo",                     undo_cmd,                     zHelp416, 0x012 },
  { "relative-paths",           0,                            zHelp138, 0x120 },
  { "remote-url",               remote_url_cmd,               zHelp375, 0x011 },
  { "rename",                   mv_cmd,                       zHelp006, 0x012 },
  { "reparent",                 reparent_cmd,                 zHelp378, 0x012 },
  { "repo-cksum",               0,                            zHelp139, 0x120 },
  { "revert",                   revert_cmd,                   zHelp423, 0x011 },
  { "rm",                       delete_cmd,                   zHelp002, 0x011 },
  { "rss",                      cmd_timeline_rss,             zHelp307, 0x012 },
  { "scrub",                    scrub_cmd,                    zHelp294, 0x012 },
  { "search",                   search_cmd,                   zHelp309, 0x012 },
  { "self-register",            0,                            zHelp140, 0x120 },
  { "server",                   cmd_webserver,                zHelp258, 0x012 },
  { "settings",                 setting_cmd,                  zHelp152, 0x011 },
  { "sha1sum",                  sha1sum_test,                 zHelp337, 0x012 },
  { "sha3sum",                  sha3sum_test,                 zHelp338, 0x012 },
  { "shell",                    shell_cmd,                    zHelp220, 0x012 },
  { "smtpd",                    smtp_server,                  zHelp353, 0x012 },
  { "sql",                      cmd_sqlite3,                  zHelp355, 0x011 },
  { "sqlar",                    sqlar_cmd,                    zHelp467, 0x012 },
  { "sqlite3",                  cmd_sqlite3,                  zHelp355, 0x012 },
  { "ssh-command",              0,                            zHelp141, 0x020 },
  { "ssl-ca-location",          0,                            zHelp142, 0x020 },
  { "ssl-identity",             0,                            zHelp143, 0x020 },
  { "stash",                    stash_cmd,                    zHelp357, 0x011 },
  { "status",                   status_cmd,                   zHelp059, 0x011 },
  { "sync",                     sync_cmd,                     zHelp374, 0x011 },
  { "tag",                      tag_cmd,                      zHelp377, 0x011 },
  { "tarball",                  tarball_cmd,                  zHelp382, 0x012 },
#ifdef FOSSIL_ENABLE_TCL
  { "tcl",                      0,                            zHelp144, 0x120 },
#endif
#ifdef FOSSIL_ENABLE_TCL
  { "tcl-setup",                0,                            zHelp145, 0x0e0 },
#endif
  { "test-add-alerts",          test_add_alert_cmd,           zHelp022, 0x014 },
  { "test-agg-cksum",           test_agg_cksum_cmd,           zHelp432, 0x014 },
  { "test-alert",               test_alert_cmd,               zHelp021, 0x014 },
  { "test-all-help",            test_all_help_cmd,            zHelp176, 0x014 },
  { "test-ambiguous",           test_ambiguous_cmd,           zHelp273, 0x014 },
  { "test-ancestor-path",       ancestor_path_test_cmd,       zHelp282, 0x014 },
  { "test-backoffice-lease",    test_backoffice_lease,        zHelp034, 0x014 },
  { "test-builtin-get",         test_builtin_get,             zHelp051, 0x014 },
  { "test-builtin-list",        test_builtin_list,            zHelp049, 0x014 },
  { "test-canonical-name",      cmd_test_canonical_name,      zHelp202, 0x014 },
  { "test-captcha",             test_captcha,                 zHelp057, 0x014 },
  { "test-clusters",            test_clusters_cmd,            zHelp293, 0x014 },
  { "test-comment-format",      test_comment_format,          zHelp073, 0x014 },
  { "test-commit-warning",      test_commit_warning,          zHelp065, 0x014 },
  { "test-compress",            compress_cmd,                 zHelp038, 0x014 },
  { "test-compress-2",          compress2_cmd,                zHelp039, 0x014 },
  { "test-contains-selector",   contains_selector_cmd,        zHelp366, 0x014 },
  { "test-content-deltify",     test_content_deltify_cmd,     zHelp082, 0x014 },
  { "test-content-erase",       test_content_erase,           zHelp086, 0x014 },
  { "test-content-put",         test_content_put_cmd,         zHelp080, 0x014 },
  { "test-content-rawget",      test_content_rawget_cmd,      zHelp079, 0x014 },
  { "test-content-undelta",     test_content_undelta_cmd,     zHelp081, 0x014 },
  { "test-convert-stext",       test_convert_stext,           zHelp312, 0x014 },
  { "test-create-clusters",     test_createcluster_cmd,       zHelp292, 0x014 },
  { "test-crosslink",           test_crosslink_cmd,           zHelp264, 0x014 },
  { "test-cycle-compress",      test_cycle_compress,          zHelp041, 0x014 },
  { "test-database-names",      test_database_name_cmd,       zHelp156, 0x014 },
  { "test-date-format",         test_date_format,             zHelp064, 0x014 },
  { "test-decode-email",        test_email_decode_cmd,        zHelp433, 0x014 },
  { "test-decode64",            test_decode64_cmd,            zHelp189, 0x014 },
  { "test-delta",               cmd_test_delta,               zHelp161, 0x014 },
  { "test-delta-analyze",       delta_analyze_cmd,            zHelp159, 0x014 },
  { "test-delta-apply",         delta_apply_cmd,              zHelp160, 0x014 },
  { "test-delta-create",        delta_create_cmd,             zHelp158, 0x014 },
  { "test-describe-artifacts",  test_describe_artifacts_cmd,  zHelp274, 0x014 },
  { "test-detach",              test_detach_cmd,              zHelp291, 0x014 },
  { "test-diff",                test_diff_cmd,                zHelp166, 0x014 },
  { "test-dir-size",            test_dir_size_cmd,            zHelp207, 0x014 },
  { "test-echo",                test_echo_cmd,                zHelp260, 0x014 },
  { "test-emailblob-refcheck",  test_refcheck_emailblob,      zHelp352, 0x014 },
  { "test-encode64",            test_encode64_cmd,            zHelp188, 0x014 },
  { "test-etag",                test_etag_cmd,                zHelp191, 0x014 },
  { "test-file-copy",           test_file_copy,               zHelp198, 0x014 },
  { "test-file-environment",    cmd_test_file_environment,    zHelp201, 0x014 },
  { "test-fileage",             test_fileage_cmd,             zHelp047, 0x014 },
  { "test-filezip",             filezip_cmd,                  zHelp465, 0x014 },
  { "test-find-mx",             test_find_mx,                 zHelp346, 0x014 },
  { "test-find-pivot",          test_find_pivot,              zHelp286, 0x014 },
  { "test-fingerprint",         test_fingerprint,             zHelp157, 0x014 },
  { "test-forumthread",         forumthread_cmd,              zHelp212, 0x014 },
  { "test-glob",                glob_test_cmd,                zHelp222, 0x014 },
  { "test-grep",                re_test_grep,                 zHelp298, 0x014 },
  { "test-gzip",                test_gzip_cmd,                zHelp223, 0x014 },
  { "test-hash-color",          test_hash_color,              zHelp388, 0x014 },
#if 0
  { "test-hash-from-path*",     test_hash_from_path_cmd,      zHelp295, 0x014 },
#endif
  { "test-hash-passwords",      user_hash_passwords_cmd,      zHelp427, 0x014 },
  { "test-html-tidy",           test_html_tidy,               zHelp455, 0x014 },
  { "test-html-to-text",        test_html_to_text,            zHelp456, 0x014 },
  { "test-http",                cmd_test_http,                zHelp257, 0x014 },
  { "test-integrity",           test_integrity,               zHelp083, 0x014 },
  { "test-ishuman",             test_ishuman,                 zHelp247, 0x014 },
  { "test-isspace",             isspace_cmd,                  zHelp037, 0x014 },
  { "test-leaf-ambiguity",      leaf_ambiguity_warning_test,  zHelp245, 0x014 },
  { "test-list-page",           test_list_page,               zHelp300, 0x014 },
  { "test-list-webpage",        cmd_test_webpage_list,        zHelp179, 0x014 },
  { "test-loadavg",             loadavg_test_cmd,             zHelp246, 0x014 },
  { "test-looks-like-utf",      looks_like_utf_test_cmd,      zHelp252, 0x014 },
  { "test-mailbox-hashname",    alert_test_mailbox_hashname,  zHelp009, 0x014 },
  { "test-markdown-render",     test_markdown_render,         zHelp453, 0x014 },
  { "test-match",               test_match_cmd,               zHelp308, 0x014 },
  { "test-mimetype",            mimetype_test_cmd,            zHelp181, 0x014 },
  { "test-missing",             test_missing,                 zHelp085, 0x014 },
  { "test-move-repository",     move_repo_cmd,                zHelp088, 0x014 },
  { "test-name-changes",        test_name_change,             zHelp283, 0x014 },
  { "test-name-to-id",          test_name_to_id,              zHelp269, 0x014 },
  { "test-obscure",             test_obscure_cmd,             zHelp190, 0x014 },
  { "test-orphans",             test_orphans,                 zHelp084, 0x014 },
  { "test-parse-all-blobs",     manifest_test_parse_all_blobs_cmd,    zHelp263, 0x014 },
  { "test-parse-manifest",      manifest_test_parse_cmd,      zHelp262, 0x014 },
  { "test-phantoms",            test_phatoms_cmd,             zHelp279, 0x014 },
  { "test-process-id",          test_process_id_command,      zHelp033, 0x014 },
  { "test-prompt-password",     test_prompt_password_cmd,     zHelp429, 0x014 },
  { "test-prompt-user",         test_prompt_user_cmd,         zHelp428, 0x014 },
  { "test-rawdiff",             test_rawdiff_cmd,             zHelp165, 0x014 },
  { "test-relative-name",       cmd_test_relative_name,       zHelp203, 0x014 },
  { "test-reserved-names",      test_reserved_names,          zHelp000, 0x014 },
  { "test-search-stext",        test_search_stext,            zHelp311, 0x014 },
  { "test-set-mtime",           test_set_mtime,               zHelp199, 0x014 },
  { "test-shortest-path",       shortest_path_test_cmd,       zHelp281, 0x014 },
  { "test-simplify-name",       cmd_test_simplify_name,       zHelp200, 0x014 },
  { "test-smtp-probe",          test_smtp_probe,              zHelp347, 0x014 },
  { "test-smtp-send",           test_smtp_send,               zHelp349, 0x014 },
  { "test-smtp-senddata",       test_smtp_senddata,           zHelp348, 0x014 },
  { "test-subtree",             test_subtree_cmd,             zHelp052, 0x014 },
  { "test-tag",                 testtag_cmd,                  zHelp376, 0x014 },
  { "test-tarball",             test_tarball_cmd,             zHelp381, 0x014 },
  { "test-tempname",            file_test_tempname,           zHelp205, 0x014 },
  { "test-th-eval",             test_th_eval,                 zHelp385, 0x014 },
#ifdef FOSSIL_ENABLE_TH1_HOOKS
  { "test-th-hook",             test_th_hook,                 zHelp387, 0x014 },
#endif
  { "test-th-render",           test_th_render,               zHelp384, 0x014 },
  { "test-th-source",           test_th_source,               zHelp386, 0x014 },
  { "test-ticket-rebuild",      test_ticket_rebuild,          zHelp394, 0x014 },
  { "test-timespan",            test_timespan_cmd,            zHelp154, 0x014 },
  { "test-timewarp-list",       test_timewarp_cmd,            zHelp392, 0x014 },
  { "test-topological-sort",    test_topological_sort,        zHelp197, 0x014 },
  { "test-tree-name",           cmd_test_tree_name,           zHelp204, 0x014 },
  { "test-unclustered",         test_unclusterd_cmd,          zHelp278, 0x014 },
  { "test-uncompress",          uncompress_cmd,               zHelp040, 0x014 },
  { "test-unsent",              test_unsent_cmd,              zHelp277, 0x014 },
  { "test-urlparser",           cmd_test_urlparser,           zHelp424, 0x014 },
  { "test-usernames",           test_usernames_cmd,           zHelp426, 0x014 },
  { "test-valid-for-windows",   file_test_valid_for_windows,  zHelp206, 0x014 },
  { "test-var-get",             test_var_get_cmd,             zHelp076, 0x014 },
  { "test-var-list",            test_var_list_cmd,            zHelp075, 0x014 },
  { "test-var-set",             test_var_set_cmd,             zHelp077, 0x014 },
  { "test-verify-all",          verify_all_cmd,               zHelp431, 0x014 },
  { "test-whatis-all",          test_whatis_all_cmd,          zHelp272, 0x014 },
  { "test-wiki-render",         test_wiki_render,             zHelp454, 0x014 },
  { "test-without-rowid",       test_without_rowid,           zHelp155, 0x014 },
  { "test-xfer",                cmd_test_xfer,                zHelp459, 0x014 },
#ifdef FOSSIL_ENABLE_TH1_DOCS
  { "th1-docs",                 0,                            zHelp146, 0x120 },
#endif
#ifdef FOSSIL_ENABLE_TH1_HOOKS
  { "th1-hooks",                0,                            zHelp147, 0x120 },
#endif
  { "th1-setup",                0,                            zHelp148, 0x0e0 },
  { "th1-uri-regexp",           0,                            zHelp149, 0x0e0 },
  { "ticket",                   ticket_cmd,                   zHelp402, 0x012 },
  { "timeline",                 timeline_cmd,                 zHelp391, 0x011 },
  { "ui",                       cmd_webserver,                zHelp258, 0x011 },
  { "undo",                     undo_cmd,                     zHelp416, 0x011 },
  { "unpublished",              unpublished_cmd,              zHelp287, 0x011 },
  { "unset",                    setting_cmd,                  zHelp152, 0x012 },
  { "unversioned",              unversioned_cmd,              zHelp418, 0x011 },
  { "update",                   update_cmd,                   zHelp422, 0x011 },
  { "user",                     user_cmd,                     zHelp425, 0x012 },
  { "uv",                       unversioned_cmd,              zHelp418, 0x012 },
  { "uv-sync",                  0,                            zHelp150, 0x120 },
  { "version",                  version_cmd,                  zHelp253, 0x011 },
  { "web-browser",              0,                            zHelp151, 0x020 },
  { "whatis",                   whatis_cmd,                   zHelp271, 0x012 },
  { "wiki",                     wiki_cmd,                     zHelp452, 0x012 },
#ifdef _WIN32
  { "winsrv",                   cmd_win32_service,            zHelp457, 0x012 },
#endif
  { "zip",                      zip_cmd,                      zHelp466, 0x012 },
};
#define FOSSIL_FIRST_CMD 184
const Setting aSetting[] = {
  { "access-log",           0,                   0, 0, 0, "off"        },
  { "admin-log",            0,                   0, 0, 0, "off"        },
#if defined(_WIN32)
  { "allow-symlinks",       0,                   0, 1, 0, "off"        },
#endif
#if !defined(_WIN32)
  { "allow-symlinks",       0,                   0, 1, 0, "on"         },
#endif
  { "auto-captcha",         "autocaptcha",       0, 0, 0, "on"         },
  { "auto-hyperlink",       0,                   0, 0, 0, "on"         },
  { "auto-shun",            0,                   0, 0, 0, "on"         },
  { "autosync",             0,                  16, 0, 0, "on"         },
  { "autosync-tries",       0,                  16, 0, 0, "1"          },
  { "backoffice-disable",   0,                   0, 0, 0, "off"        },
  { "backoffice-logfile",   0,                  40, 0, 0, ""           },
  { "backoffice-nodelay",   0,                   0, 0, 0, "off"        },
  { "binary-glob",          0,                  40, 1, 1, ""           },
#if !(defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__))
  { "case-sensitive",       0,                   0, 0, 0, "on"         },
#endif
#if defined(_WIN32)||defined(__CYGWIN__)||defined(__DARWIN__)
  { "case-sensitive",       0,                   0, 0, 0, "off"        },
#endif
  { "clean-glob",           0,                  40, 1, 1, ""           },
  { "clearsign",            0,                   0, 0, 0, "off"        },
  { "comment-format",       0,                  16, 0, 0, "1"          },
  { "crlf-glob",            0,                  40, 1, 1, ""           },
  { "crnl-glob",            0,                  40, 1, 1, ""           },
  { "default-perms",        0,                  16, 0, 0, "u"          },
  { "diff-binary",          0,                   0, 0, 0, "on"         },
  { "diff-command",         0,                  40, 0, 0, ""           },
  { "dont-push",            0,                   0, 0, 0, "off"        },
  { "dotfiles",             0,                   0, 1, 0, "off"        },
  { "editor",               0,                  32, 0, 0, ""           },
  { "email-self",           0,                  40, 0, 0, ""           },
  { "email-send-command",   0,                  40, 0, 0, ""           },
  { "email-send-db",        0,                  40, 0, 0, ""           },
  { "email-send-dir",       0,                  40, 0, 0, ""           },
  { "email-send-method",    0,                   5, 0, 0, "off"        },
  { "email-send-relayhost", 0,                  40, 0, 0, ""           },
  { "empty-dirs",           0,                  40, 1, 1, ""           },
  { "encoding-glob",        0,                  40, 1, 1, ""           },
#if !defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
  { "exec-rel-paths",       0,                   0, 0, 0, "off"        },
#endif
#if defined(FOSSIL_ENABLE_EXEC_REL_PATHS)
  { "exec-rel-paths",       0,                   0, 0, 0, "on"         },
#endif
  { "gdiff-command",        0,                  40, 0, 0, "gdiff"      },
  { "gmerge-command",       0,                  40, 0, 0, ""           },
  { "hash-digits",          0,                   5, 0, 0, "10"         },
  { "http-port",            0,                  16, 0, 0, "8080"       },
  { "https-login",          0,                   0, 0, 0, "off"        },
  { "ignore-glob",          0,                  40, 1, 1, ""           },
  { "keep-glob",            0,                  40, 1, 1, ""           },
  { "localauth",            0,                   0, 0, 0, "off"        },
  { "main-branch",          0,                  40, 0, 0, "trunk"      },
  { "manifest",             0,                   5, 1, 0, ""           },
  { "max-loadavg",          0,                  25, 0, 0, "0.0"        },
  { "max-upload",           0,                  25, 0, 0, "250000"     },
  { "mtime-changes",        0,                   0, 0, 0, "on"         },
#if FOSSIL_ENABLE_LEGACY_MV_RM
  { "mv-rm-files",          0,                   0, 0, 0, "off"        },
#endif
  { "pgp-command",          0,                  40, 0, 0, ""           },
  { "proxy",                0,                  32, 0, 0, "off"        },
  { "relative-paths",       0,                   0, 0, 0, "on"         },
  { "repo-cksum",           0,                   0, 0, 0, "on"         },
  { "self-register",        0,                   0, 0, 0, "off"        },
  { "ssh-command",          0,                  40, 0, 0, ""           },
  { "ssl-ca-location",      0,                  40, 0, 0, ""           },
  { "ssl-identity",         0,                  40, 0, 0, ""           },
#ifdef FOSSIL_ENABLE_TCL
  { "tcl",                  0,                   0, 0, 0, "off"        },
#endif
#ifdef FOSSIL_ENABLE_TCL
  { "tcl-setup",            0,                  40, 1, 1, ""           },
#endif
#ifdef FOSSIL_ENABLE_TH1_DOCS
  { "th1-docs",             0,                   0, 0, 0, "off"        },
#endif
#ifdef FOSSIL_ENABLE_TH1_HOOKS
  { "th1-hooks",            0,                   0, 0, 0, "off"        },
#endif
  { "th1-setup",            0,                  40, 1, 1, ""           },
  { "th1-uri-regexp",       0,                  40, 1, 1, ""           },
  { "uv-sync",              0,                   0, 0, 0, "off"        },
  { "web-browser",          0,                  30, 0, 0, ""           },
{0,0,0,0,0,0}};
